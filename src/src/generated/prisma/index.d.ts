
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model wp_actionscheduler_actions
 * 
 */
export type wp_actionscheduler_actions = $Result.DefaultSelection<Prisma.$wp_actionscheduler_actionsPayload>
/**
 * Model wp_actionscheduler_claims
 * 
 */
export type wp_actionscheduler_claims = $Result.DefaultSelection<Prisma.$wp_actionscheduler_claimsPayload>
/**
 * Model wp_actionscheduler_groups
 * 
 */
export type wp_actionscheduler_groups = $Result.DefaultSelection<Prisma.$wp_actionscheduler_groupsPayload>
/**
 * Model wp_actionscheduler_logs
 * 
 */
export type wp_actionscheduler_logs = $Result.DefaultSelection<Prisma.$wp_actionscheduler_logsPayload>
/**
 * Model wp_addonlibrary_addons
 * 
 */
export type wp_addonlibrary_addons = $Result.DefaultSelection<Prisma.$wp_addonlibrary_addonsPayload>
/**
 * Model wp_addonlibrary_categories
 * 
 */
export type wp_addonlibrary_categories = $Result.DefaultSelection<Prisma.$wp_addonlibrary_categoriesPayload>
/**
 * Model wp_ai_stats_events
 * 
 */
export type wp_ai_stats_events = $Result.DefaultSelection<Prisma.$wp_ai_stats_eventsPayload>
/**
 * Model wp_ai_stats_play
 * 
 */
export type wp_ai_stats_play = $Result.DefaultSelection<Prisma.$wp_ai_stats_playPayload>
/**
 * Model wp_ai_stats_track
 * 
 */
export type wp_ai_stats_track = $Result.DefaultSelection<Prisma.$wp_ai_stats_trackPayload>
/**
 * Model wp_audier_elementor_cache
 * 
 */
export type wp_audier_elementor_cache = $Result.DefaultSelection<Prisma.$wp_audier_elementor_cachePayload>
/**
 * Model wp_commentmeta
 * 
 */
export type wp_commentmeta = $Result.DefaultSelection<Prisma.$wp_commentmetaPayload>
/**
 * Model wp_comments
 * 
 */
export type wp_comments = $Result.DefaultSelection<Prisma.$wp_commentsPayload>
/**
 * Model wp_cpmp_player
 * 
 */
export type wp_cpmp_player = $Result.DefaultSelection<Prisma.$wp_cpmp_playerPayload>
/**
 * Model wp_e_events
 * 
 */
export type wp_e_events = $Result.DefaultSelection<Prisma.$wp_e_eventsPayload>
/**
 * Model wp_e_notes
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type wp_e_notes = $Result.DefaultSelection<Prisma.$wp_e_notesPayload>
/**
 * Model wp_e_notes_users_relations
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type wp_e_notes_users_relations = $Result.DefaultSelection<Prisma.$wp_e_notes_users_relationsPayload>
/**
 * Model wp_e_submissions
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 */
export type wp_e_submissions = $Result.DefaultSelection<Prisma.$wp_e_submissionsPayload>
/**
 * Model wp_e_submissions_actions_log
 * 
 */
export type wp_e_submissions_actions_log = $Result.DefaultSelection<Prisma.$wp_e_submissions_actions_logPayload>
/**
 * Model wp_e_submissions_values
 * 
 */
export type wp_e_submissions_values = $Result.DefaultSelection<Prisma.$wp_e_submissions_valuesPayload>
/**
 * Model wp_jet_post_types
 * 
 */
export type wp_jet_post_types = $Result.DefaultSelection<Prisma.$wp_jet_post_typesPayload>
/**
 * Model wp_jet_smart_filters_indexer
 * 
 */
export type wp_jet_smart_filters_indexer = $Result.DefaultSelection<Prisma.$wp_jet_smart_filters_indexerPayload>
/**
 * Model wp_jet_taxonomies
 * 
 */
export type wp_jet_taxonomies = $Result.DefaultSelection<Prisma.$wp_jet_taxonomiesPayload>
/**
 * Model wp_links
 * 
 */
export type wp_links = $Result.DefaultSelection<Prisma.$wp_linksPayload>
/**
 * Model wp_options
 * 
 */
export type wp_options = $Result.DefaultSelection<Prisma.$wp_optionsPayload>
/**
 * Model wp_postmeta
 * 
 */
export type wp_postmeta = $Result.DefaultSelection<Prisma.$wp_postmetaPayload>
/**
 * Model wp_posts
 * 
 */
export type wp_posts = $Result.DefaultSelection<Prisma.$wp_postsPayload>
/**
 * Model wp_rank_math_internal_links
 * 
 */
export type wp_rank_math_internal_links = $Result.DefaultSelection<Prisma.$wp_rank_math_internal_linksPayload>
/**
 * Model wp_rank_math_internal_meta
 * 
 */
export type wp_rank_math_internal_meta = $Result.DefaultSelection<Prisma.$wp_rank_math_internal_metaPayload>
/**
 * Model wp_rtl_rsm_logs
 * 
 */
export type wp_rtl_rsm_logs = $Result.DefaultSelection<Prisma.$wp_rtl_rsm_logsPayload>
/**
 * Model wp_soogname_meta
 * 
 */
export type wp_soogname_meta = $Result.DefaultSelection<Prisma.$wp_soogname_metaPayload>
/**
 * Model wp_term_relationships
 * 
 */
export type wp_term_relationships = $Result.DefaultSelection<Prisma.$wp_term_relationshipsPayload>
/**
 * Model wp_term_taxonomy
 * 
 */
export type wp_term_taxonomy = $Result.DefaultSelection<Prisma.$wp_term_taxonomyPayload>
/**
 * Model wp_termmeta
 * 
 */
export type wp_termmeta = $Result.DefaultSelection<Prisma.$wp_termmetaPayload>
/**
 * Model wp_terms
 * 
 */
export type wp_terms = $Result.DefaultSelection<Prisma.$wp_termsPayload>
/**
 * Model wp_usermeta
 * 
 */
export type wp_usermeta = $Result.DefaultSelection<Prisma.$wp_usermetaPayload>
/**
 * Model wp_users
 * 
 */
export type wp_users = $Result.DefaultSelection<Prisma.$wp_usersPayload>
/**
 * Model wp_wpr_above_the_fold
 * 
 */
export type wp_wpr_above_the_fold = $Result.DefaultSelection<Prisma.$wp_wpr_above_the_foldPayload>
/**
 * Model wp_wpr_rocket_cache
 * 
 */
export type wp_wpr_rocket_cache = $Result.DefaultSelection<Prisma.$wp_wpr_rocket_cachePayload>
/**
 * Model wp_wpr_rucss_used_css
 * 
 */
export type wp_wpr_rucss_used_css = $Result.DefaultSelection<Prisma.$wp_wpr_rucss_used_cssPayload>

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Wp_actionscheduler_actions
 * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Wp_actionscheduler_actions
   * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.wp_actionscheduler_actions`: Exposes CRUD operations for the **wp_actionscheduler_actions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_actions
    * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany()
    * ```
    */
  get wp_actionscheduler_actions(): Prisma.wp_actionscheduler_actionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_actionscheduler_claims`: Exposes CRUD operations for the **wp_actionscheduler_claims** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_claims
    * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findMany()
    * ```
    */
  get wp_actionscheduler_claims(): Prisma.wp_actionscheduler_claimsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_actionscheduler_groups`: Exposes CRUD operations for the **wp_actionscheduler_groups** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_groups
    * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findMany()
    * ```
    */
  get wp_actionscheduler_groups(): Prisma.wp_actionscheduler_groupsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_actionscheduler_logs`: Exposes CRUD operations for the **wp_actionscheduler_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_actionscheduler_logs
    * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findMany()
    * ```
    */
  get wp_actionscheduler_logs(): Prisma.wp_actionscheduler_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_addonlibrary_addons`: Exposes CRUD operations for the **wp_addonlibrary_addons** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_addonlibrary_addons
    * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.findMany()
    * ```
    */
  get wp_addonlibrary_addons(): Prisma.wp_addonlibrary_addonsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_addonlibrary_categories`: Exposes CRUD operations for the **wp_addonlibrary_categories** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_addonlibrary_categories
    * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.findMany()
    * ```
    */
  get wp_addonlibrary_categories(): Prisma.wp_addonlibrary_categoriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_ai_stats_events`: Exposes CRUD operations for the **wp_ai_stats_events** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_ai_stats_events
    * const wp_ai_stats_events = await prisma.wp_ai_stats_events.findMany()
    * ```
    */
  get wp_ai_stats_events(): Prisma.wp_ai_stats_eventsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_ai_stats_play`: Exposes CRUD operations for the **wp_ai_stats_play** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_ai_stats_plays
    * const wp_ai_stats_plays = await prisma.wp_ai_stats_play.findMany()
    * ```
    */
  get wp_ai_stats_play(): Prisma.wp_ai_stats_playDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_ai_stats_track`: Exposes CRUD operations for the **wp_ai_stats_track** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_ai_stats_tracks
    * const wp_ai_stats_tracks = await prisma.wp_ai_stats_track.findMany()
    * ```
    */
  get wp_ai_stats_track(): Prisma.wp_ai_stats_trackDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_audier_elementor_cache`: Exposes CRUD operations for the **wp_audier_elementor_cache** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_audier_elementor_caches
    * const wp_audier_elementor_caches = await prisma.wp_audier_elementor_cache.findMany()
    * ```
    */
  get wp_audier_elementor_cache(): Prisma.wp_audier_elementor_cacheDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_commentmeta`: Exposes CRUD operations for the **wp_commentmeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_commentmetas
    * const wp_commentmetas = await prisma.wp_commentmeta.findMany()
    * ```
    */
  get wp_commentmeta(): Prisma.wp_commentmetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_comments`: Exposes CRUD operations for the **wp_comments** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_comments
    * const wp_comments = await prisma.wp_comments.findMany()
    * ```
    */
  get wp_comments(): Prisma.wp_commentsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_cpmp_player`: Exposes CRUD operations for the **wp_cpmp_player** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_cpmp_players
    * const wp_cpmp_players = await prisma.wp_cpmp_player.findMany()
    * ```
    */
  get wp_cpmp_player(): Prisma.wp_cpmp_playerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_e_events`: Exposes CRUD operations for the **wp_e_events** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_e_events
    * const wp_e_events = await prisma.wp_e_events.findMany()
    * ```
    */
  get wp_e_events(): Prisma.wp_e_eventsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_e_notes`: Exposes CRUD operations for the **wp_e_notes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_e_notes
    * const wp_e_notes = await prisma.wp_e_notes.findMany()
    * ```
    */
  get wp_e_notes(): Prisma.wp_e_notesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_e_notes_users_relations`: Exposes CRUD operations for the **wp_e_notes_users_relations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_e_notes_users_relations
    * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.findMany()
    * ```
    */
  get wp_e_notes_users_relations(): Prisma.wp_e_notes_users_relationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_e_submissions`: Exposes CRUD operations for the **wp_e_submissions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_e_submissions
    * const wp_e_submissions = await prisma.wp_e_submissions.findMany()
    * ```
    */
  get wp_e_submissions(): Prisma.wp_e_submissionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_e_submissions_actions_log`: Exposes CRUD operations for the **wp_e_submissions_actions_log** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_e_submissions_actions_logs
    * const wp_e_submissions_actions_logs = await prisma.wp_e_submissions_actions_log.findMany()
    * ```
    */
  get wp_e_submissions_actions_log(): Prisma.wp_e_submissions_actions_logDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_e_submissions_values`: Exposes CRUD operations for the **wp_e_submissions_values** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_e_submissions_values
    * const wp_e_submissions_values = await prisma.wp_e_submissions_values.findMany()
    * ```
    */
  get wp_e_submissions_values(): Prisma.wp_e_submissions_valuesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_jet_post_types`: Exposes CRUD operations for the **wp_jet_post_types** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_jet_post_types
    * const wp_jet_post_types = await prisma.wp_jet_post_types.findMany()
    * ```
    */
  get wp_jet_post_types(): Prisma.wp_jet_post_typesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_jet_smart_filters_indexer`: Exposes CRUD operations for the **wp_jet_smart_filters_indexer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_jet_smart_filters_indexers
    * const wp_jet_smart_filters_indexers = await prisma.wp_jet_smart_filters_indexer.findMany()
    * ```
    */
  get wp_jet_smart_filters_indexer(): Prisma.wp_jet_smart_filters_indexerDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_jet_taxonomies`: Exposes CRUD operations for the **wp_jet_taxonomies** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_jet_taxonomies
    * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.findMany()
    * ```
    */
  get wp_jet_taxonomies(): Prisma.wp_jet_taxonomiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_links`: Exposes CRUD operations for the **wp_links** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_links
    * const wp_links = await prisma.wp_links.findMany()
    * ```
    */
  get wp_links(): Prisma.wp_linksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_options`: Exposes CRUD operations for the **wp_options** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_options
    * const wp_options = await prisma.wp_options.findMany()
    * ```
    */
  get wp_options(): Prisma.wp_optionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_postmeta`: Exposes CRUD operations for the **wp_postmeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_postmetas
    * const wp_postmetas = await prisma.wp_postmeta.findMany()
    * ```
    */
  get wp_postmeta(): Prisma.wp_postmetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_posts`: Exposes CRUD operations for the **wp_posts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_posts
    * const wp_posts = await prisma.wp_posts.findMany()
    * ```
    */
  get wp_posts(): Prisma.wp_postsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_rank_math_internal_links`: Exposes CRUD operations for the **wp_rank_math_internal_links** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_rank_math_internal_links
    * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.findMany()
    * ```
    */
  get wp_rank_math_internal_links(): Prisma.wp_rank_math_internal_linksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_rank_math_internal_meta`: Exposes CRUD operations for the **wp_rank_math_internal_meta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_rank_math_internal_metas
    * const wp_rank_math_internal_metas = await prisma.wp_rank_math_internal_meta.findMany()
    * ```
    */
  get wp_rank_math_internal_meta(): Prisma.wp_rank_math_internal_metaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_rtl_rsm_logs`: Exposes CRUD operations for the **wp_rtl_rsm_logs** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_rtl_rsm_logs
    * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.findMany()
    * ```
    */
  get wp_rtl_rsm_logs(): Prisma.wp_rtl_rsm_logsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_soogname_meta`: Exposes CRUD operations for the **wp_soogname_meta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_soogname_metas
    * const wp_soogname_metas = await prisma.wp_soogname_meta.findMany()
    * ```
    */
  get wp_soogname_meta(): Prisma.wp_soogname_metaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_term_relationships`: Exposes CRUD operations for the **wp_term_relationships** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_term_relationships
    * const wp_term_relationships = await prisma.wp_term_relationships.findMany()
    * ```
    */
  get wp_term_relationships(): Prisma.wp_term_relationshipsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_term_taxonomy`: Exposes CRUD operations for the **wp_term_taxonomy** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_term_taxonomies
    * const wp_term_taxonomies = await prisma.wp_term_taxonomy.findMany()
    * ```
    */
  get wp_term_taxonomy(): Prisma.wp_term_taxonomyDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_termmeta`: Exposes CRUD operations for the **wp_termmeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_termmetas
    * const wp_termmetas = await prisma.wp_termmeta.findMany()
    * ```
    */
  get wp_termmeta(): Prisma.wp_termmetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_terms`: Exposes CRUD operations for the **wp_terms** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_terms
    * const wp_terms = await prisma.wp_terms.findMany()
    * ```
    */
  get wp_terms(): Prisma.wp_termsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_usermeta`: Exposes CRUD operations for the **wp_usermeta** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_usermetas
    * const wp_usermetas = await prisma.wp_usermeta.findMany()
    * ```
    */
  get wp_usermeta(): Prisma.wp_usermetaDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_users`: Exposes CRUD operations for the **wp_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_users
    * const wp_users = await prisma.wp_users.findMany()
    * ```
    */
  get wp_users(): Prisma.wp_usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpr_above_the_fold`: Exposes CRUD operations for the **wp_wpr_above_the_fold** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpr_above_the_folds
    * const wp_wpr_above_the_folds = await prisma.wp_wpr_above_the_fold.findMany()
    * ```
    */
  get wp_wpr_above_the_fold(): Prisma.wp_wpr_above_the_foldDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpr_rocket_cache`: Exposes CRUD operations for the **wp_wpr_rocket_cache** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpr_rocket_caches
    * const wp_wpr_rocket_caches = await prisma.wp_wpr_rocket_cache.findMany()
    * ```
    */
  get wp_wpr_rocket_cache(): Prisma.wp_wpr_rocket_cacheDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.wp_wpr_rucss_used_css`: Exposes CRUD operations for the **wp_wpr_rucss_used_css** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wp_wpr_rucss_used_csses
    * const wp_wpr_rucss_used_csses = await prisma.wp_wpr_rucss_used_css.findMany()
    * ```
    */
  get wp_wpr_rucss_used_css(): Prisma.wp_wpr_rucss_used_cssDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.7.0
   * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    wp_actionscheduler_actions: 'wp_actionscheduler_actions',
    wp_actionscheduler_claims: 'wp_actionscheduler_claims',
    wp_actionscheduler_groups: 'wp_actionscheduler_groups',
    wp_actionscheduler_logs: 'wp_actionscheduler_logs',
    wp_addonlibrary_addons: 'wp_addonlibrary_addons',
    wp_addonlibrary_categories: 'wp_addonlibrary_categories',
    wp_ai_stats_events: 'wp_ai_stats_events',
    wp_ai_stats_play: 'wp_ai_stats_play',
    wp_ai_stats_track: 'wp_ai_stats_track',
    wp_audier_elementor_cache: 'wp_audier_elementor_cache',
    wp_commentmeta: 'wp_commentmeta',
    wp_comments: 'wp_comments',
    wp_cpmp_player: 'wp_cpmp_player',
    wp_e_events: 'wp_e_events',
    wp_e_notes: 'wp_e_notes',
    wp_e_notes_users_relations: 'wp_e_notes_users_relations',
    wp_e_submissions: 'wp_e_submissions',
    wp_e_submissions_actions_log: 'wp_e_submissions_actions_log',
    wp_e_submissions_values: 'wp_e_submissions_values',
    wp_jet_post_types: 'wp_jet_post_types',
    wp_jet_smart_filters_indexer: 'wp_jet_smart_filters_indexer',
    wp_jet_taxonomies: 'wp_jet_taxonomies',
    wp_links: 'wp_links',
    wp_options: 'wp_options',
    wp_postmeta: 'wp_postmeta',
    wp_posts: 'wp_posts',
    wp_rank_math_internal_links: 'wp_rank_math_internal_links',
    wp_rank_math_internal_meta: 'wp_rank_math_internal_meta',
    wp_rtl_rsm_logs: 'wp_rtl_rsm_logs',
    wp_soogname_meta: 'wp_soogname_meta',
    wp_term_relationships: 'wp_term_relationships',
    wp_term_taxonomy: 'wp_term_taxonomy',
    wp_termmeta: 'wp_termmeta',
    wp_terms: 'wp_terms',
    wp_usermeta: 'wp_usermeta',
    wp_users: 'wp_users',
    wp_wpr_above_the_fold: 'wp_wpr_above_the_fold',
    wp_wpr_rocket_cache: 'wp_wpr_rocket_cache',
    wp_wpr_rucss_used_css: 'wp_wpr_rucss_used_css'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "wp_actionscheduler_actions" | "wp_actionscheduler_claims" | "wp_actionscheduler_groups" | "wp_actionscheduler_logs" | "wp_addonlibrary_addons" | "wp_addonlibrary_categories" | "wp_ai_stats_events" | "wp_ai_stats_play" | "wp_ai_stats_track" | "wp_audier_elementor_cache" | "wp_commentmeta" | "wp_comments" | "wp_cpmp_player" | "wp_e_events" | "wp_e_notes" | "wp_e_notes_users_relations" | "wp_e_submissions" | "wp_e_submissions_actions_log" | "wp_e_submissions_values" | "wp_jet_post_types" | "wp_jet_smart_filters_indexer" | "wp_jet_taxonomies" | "wp_links" | "wp_options" | "wp_postmeta" | "wp_posts" | "wp_rank_math_internal_links" | "wp_rank_math_internal_meta" | "wp_rtl_rsm_logs" | "wp_soogname_meta" | "wp_term_relationships" | "wp_term_taxonomy" | "wp_termmeta" | "wp_terms" | "wp_usermeta" | "wp_users" | "wp_wpr_above_the_fold" | "wp_wpr_rocket_cache" | "wp_wpr_rucss_used_css"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      wp_actionscheduler_actions: {
        payload: Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_actionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_actionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_actionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_actionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_actionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_actionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_actionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_actionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_actionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_actionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_actionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_actionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_actionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_actionsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_actionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_actions>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_actionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_actionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_actionsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_actionsCountAggregateOutputType> | number
          }
        }
      }
      wp_actionscheduler_claims: {
        payload: Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_claimsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_claimsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_claimsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_claimsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_claimsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_claimsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_claimsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_claimsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_claimsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_claimsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_claimsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_claimsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_claimsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_claimsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_claimsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_claims>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_claimsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_claimsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_claimsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_claimsCountAggregateOutputType> | number
          }
        }
      }
      wp_actionscheduler_groups: {
        payload: Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_groupsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_groupsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_groupsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_groupsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_groupsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_groupsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_groupsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_groupsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_groupsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_groupsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_groupsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_groupsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_groupsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_groupsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_groupsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_groups>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_groupsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_groupsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_groupsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_groupsCountAggregateOutputType> | number
          }
        }
      }
      wp_actionscheduler_logs: {
        payload: Prisma.$wp_actionscheduler_logsPayload<ExtArgs>
        fields: Prisma.wp_actionscheduler_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_actionscheduler_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_actionscheduler_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          findFirst: {
            args: Prisma.wp_actionscheduler_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_actionscheduler_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          findMany: {
            args: Prisma.wp_actionscheduler_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>[]
          }
          create: {
            args: Prisma.wp_actionscheduler_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          createMany: {
            args: Prisma.wp_actionscheduler_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_actionscheduler_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          update: {
            args: Prisma.wp_actionscheduler_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          deleteMany: {
            args: Prisma.wp_actionscheduler_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_actionscheduler_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_actionscheduler_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_actionscheduler_logsPayload>
          }
          aggregate: {
            args: Prisma.Wp_actionscheduler_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_actionscheduler_logs>
          }
          groupBy: {
            args: Prisma.wp_actionscheduler_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_actionscheduler_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_actionscheduler_logsCountAggregateOutputType> | number
          }
        }
      }
      wp_addonlibrary_addons: {
        payload: Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>
        fields: Prisma.wp_addonlibrary_addonsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_addonlibrary_addonsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_addonlibrary_addonsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload>
          }
          findFirst: {
            args: Prisma.wp_addonlibrary_addonsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_addonlibrary_addonsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload>
          }
          findMany: {
            args: Prisma.wp_addonlibrary_addonsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload>[]
          }
          create: {
            args: Prisma.wp_addonlibrary_addonsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload>
          }
          createMany: {
            args: Prisma.wp_addonlibrary_addonsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_addonlibrary_addonsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload>
          }
          update: {
            args: Prisma.wp_addonlibrary_addonsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload>
          }
          deleteMany: {
            args: Prisma.wp_addonlibrary_addonsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_addonlibrary_addonsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_addonlibrary_addonsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_addonsPayload>
          }
          aggregate: {
            args: Prisma.Wp_addonlibrary_addonsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_addonlibrary_addons>
          }
          groupBy: {
            args: Prisma.wp_addonlibrary_addonsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_addonlibrary_addonsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_addonlibrary_addonsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_addonlibrary_addonsCountAggregateOutputType> | number
          }
        }
      }
      wp_addonlibrary_categories: {
        payload: Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>
        fields: Prisma.wp_addonlibrary_categoriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_addonlibrary_categoriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_addonlibrary_categoriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload>
          }
          findFirst: {
            args: Prisma.wp_addonlibrary_categoriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_addonlibrary_categoriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload>
          }
          findMany: {
            args: Prisma.wp_addonlibrary_categoriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload>[]
          }
          create: {
            args: Prisma.wp_addonlibrary_categoriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload>
          }
          createMany: {
            args: Prisma.wp_addonlibrary_categoriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_addonlibrary_categoriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload>
          }
          update: {
            args: Prisma.wp_addonlibrary_categoriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload>
          }
          deleteMany: {
            args: Prisma.wp_addonlibrary_categoriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_addonlibrary_categoriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_addonlibrary_categoriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_addonlibrary_categoriesPayload>
          }
          aggregate: {
            args: Prisma.Wp_addonlibrary_categoriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_addonlibrary_categories>
          }
          groupBy: {
            args: Prisma.wp_addonlibrary_categoriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_addonlibrary_categoriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_addonlibrary_categoriesCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_addonlibrary_categoriesCountAggregateOutputType> | number
          }
        }
      }
      wp_ai_stats_events: {
        payload: Prisma.$wp_ai_stats_eventsPayload<ExtArgs>
        fields: Prisma.wp_ai_stats_eventsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_ai_stats_eventsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_ai_stats_eventsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload>
          }
          findFirst: {
            args: Prisma.wp_ai_stats_eventsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_ai_stats_eventsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload>
          }
          findMany: {
            args: Prisma.wp_ai_stats_eventsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload>[]
          }
          create: {
            args: Prisma.wp_ai_stats_eventsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload>
          }
          createMany: {
            args: Prisma.wp_ai_stats_eventsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_ai_stats_eventsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload>
          }
          update: {
            args: Prisma.wp_ai_stats_eventsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload>
          }
          deleteMany: {
            args: Prisma.wp_ai_stats_eventsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_ai_stats_eventsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_ai_stats_eventsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_eventsPayload>
          }
          aggregate: {
            args: Prisma.Wp_ai_stats_eventsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_ai_stats_events>
          }
          groupBy: {
            args: Prisma.wp_ai_stats_eventsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_ai_stats_eventsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_ai_stats_eventsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_ai_stats_eventsCountAggregateOutputType> | number
          }
        }
      }
      wp_ai_stats_play: {
        payload: Prisma.$wp_ai_stats_playPayload<ExtArgs>
        fields: Prisma.wp_ai_stats_playFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_ai_stats_playFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_ai_stats_playFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload>
          }
          findFirst: {
            args: Prisma.wp_ai_stats_playFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_ai_stats_playFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload>
          }
          findMany: {
            args: Prisma.wp_ai_stats_playFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload>[]
          }
          create: {
            args: Prisma.wp_ai_stats_playCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload>
          }
          createMany: {
            args: Prisma.wp_ai_stats_playCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_ai_stats_playDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload>
          }
          update: {
            args: Prisma.wp_ai_stats_playUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload>
          }
          deleteMany: {
            args: Prisma.wp_ai_stats_playDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_ai_stats_playUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_ai_stats_playUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_playPayload>
          }
          aggregate: {
            args: Prisma.Wp_ai_stats_playAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_ai_stats_play>
          }
          groupBy: {
            args: Prisma.wp_ai_stats_playGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_ai_stats_playGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_ai_stats_playCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_ai_stats_playCountAggregateOutputType> | number
          }
        }
      }
      wp_ai_stats_track: {
        payload: Prisma.$wp_ai_stats_trackPayload<ExtArgs>
        fields: Prisma.wp_ai_stats_trackFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_ai_stats_trackFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_ai_stats_trackFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload>
          }
          findFirst: {
            args: Prisma.wp_ai_stats_trackFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_ai_stats_trackFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload>
          }
          findMany: {
            args: Prisma.wp_ai_stats_trackFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload>[]
          }
          create: {
            args: Prisma.wp_ai_stats_trackCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload>
          }
          createMany: {
            args: Prisma.wp_ai_stats_trackCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_ai_stats_trackDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload>
          }
          update: {
            args: Prisma.wp_ai_stats_trackUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload>
          }
          deleteMany: {
            args: Prisma.wp_ai_stats_trackDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_ai_stats_trackUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_ai_stats_trackUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_ai_stats_trackPayload>
          }
          aggregate: {
            args: Prisma.Wp_ai_stats_trackAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_ai_stats_track>
          }
          groupBy: {
            args: Prisma.wp_ai_stats_trackGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_ai_stats_trackGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_ai_stats_trackCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_ai_stats_trackCountAggregateOutputType> | number
          }
        }
      }
      wp_audier_elementor_cache: {
        payload: Prisma.$wp_audier_elementor_cachePayload<ExtArgs>
        fields: Prisma.wp_audier_elementor_cacheFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_audier_elementor_cacheFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_audier_elementor_cacheFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload>
          }
          findFirst: {
            args: Prisma.wp_audier_elementor_cacheFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_audier_elementor_cacheFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload>
          }
          findMany: {
            args: Prisma.wp_audier_elementor_cacheFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload>[]
          }
          create: {
            args: Prisma.wp_audier_elementor_cacheCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload>
          }
          createMany: {
            args: Prisma.wp_audier_elementor_cacheCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_audier_elementor_cacheDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload>
          }
          update: {
            args: Prisma.wp_audier_elementor_cacheUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload>
          }
          deleteMany: {
            args: Prisma.wp_audier_elementor_cacheDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_audier_elementor_cacheUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_audier_elementor_cacheUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_audier_elementor_cachePayload>
          }
          aggregate: {
            args: Prisma.Wp_audier_elementor_cacheAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_audier_elementor_cache>
          }
          groupBy: {
            args: Prisma.wp_audier_elementor_cacheGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_audier_elementor_cacheGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_audier_elementor_cacheCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_audier_elementor_cacheCountAggregateOutputType> | number
          }
        }
      }
      wp_commentmeta: {
        payload: Prisma.$wp_commentmetaPayload<ExtArgs>
        fields: Prisma.wp_commentmetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_commentmetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_commentmetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          findFirst: {
            args: Prisma.wp_commentmetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_commentmetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          findMany: {
            args: Prisma.wp_commentmetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>[]
          }
          create: {
            args: Prisma.wp_commentmetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          createMany: {
            args: Prisma.wp_commentmetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_commentmetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          update: {
            args: Prisma.wp_commentmetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_commentmetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_commentmetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_commentmetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentmetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_commentmetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_commentmeta>
          }
          groupBy: {
            args: Prisma.wp_commentmetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentmetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_commentmetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentmetaCountAggregateOutputType> | number
          }
        }
      }
      wp_comments: {
        payload: Prisma.$wp_commentsPayload<ExtArgs>
        fields: Prisma.wp_commentsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_commentsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_commentsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          findFirst: {
            args: Prisma.wp_commentsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_commentsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          findMany: {
            args: Prisma.wp_commentsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>[]
          }
          create: {
            args: Prisma.wp_commentsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          createMany: {
            args: Prisma.wp_commentsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_commentsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          update: {
            args: Prisma.wp_commentsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          deleteMany: {
            args: Prisma.wp_commentsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_commentsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_commentsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_commentsPayload>
          }
          aggregate: {
            args: Prisma.Wp_commentsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_comments>
          }
          groupBy: {
            args: Prisma.wp_commentsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_commentsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_commentsCountAggregateOutputType> | number
          }
        }
      }
      wp_cpmp_player: {
        payload: Prisma.$wp_cpmp_playerPayload<ExtArgs>
        fields: Prisma.wp_cpmp_playerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_cpmp_playerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_cpmp_playerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload>
          }
          findFirst: {
            args: Prisma.wp_cpmp_playerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_cpmp_playerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload>
          }
          findMany: {
            args: Prisma.wp_cpmp_playerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload>[]
          }
          create: {
            args: Prisma.wp_cpmp_playerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload>
          }
          createMany: {
            args: Prisma.wp_cpmp_playerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_cpmp_playerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload>
          }
          update: {
            args: Prisma.wp_cpmp_playerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload>
          }
          deleteMany: {
            args: Prisma.wp_cpmp_playerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_cpmp_playerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_cpmp_playerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_cpmp_playerPayload>
          }
          aggregate: {
            args: Prisma.Wp_cpmp_playerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_cpmp_player>
          }
          groupBy: {
            args: Prisma.wp_cpmp_playerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_cpmp_playerGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_cpmp_playerCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_cpmp_playerCountAggregateOutputType> | number
          }
        }
      }
      wp_e_events: {
        payload: Prisma.$wp_e_eventsPayload<ExtArgs>
        fields: Prisma.wp_e_eventsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_e_eventsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_e_eventsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload>
          }
          findFirst: {
            args: Prisma.wp_e_eventsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_e_eventsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload>
          }
          findMany: {
            args: Prisma.wp_e_eventsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload>[]
          }
          create: {
            args: Prisma.wp_e_eventsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload>
          }
          createMany: {
            args: Prisma.wp_e_eventsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_e_eventsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload>
          }
          update: {
            args: Prisma.wp_e_eventsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload>
          }
          deleteMany: {
            args: Prisma.wp_e_eventsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_e_eventsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_e_eventsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_eventsPayload>
          }
          aggregate: {
            args: Prisma.Wp_e_eventsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_e_events>
          }
          groupBy: {
            args: Prisma.wp_e_eventsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_eventsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_e_eventsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_eventsCountAggregateOutputType> | number
          }
        }
      }
      wp_e_notes: {
        payload: Prisma.$wp_e_notesPayload<ExtArgs>
        fields: Prisma.wp_e_notesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_e_notesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_e_notesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload>
          }
          findFirst: {
            args: Prisma.wp_e_notesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_e_notesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload>
          }
          findMany: {
            args: Prisma.wp_e_notesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload>[]
          }
          create: {
            args: Prisma.wp_e_notesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload>
          }
          createMany: {
            args: Prisma.wp_e_notesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_e_notesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload>
          }
          update: {
            args: Prisma.wp_e_notesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload>
          }
          deleteMany: {
            args: Prisma.wp_e_notesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_e_notesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_e_notesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notesPayload>
          }
          aggregate: {
            args: Prisma.Wp_e_notesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_e_notes>
          }
          groupBy: {
            args: Prisma.wp_e_notesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_notesGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_e_notesCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_notesCountAggregateOutputType> | number
          }
        }
      }
      wp_e_notes_users_relations: {
        payload: Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>
        fields: Prisma.wp_e_notes_users_relationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_e_notes_users_relationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_e_notes_users_relationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload>
          }
          findFirst: {
            args: Prisma.wp_e_notes_users_relationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_e_notes_users_relationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload>
          }
          findMany: {
            args: Prisma.wp_e_notes_users_relationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload>[]
          }
          create: {
            args: Prisma.wp_e_notes_users_relationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload>
          }
          createMany: {
            args: Prisma.wp_e_notes_users_relationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_e_notes_users_relationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload>
          }
          update: {
            args: Prisma.wp_e_notes_users_relationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload>
          }
          deleteMany: {
            args: Prisma.wp_e_notes_users_relationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_e_notes_users_relationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_e_notes_users_relationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_notes_users_relationsPayload>
          }
          aggregate: {
            args: Prisma.Wp_e_notes_users_relationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_e_notes_users_relations>
          }
          groupBy: {
            args: Prisma.wp_e_notes_users_relationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_notes_users_relationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_e_notes_users_relationsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_notes_users_relationsCountAggregateOutputType> | number
          }
        }
      }
      wp_e_submissions: {
        payload: Prisma.$wp_e_submissionsPayload<ExtArgs>
        fields: Prisma.wp_e_submissionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_e_submissionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_e_submissionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload>
          }
          findFirst: {
            args: Prisma.wp_e_submissionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_e_submissionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload>
          }
          findMany: {
            args: Prisma.wp_e_submissionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload>[]
          }
          create: {
            args: Prisma.wp_e_submissionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload>
          }
          createMany: {
            args: Prisma.wp_e_submissionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_e_submissionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload>
          }
          update: {
            args: Prisma.wp_e_submissionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload>
          }
          deleteMany: {
            args: Prisma.wp_e_submissionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_e_submissionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_e_submissionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissionsPayload>
          }
          aggregate: {
            args: Prisma.Wp_e_submissionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_e_submissions>
          }
          groupBy: {
            args: Prisma.wp_e_submissionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_submissionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_e_submissionsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_submissionsCountAggregateOutputType> | number
          }
        }
      }
      wp_e_submissions_actions_log: {
        payload: Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>
        fields: Prisma.wp_e_submissions_actions_logFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_e_submissions_actions_logFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_e_submissions_actions_logFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload>
          }
          findFirst: {
            args: Prisma.wp_e_submissions_actions_logFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_e_submissions_actions_logFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload>
          }
          findMany: {
            args: Prisma.wp_e_submissions_actions_logFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload>[]
          }
          create: {
            args: Prisma.wp_e_submissions_actions_logCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload>
          }
          createMany: {
            args: Prisma.wp_e_submissions_actions_logCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_e_submissions_actions_logDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload>
          }
          update: {
            args: Prisma.wp_e_submissions_actions_logUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload>
          }
          deleteMany: {
            args: Prisma.wp_e_submissions_actions_logDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_e_submissions_actions_logUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_e_submissions_actions_logUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_actions_logPayload>
          }
          aggregate: {
            args: Prisma.Wp_e_submissions_actions_logAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_e_submissions_actions_log>
          }
          groupBy: {
            args: Prisma.wp_e_submissions_actions_logGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_submissions_actions_logGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_e_submissions_actions_logCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_submissions_actions_logCountAggregateOutputType> | number
          }
        }
      }
      wp_e_submissions_values: {
        payload: Prisma.$wp_e_submissions_valuesPayload<ExtArgs>
        fields: Prisma.wp_e_submissions_valuesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_e_submissions_valuesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_e_submissions_valuesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload>
          }
          findFirst: {
            args: Prisma.wp_e_submissions_valuesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_e_submissions_valuesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload>
          }
          findMany: {
            args: Prisma.wp_e_submissions_valuesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload>[]
          }
          create: {
            args: Prisma.wp_e_submissions_valuesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload>
          }
          createMany: {
            args: Prisma.wp_e_submissions_valuesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_e_submissions_valuesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload>
          }
          update: {
            args: Prisma.wp_e_submissions_valuesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload>
          }
          deleteMany: {
            args: Prisma.wp_e_submissions_valuesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_e_submissions_valuesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_e_submissions_valuesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_e_submissions_valuesPayload>
          }
          aggregate: {
            args: Prisma.Wp_e_submissions_valuesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_e_submissions_values>
          }
          groupBy: {
            args: Prisma.wp_e_submissions_valuesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_submissions_valuesGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_e_submissions_valuesCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_e_submissions_valuesCountAggregateOutputType> | number
          }
        }
      }
      wp_jet_post_types: {
        payload: Prisma.$wp_jet_post_typesPayload<ExtArgs>
        fields: Prisma.wp_jet_post_typesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_jet_post_typesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_jet_post_typesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload>
          }
          findFirst: {
            args: Prisma.wp_jet_post_typesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_jet_post_typesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload>
          }
          findMany: {
            args: Prisma.wp_jet_post_typesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload>[]
          }
          create: {
            args: Prisma.wp_jet_post_typesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload>
          }
          createMany: {
            args: Prisma.wp_jet_post_typesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_jet_post_typesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload>
          }
          update: {
            args: Prisma.wp_jet_post_typesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload>
          }
          deleteMany: {
            args: Prisma.wp_jet_post_typesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_jet_post_typesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_jet_post_typesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_post_typesPayload>
          }
          aggregate: {
            args: Prisma.Wp_jet_post_typesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_jet_post_types>
          }
          groupBy: {
            args: Prisma.wp_jet_post_typesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_jet_post_typesGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_jet_post_typesCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_jet_post_typesCountAggregateOutputType> | number
          }
        }
      }
      wp_jet_smart_filters_indexer: {
        payload: Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>
        fields: Prisma.wp_jet_smart_filters_indexerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_jet_smart_filters_indexerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_jet_smart_filters_indexerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload>
          }
          findFirst: {
            args: Prisma.wp_jet_smart_filters_indexerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_jet_smart_filters_indexerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload>
          }
          findMany: {
            args: Prisma.wp_jet_smart_filters_indexerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload>[]
          }
          create: {
            args: Prisma.wp_jet_smart_filters_indexerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload>
          }
          createMany: {
            args: Prisma.wp_jet_smart_filters_indexerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_jet_smart_filters_indexerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload>
          }
          update: {
            args: Prisma.wp_jet_smart_filters_indexerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload>
          }
          deleteMany: {
            args: Prisma.wp_jet_smart_filters_indexerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_jet_smart_filters_indexerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_jet_smart_filters_indexerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_smart_filters_indexerPayload>
          }
          aggregate: {
            args: Prisma.Wp_jet_smart_filters_indexerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_jet_smart_filters_indexer>
          }
          groupBy: {
            args: Prisma.wp_jet_smart_filters_indexerGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_jet_smart_filters_indexerGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_jet_smart_filters_indexerCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_jet_smart_filters_indexerCountAggregateOutputType> | number
          }
        }
      }
      wp_jet_taxonomies: {
        payload: Prisma.$wp_jet_taxonomiesPayload<ExtArgs>
        fields: Prisma.wp_jet_taxonomiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_jet_taxonomiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_jet_taxonomiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload>
          }
          findFirst: {
            args: Prisma.wp_jet_taxonomiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_jet_taxonomiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload>
          }
          findMany: {
            args: Prisma.wp_jet_taxonomiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload>[]
          }
          create: {
            args: Prisma.wp_jet_taxonomiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload>
          }
          createMany: {
            args: Prisma.wp_jet_taxonomiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_jet_taxonomiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload>
          }
          update: {
            args: Prisma.wp_jet_taxonomiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload>
          }
          deleteMany: {
            args: Prisma.wp_jet_taxonomiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_jet_taxonomiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_jet_taxonomiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_jet_taxonomiesPayload>
          }
          aggregate: {
            args: Prisma.Wp_jet_taxonomiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_jet_taxonomies>
          }
          groupBy: {
            args: Prisma.wp_jet_taxonomiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_jet_taxonomiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_jet_taxonomiesCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_jet_taxonomiesCountAggregateOutputType> | number
          }
        }
      }
      wp_links: {
        payload: Prisma.$wp_linksPayload<ExtArgs>
        fields: Prisma.wp_linksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_linksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_linksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          findFirst: {
            args: Prisma.wp_linksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_linksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          findMany: {
            args: Prisma.wp_linksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>[]
          }
          create: {
            args: Prisma.wp_linksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          createMany: {
            args: Prisma.wp_linksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_linksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          update: {
            args: Prisma.wp_linksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          deleteMany: {
            args: Prisma.wp_linksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_linksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_linksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_linksPayload>
          }
          aggregate: {
            args: Prisma.Wp_linksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_links>
          }
          groupBy: {
            args: Prisma.wp_linksGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_linksGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_linksCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_linksCountAggregateOutputType> | number
          }
        }
      }
      wp_options: {
        payload: Prisma.$wp_optionsPayload<ExtArgs>
        fields: Prisma.wp_optionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_optionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_optionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          findFirst: {
            args: Prisma.wp_optionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_optionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          findMany: {
            args: Prisma.wp_optionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>[]
          }
          create: {
            args: Prisma.wp_optionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          createMany: {
            args: Prisma.wp_optionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_optionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          update: {
            args: Prisma.wp_optionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          deleteMany: {
            args: Prisma.wp_optionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_optionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_optionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_optionsPayload>
          }
          aggregate: {
            args: Prisma.Wp_optionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_options>
          }
          groupBy: {
            args: Prisma.wp_optionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_optionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_optionsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_optionsCountAggregateOutputType> | number
          }
        }
      }
      wp_postmeta: {
        payload: Prisma.$wp_postmetaPayload<ExtArgs>
        fields: Prisma.wp_postmetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_postmetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_postmetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          findFirst: {
            args: Prisma.wp_postmetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_postmetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          findMany: {
            args: Prisma.wp_postmetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>[]
          }
          create: {
            args: Prisma.wp_postmetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          createMany: {
            args: Prisma.wp_postmetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_postmetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          update: {
            args: Prisma.wp_postmetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_postmetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_postmetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_postmetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postmetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_postmetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_postmeta>
          }
          groupBy: {
            args: Prisma.wp_postmetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_postmetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_postmetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_postmetaCountAggregateOutputType> | number
          }
        }
      }
      wp_posts: {
        payload: Prisma.$wp_postsPayload<ExtArgs>
        fields: Prisma.wp_postsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_postsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_postsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          findFirst: {
            args: Prisma.wp_postsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_postsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          findMany: {
            args: Prisma.wp_postsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>[]
          }
          create: {
            args: Prisma.wp_postsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          createMany: {
            args: Prisma.wp_postsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_postsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          update: {
            args: Prisma.wp_postsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          deleteMany: {
            args: Prisma.wp_postsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_postsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_postsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_postsPayload>
          }
          aggregate: {
            args: Prisma.Wp_postsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_posts>
          }
          groupBy: {
            args: Prisma.wp_postsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_postsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_postsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_postsCountAggregateOutputType> | number
          }
        }
      }
      wp_rank_math_internal_links: {
        payload: Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>
        fields: Prisma.wp_rank_math_internal_linksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_rank_math_internal_linksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_rank_math_internal_linksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload>
          }
          findFirst: {
            args: Prisma.wp_rank_math_internal_linksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_rank_math_internal_linksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload>
          }
          findMany: {
            args: Prisma.wp_rank_math_internal_linksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload>[]
          }
          create: {
            args: Prisma.wp_rank_math_internal_linksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload>
          }
          createMany: {
            args: Prisma.wp_rank_math_internal_linksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_rank_math_internal_linksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload>
          }
          update: {
            args: Prisma.wp_rank_math_internal_linksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload>
          }
          deleteMany: {
            args: Prisma.wp_rank_math_internal_linksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_rank_math_internal_linksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_rank_math_internal_linksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_linksPayload>
          }
          aggregate: {
            args: Prisma.Wp_rank_math_internal_linksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_rank_math_internal_links>
          }
          groupBy: {
            args: Prisma.wp_rank_math_internal_linksGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_rank_math_internal_linksGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_rank_math_internal_linksCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_rank_math_internal_linksCountAggregateOutputType> | number
          }
        }
      }
      wp_rank_math_internal_meta: {
        payload: Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>
        fields: Prisma.wp_rank_math_internal_metaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_rank_math_internal_metaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_rank_math_internal_metaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload>
          }
          findFirst: {
            args: Prisma.wp_rank_math_internal_metaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_rank_math_internal_metaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload>
          }
          findMany: {
            args: Prisma.wp_rank_math_internal_metaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload>[]
          }
          create: {
            args: Prisma.wp_rank_math_internal_metaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload>
          }
          createMany: {
            args: Prisma.wp_rank_math_internal_metaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_rank_math_internal_metaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload>
          }
          update: {
            args: Prisma.wp_rank_math_internal_metaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload>
          }
          deleteMany: {
            args: Prisma.wp_rank_math_internal_metaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_rank_math_internal_metaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_rank_math_internal_metaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rank_math_internal_metaPayload>
          }
          aggregate: {
            args: Prisma.Wp_rank_math_internal_metaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_rank_math_internal_meta>
          }
          groupBy: {
            args: Prisma.wp_rank_math_internal_metaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_rank_math_internal_metaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_rank_math_internal_metaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_rank_math_internal_metaCountAggregateOutputType> | number
          }
        }
      }
      wp_rtl_rsm_logs: {
        payload: Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>
        fields: Prisma.wp_rtl_rsm_logsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_rtl_rsm_logsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_rtl_rsm_logsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload>
          }
          findFirst: {
            args: Prisma.wp_rtl_rsm_logsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_rtl_rsm_logsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload>
          }
          findMany: {
            args: Prisma.wp_rtl_rsm_logsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload>[]
          }
          create: {
            args: Prisma.wp_rtl_rsm_logsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload>
          }
          createMany: {
            args: Prisma.wp_rtl_rsm_logsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_rtl_rsm_logsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload>
          }
          update: {
            args: Prisma.wp_rtl_rsm_logsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload>
          }
          deleteMany: {
            args: Prisma.wp_rtl_rsm_logsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_rtl_rsm_logsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_rtl_rsm_logsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_rtl_rsm_logsPayload>
          }
          aggregate: {
            args: Prisma.Wp_rtl_rsm_logsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_rtl_rsm_logs>
          }
          groupBy: {
            args: Prisma.wp_rtl_rsm_logsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_rtl_rsm_logsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_rtl_rsm_logsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_rtl_rsm_logsCountAggregateOutputType> | number
          }
        }
      }
      wp_soogname_meta: {
        payload: Prisma.$wp_soogname_metaPayload<ExtArgs>
        fields: Prisma.wp_soogname_metaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_soogname_metaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_soogname_metaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload>
          }
          findFirst: {
            args: Prisma.wp_soogname_metaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_soogname_metaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload>
          }
          findMany: {
            args: Prisma.wp_soogname_metaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload>[]
          }
          create: {
            args: Prisma.wp_soogname_metaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload>
          }
          createMany: {
            args: Prisma.wp_soogname_metaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_soogname_metaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload>
          }
          update: {
            args: Prisma.wp_soogname_metaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload>
          }
          deleteMany: {
            args: Prisma.wp_soogname_metaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_soogname_metaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_soogname_metaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_soogname_metaPayload>
          }
          aggregate: {
            args: Prisma.Wp_soogname_metaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_soogname_meta>
          }
          groupBy: {
            args: Prisma.wp_soogname_metaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_soogname_metaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_soogname_metaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_soogname_metaCountAggregateOutputType> | number
          }
        }
      }
      wp_term_relationships: {
        payload: Prisma.$wp_term_relationshipsPayload<ExtArgs>
        fields: Prisma.wp_term_relationshipsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_term_relationshipsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_term_relationshipsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          findFirst: {
            args: Prisma.wp_term_relationshipsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_term_relationshipsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          findMany: {
            args: Prisma.wp_term_relationshipsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>[]
          }
          create: {
            args: Prisma.wp_term_relationshipsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          createMany: {
            args: Prisma.wp_term_relationshipsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_term_relationshipsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          update: {
            args: Prisma.wp_term_relationshipsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          deleteMany: {
            args: Prisma.wp_term_relationshipsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_term_relationshipsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_term_relationshipsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_relationshipsPayload>
          }
          aggregate: {
            args: Prisma.Wp_term_relationshipsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_term_relationships>
          }
          groupBy: {
            args: Prisma.wp_term_relationshipsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_relationshipsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_term_relationshipsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_relationshipsCountAggregateOutputType> | number
          }
        }
      }
      wp_term_taxonomy: {
        payload: Prisma.$wp_term_taxonomyPayload<ExtArgs>
        fields: Prisma.wp_term_taxonomyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_term_taxonomyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_term_taxonomyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          findFirst: {
            args: Prisma.wp_term_taxonomyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_term_taxonomyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          findMany: {
            args: Prisma.wp_term_taxonomyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>[]
          }
          create: {
            args: Prisma.wp_term_taxonomyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          createMany: {
            args: Prisma.wp_term_taxonomyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_term_taxonomyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          update: {
            args: Prisma.wp_term_taxonomyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          deleteMany: {
            args: Prisma.wp_term_taxonomyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_term_taxonomyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_term_taxonomyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_term_taxonomyPayload>
          }
          aggregate: {
            args: Prisma.Wp_term_taxonomyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_term_taxonomy>
          }
          groupBy: {
            args: Prisma.wp_term_taxonomyGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_taxonomyGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_term_taxonomyCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_term_taxonomyCountAggregateOutputType> | number
          }
        }
      }
      wp_termmeta: {
        payload: Prisma.$wp_termmetaPayload<ExtArgs>
        fields: Prisma.wp_termmetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_termmetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_termmetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          findFirst: {
            args: Prisma.wp_termmetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_termmetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          findMany: {
            args: Prisma.wp_termmetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>[]
          }
          create: {
            args: Prisma.wp_termmetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          createMany: {
            args: Prisma.wp_termmetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_termmetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          update: {
            args: Prisma.wp_termmetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_termmetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_termmetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_termmetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termmetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_termmetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_termmeta>
          }
          groupBy: {
            args: Prisma.wp_termmetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_termmetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_termmetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_termmetaCountAggregateOutputType> | number
          }
        }
      }
      wp_terms: {
        payload: Prisma.$wp_termsPayload<ExtArgs>
        fields: Prisma.wp_termsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_termsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_termsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          findFirst: {
            args: Prisma.wp_termsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_termsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          findMany: {
            args: Prisma.wp_termsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>[]
          }
          create: {
            args: Prisma.wp_termsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          createMany: {
            args: Prisma.wp_termsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_termsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          update: {
            args: Prisma.wp_termsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          deleteMany: {
            args: Prisma.wp_termsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_termsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_termsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_termsPayload>
          }
          aggregate: {
            args: Prisma.Wp_termsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_terms>
          }
          groupBy: {
            args: Prisma.wp_termsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_termsGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_termsCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_termsCountAggregateOutputType> | number
          }
        }
      }
      wp_usermeta: {
        payload: Prisma.$wp_usermetaPayload<ExtArgs>
        fields: Prisma.wp_usermetaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_usermetaFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_usermetaFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          findFirst: {
            args: Prisma.wp_usermetaFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_usermetaFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          findMany: {
            args: Prisma.wp_usermetaFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>[]
          }
          create: {
            args: Prisma.wp_usermetaCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          createMany: {
            args: Prisma.wp_usermetaCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_usermetaDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          update: {
            args: Prisma.wp_usermetaUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          deleteMany: {
            args: Prisma.wp_usermetaDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_usermetaUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_usermetaUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usermetaPayload>
          }
          aggregate: {
            args: Prisma.Wp_usermetaAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_usermeta>
          }
          groupBy: {
            args: Prisma.wp_usermetaGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_usermetaGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_usermetaCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_usermetaCountAggregateOutputType> | number
          }
        }
      }
      wp_users: {
        payload: Prisma.$wp_usersPayload<ExtArgs>
        fields: Prisma.wp_usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          findFirst: {
            args: Prisma.wp_usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          findMany: {
            args: Prisma.wp_usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>[]
          }
          create: {
            args: Prisma.wp_usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          createMany: {
            args: Prisma.wp_usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          update: {
            args: Prisma.wp_usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          deleteMany: {
            args: Prisma.wp_usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_usersPayload>
          }
          aggregate: {
            args: Prisma.Wp_usersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_users>
          }
          groupBy: {
            args: Prisma.wp_usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_usersGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_usersCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_usersCountAggregateOutputType> | number
          }
        }
      }
      wp_wpr_above_the_fold: {
        payload: Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>
        fields: Prisma.wp_wpr_above_the_foldFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpr_above_the_foldFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpr_above_the_foldFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload>
          }
          findFirst: {
            args: Prisma.wp_wpr_above_the_foldFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpr_above_the_foldFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload>
          }
          findMany: {
            args: Prisma.wp_wpr_above_the_foldFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload>[]
          }
          create: {
            args: Prisma.wp_wpr_above_the_foldCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload>
          }
          createMany: {
            args: Prisma.wp_wpr_above_the_foldCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpr_above_the_foldDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload>
          }
          update: {
            args: Prisma.wp_wpr_above_the_foldUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload>
          }
          deleteMany: {
            args: Prisma.wp_wpr_above_the_foldDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpr_above_the_foldUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpr_above_the_foldUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_above_the_foldPayload>
          }
          aggregate: {
            args: Prisma.Wp_wpr_above_the_foldAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpr_above_the_fold>
          }
          groupBy: {
            args: Prisma.wp_wpr_above_the_foldGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpr_above_the_foldGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpr_above_the_foldCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpr_above_the_foldCountAggregateOutputType> | number
          }
        }
      }
      wp_wpr_rocket_cache: {
        payload: Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>
        fields: Prisma.wp_wpr_rocket_cacheFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpr_rocket_cacheFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpr_rocket_cacheFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload>
          }
          findFirst: {
            args: Prisma.wp_wpr_rocket_cacheFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpr_rocket_cacheFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload>
          }
          findMany: {
            args: Prisma.wp_wpr_rocket_cacheFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload>[]
          }
          create: {
            args: Prisma.wp_wpr_rocket_cacheCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload>
          }
          createMany: {
            args: Prisma.wp_wpr_rocket_cacheCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpr_rocket_cacheDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload>
          }
          update: {
            args: Prisma.wp_wpr_rocket_cacheUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload>
          }
          deleteMany: {
            args: Prisma.wp_wpr_rocket_cacheDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpr_rocket_cacheUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpr_rocket_cacheUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rocket_cachePayload>
          }
          aggregate: {
            args: Prisma.Wp_wpr_rocket_cacheAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpr_rocket_cache>
          }
          groupBy: {
            args: Prisma.wp_wpr_rocket_cacheGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpr_rocket_cacheGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpr_rocket_cacheCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpr_rocket_cacheCountAggregateOutputType> | number
          }
        }
      }
      wp_wpr_rucss_used_css: {
        payload: Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>
        fields: Prisma.wp_wpr_rucss_used_cssFieldRefs
        operations: {
          findUnique: {
            args: Prisma.wp_wpr_rucss_used_cssFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.wp_wpr_rucss_used_cssFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload>
          }
          findFirst: {
            args: Prisma.wp_wpr_rucss_used_cssFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.wp_wpr_rucss_used_cssFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload>
          }
          findMany: {
            args: Prisma.wp_wpr_rucss_used_cssFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload>[]
          }
          create: {
            args: Prisma.wp_wpr_rucss_used_cssCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload>
          }
          createMany: {
            args: Prisma.wp_wpr_rucss_used_cssCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.wp_wpr_rucss_used_cssDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload>
          }
          update: {
            args: Prisma.wp_wpr_rucss_used_cssUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload>
          }
          deleteMany: {
            args: Prisma.wp_wpr_rucss_used_cssDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.wp_wpr_rucss_used_cssUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.wp_wpr_rucss_used_cssUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$wp_wpr_rucss_used_cssPayload>
          }
          aggregate: {
            args: Prisma.Wp_wpr_rucss_used_cssAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWp_wpr_rucss_used_css>
          }
          groupBy: {
            args: Prisma.wp_wpr_rucss_used_cssGroupByArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpr_rucss_used_cssGroupByOutputType>[]
          }
          count: {
            args: Prisma.wp_wpr_rucss_used_cssCountArgs<ExtArgs>
            result: $Utils.Optional<Wp_wpr_rucss_used_cssCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    wp_actionscheduler_actions?: wp_actionscheduler_actionsOmit
    wp_actionscheduler_claims?: wp_actionscheduler_claimsOmit
    wp_actionscheduler_groups?: wp_actionscheduler_groupsOmit
    wp_actionscheduler_logs?: wp_actionscheduler_logsOmit
    wp_addonlibrary_addons?: wp_addonlibrary_addonsOmit
    wp_addonlibrary_categories?: wp_addonlibrary_categoriesOmit
    wp_ai_stats_events?: wp_ai_stats_eventsOmit
    wp_ai_stats_play?: wp_ai_stats_playOmit
    wp_ai_stats_track?: wp_ai_stats_trackOmit
    wp_audier_elementor_cache?: wp_audier_elementor_cacheOmit
    wp_commentmeta?: wp_commentmetaOmit
    wp_comments?: wp_commentsOmit
    wp_cpmp_player?: wp_cpmp_playerOmit
    wp_e_events?: wp_e_eventsOmit
    wp_e_notes?: wp_e_notesOmit
    wp_e_notes_users_relations?: wp_e_notes_users_relationsOmit
    wp_e_submissions?: wp_e_submissionsOmit
    wp_e_submissions_actions_log?: wp_e_submissions_actions_logOmit
    wp_e_submissions_values?: wp_e_submissions_valuesOmit
    wp_jet_post_types?: wp_jet_post_typesOmit
    wp_jet_smart_filters_indexer?: wp_jet_smart_filters_indexerOmit
    wp_jet_taxonomies?: wp_jet_taxonomiesOmit
    wp_links?: wp_linksOmit
    wp_options?: wp_optionsOmit
    wp_postmeta?: wp_postmetaOmit
    wp_posts?: wp_postsOmit
    wp_rank_math_internal_links?: wp_rank_math_internal_linksOmit
    wp_rank_math_internal_meta?: wp_rank_math_internal_metaOmit
    wp_rtl_rsm_logs?: wp_rtl_rsm_logsOmit
    wp_soogname_meta?: wp_soogname_metaOmit
    wp_term_relationships?: wp_term_relationshipsOmit
    wp_term_taxonomy?: wp_term_taxonomyOmit
    wp_termmeta?: wp_termmetaOmit
    wp_terms?: wp_termsOmit
    wp_usermeta?: wp_usermetaOmit
    wp_users?: wp_usersOmit
    wp_wpr_above_the_fold?: wp_wpr_above_the_foldOmit
    wp_wpr_rocket_cache?: wp_wpr_rocket_cacheOmit
    wp_wpr_rucss_used_css?: wp_wpr_rucss_used_cssOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model wp_actionscheduler_actions
   */

  export type AggregateWp_actionscheduler_actions = {
    _count: Wp_actionscheduler_actionsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_actionsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_actionsSumAggregateOutputType | null
    _min: Wp_actionscheduler_actionsMinAggregateOutputType | null
    _max: Wp_actionscheduler_actionsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_actionsAvgAggregateOutputType = {
    action_id: number | null
    priority: number | null
    group_id: number | null
    attempts: number | null
    claim_id: number | null
  }

  export type Wp_actionscheduler_actionsSumAggregateOutputType = {
    action_id: bigint | null
    priority: number | null
    group_id: bigint | null
    attempts: number | null
    claim_id: bigint | null
  }

  export type Wp_actionscheduler_actionsMinAggregateOutputType = {
    action_id: bigint | null
    hook: string | null
    status: string | null
    scheduled_date_gmt: Date | null
    scheduled_date_local: Date | null
    priority: number | null
    args: string | null
    schedule: string | null
    group_id: bigint | null
    attempts: number | null
    last_attempt_gmt: Date | null
    last_attempt_local: Date | null
    claim_id: bigint | null
    extended_args: string | null
  }

  export type Wp_actionscheduler_actionsMaxAggregateOutputType = {
    action_id: bigint | null
    hook: string | null
    status: string | null
    scheduled_date_gmt: Date | null
    scheduled_date_local: Date | null
    priority: number | null
    args: string | null
    schedule: string | null
    group_id: bigint | null
    attempts: number | null
    last_attempt_gmt: Date | null
    last_attempt_local: Date | null
    claim_id: bigint | null
    extended_args: string | null
  }

  export type Wp_actionscheduler_actionsCountAggregateOutputType = {
    action_id: number
    hook: number
    status: number
    scheduled_date_gmt: number
    scheduled_date_local: number
    priority: number
    args: number
    schedule: number
    group_id: number
    attempts: number
    last_attempt_gmt: number
    last_attempt_local: number
    claim_id: number
    extended_args: number
    _all: number
  }


  export type Wp_actionscheduler_actionsAvgAggregateInputType = {
    action_id?: true
    priority?: true
    group_id?: true
    attempts?: true
    claim_id?: true
  }

  export type Wp_actionscheduler_actionsSumAggregateInputType = {
    action_id?: true
    priority?: true
    group_id?: true
    attempts?: true
    claim_id?: true
  }

  export type Wp_actionscheduler_actionsMinAggregateInputType = {
    action_id?: true
    hook?: true
    status?: true
    scheduled_date_gmt?: true
    scheduled_date_local?: true
    priority?: true
    args?: true
    schedule?: true
    group_id?: true
    attempts?: true
    last_attempt_gmt?: true
    last_attempt_local?: true
    claim_id?: true
    extended_args?: true
  }

  export type Wp_actionscheduler_actionsMaxAggregateInputType = {
    action_id?: true
    hook?: true
    status?: true
    scheduled_date_gmt?: true
    scheduled_date_local?: true
    priority?: true
    args?: true
    schedule?: true
    group_id?: true
    attempts?: true
    last_attempt_gmt?: true
    last_attempt_local?: true
    claim_id?: true
    extended_args?: true
  }

  export type Wp_actionscheduler_actionsCountAggregateInputType = {
    action_id?: true
    hook?: true
    status?: true
    scheduled_date_gmt?: true
    scheduled_date_local?: true
    priority?: true
    args?: true
    schedule?: true
    group_id?: true
    attempts?: true
    last_attempt_gmt?: true
    last_attempt_local?: true
    claim_id?: true
    extended_args?: true
    _all?: true
  }

  export type Wp_actionscheduler_actionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_actions to aggregate.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_actions
    **/
    _count?: true | Wp_actionscheduler_actionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_actionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_actionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_actionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_actionsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_actionsAggregateType<T extends Wp_actionscheduler_actionsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_actions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_actions[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_actions[P]>
  }




  export type wp_actionscheduler_actionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_actionsWhereInput
    orderBy?: wp_actionscheduler_actionsOrderByWithAggregationInput | wp_actionscheduler_actionsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_actionsScalarFieldEnum[] | Wp_actionscheduler_actionsScalarFieldEnum
    having?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_actionsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_actionsAvgAggregateInputType
    _sum?: Wp_actionscheduler_actionsSumAggregateInputType
    _min?: Wp_actionscheduler_actionsMinAggregateInputType
    _max?: Wp_actionscheduler_actionsMaxAggregateInputType
  }

  export type Wp_actionscheduler_actionsGroupByOutputType = {
    action_id: bigint
    hook: string
    status: string
    scheduled_date_gmt: Date | null
    scheduled_date_local: Date | null
    priority: number
    args: string | null
    schedule: string | null
    group_id: bigint
    attempts: number
    last_attempt_gmt: Date | null
    last_attempt_local: Date | null
    claim_id: bigint
    extended_args: string | null
    _count: Wp_actionscheduler_actionsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_actionsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_actionsSumAggregateOutputType | null
    _min: Wp_actionscheduler_actionsMinAggregateOutputType | null
    _max: Wp_actionscheduler_actionsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_actionsGroupByPayload<T extends wp_actionscheduler_actionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_actionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_actionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_actionsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_actionsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_actionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    action_id?: boolean
    hook?: boolean
    status?: boolean
    scheduled_date_gmt?: boolean
    scheduled_date_local?: boolean
    priority?: boolean
    args?: boolean
    schedule?: boolean
    group_id?: boolean
    attempts?: boolean
    last_attempt_gmt?: boolean
    last_attempt_local?: boolean
    claim_id?: boolean
    extended_args?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_actions"]>



  export type wp_actionscheduler_actionsSelectScalar = {
    action_id?: boolean
    hook?: boolean
    status?: boolean
    scheduled_date_gmt?: boolean
    scheduled_date_local?: boolean
    priority?: boolean
    args?: boolean
    schedule?: boolean
    group_id?: boolean
    attempts?: boolean
    last_attempt_gmt?: boolean
    last_attempt_local?: boolean
    claim_id?: boolean
    extended_args?: boolean
  }

  export type wp_actionscheduler_actionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"action_id" | "hook" | "status" | "scheduled_date_gmt" | "scheduled_date_local" | "priority" | "args" | "schedule" | "group_id" | "attempts" | "last_attempt_gmt" | "last_attempt_local" | "claim_id" | "extended_args", ExtArgs["result"]["wp_actionscheduler_actions"]>

  export type $wp_actionscheduler_actionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_actions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      action_id: bigint
      hook: string
      status: string
      scheduled_date_gmt: Date | null
      scheduled_date_local: Date | null
      priority: number
      args: string | null
      schedule: string | null
      group_id: bigint
      attempts: number
      last_attempt_gmt: Date | null
      last_attempt_local: Date | null
      claim_id: bigint
      extended_args: string | null
    }, ExtArgs["result"]["wp_actionscheduler_actions"]>
    composites: {}
  }

  type wp_actionscheduler_actionsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_actionsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload, S>

  type wp_actionscheduler_actionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_actionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_actionsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_actionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_actions'], meta: { name: 'wp_actionscheduler_actions' } }
    /**
     * Find zero or one Wp_actionscheduler_actions that matches the filter.
     * @param {wp_actionscheduler_actionsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_actionsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_actionsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_actions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_actionsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_actionsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_actionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_actions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_actionsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_actions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_actions
     * @example
     * // Get one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_actionsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_actions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.findMany({ take: 10 })
     * 
     * // Only select the `action_id`
     * const wp_actionscheduler_actionsWithAction_idOnly = await prisma.wp_actionscheduler_actions.findMany({ select: { action_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_actionsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsCreateArgs} args - Arguments to create a Wp_actionscheduler_actions.
     * @example
     * // Create one Wp_actionscheduler_actions
     * const Wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_actions
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_actionsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_actionsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_actions.
     * @example
     * // Create many Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_actionsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_actions.
     * @example
     * // Delete one Wp_actionscheduler_actions
     * const Wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_actions
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_actionsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_actionsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsUpdateArgs} args - Arguments to update one Wp_actionscheduler_actions.
     * @example
     * // Update one Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_actionsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_actionsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_actions to delete.
     * @example
     * // Delete a few Wp_actionscheduler_actions
     * const { count } = await prisma.wp_actionscheduler_actions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_actionsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_actionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_actionsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_actionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_actions.
     * @param {wp_actionscheduler_actionsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_actions.
     * @example
     * // Update or create a Wp_actionscheduler_actions
     * const wp_actionscheduler_actions = await prisma.wp_actionscheduler_actions.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_actions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_actions we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_actionsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_actionsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_actionsClient<$Result.GetResult<Prisma.$wp_actionscheduler_actionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsCountArgs} args - Arguments to filter Wp_actionscheduler_actions to count.
     * @example
     * // Count the number of Wp_actionscheduler_actions
     * const count = await prisma.wp_actionscheduler_actions.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_actions we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_actionsCountArgs>(
      args?: Subset<T, wp_actionscheduler_actionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_actionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_actionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_actionsAggregateArgs>(args: Subset<T, Wp_actionscheduler_actionsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_actionsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_actions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_actionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_actionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_actionsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_actionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_actionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_actionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_actions model
   */
  readonly fields: wp_actionscheduler_actionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_actions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_actionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_actions model
   */
  interface wp_actionscheduler_actionsFieldRefs {
    readonly action_id: FieldRef<"wp_actionscheduler_actions", 'BigInt'>
    readonly hook: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly status: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly scheduled_date_gmt: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly scheduled_date_local: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly priority: FieldRef<"wp_actionscheduler_actions", 'Int'>
    readonly args: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly schedule: FieldRef<"wp_actionscheduler_actions", 'String'>
    readonly group_id: FieldRef<"wp_actionscheduler_actions", 'BigInt'>
    readonly attempts: FieldRef<"wp_actionscheduler_actions", 'Int'>
    readonly last_attempt_gmt: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly last_attempt_local: FieldRef<"wp_actionscheduler_actions", 'DateTime'>
    readonly claim_id: FieldRef<"wp_actionscheduler_actions", 'BigInt'>
    readonly extended_args: FieldRef<"wp_actionscheduler_actions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_actions findUnique
   */
  export type wp_actionscheduler_actionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions findUniqueOrThrow
   */
  export type wp_actionscheduler_actionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions findFirst
   */
  export type wp_actionscheduler_actionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_actions.
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_actions.
     */
    distinct?: Wp_actionscheduler_actionsScalarFieldEnum | Wp_actionscheduler_actionsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_actions findFirstOrThrow
   */
  export type wp_actionscheduler_actionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_actions.
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_actions.
     */
    distinct?: Wp_actionscheduler_actionsScalarFieldEnum | Wp_actionscheduler_actionsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_actions findMany
   */
  export type wp_actionscheduler_actionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_actions to fetch.
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_actions to fetch.
     */
    orderBy?: wp_actionscheduler_actionsOrderByWithRelationInput | wp_actionscheduler_actionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_actions.
     */
    cursor?: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_actions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_actions.
     */
    skip?: number
    distinct?: Wp_actionscheduler_actionsScalarFieldEnum | Wp_actionscheduler_actionsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_actions create
   */
  export type wp_actionscheduler_actionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_actions.
     */
    data: XOR<wp_actionscheduler_actionsCreateInput, wp_actionscheduler_actionsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_actions createMany
   */
  export type wp_actionscheduler_actionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_actions.
     */
    data: wp_actionscheduler_actionsCreateManyInput | wp_actionscheduler_actionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_actions update
   */
  export type wp_actionscheduler_actionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_actions.
     */
    data: XOR<wp_actionscheduler_actionsUpdateInput, wp_actionscheduler_actionsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_actions to update.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions updateMany
   */
  export type wp_actionscheduler_actionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_actions.
     */
    data: XOR<wp_actionscheduler_actionsUpdateManyMutationInput, wp_actionscheduler_actionsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_actions to update
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * Limit how many wp_actionscheduler_actions to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_actions upsert
   */
  export type wp_actionscheduler_actionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_actions to update in case it exists.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_actions found by the `where` argument doesn't exist, create a new wp_actionscheduler_actions with this data.
     */
    create: XOR<wp_actionscheduler_actionsCreateInput, wp_actionscheduler_actionsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_actions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_actionsUpdateInput, wp_actionscheduler_actionsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_actions delete
   */
  export type wp_actionscheduler_actionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_actions to delete.
     */
    where: wp_actionscheduler_actionsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_actions deleteMany
   */
  export type wp_actionscheduler_actionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_actions to delete
     */
    where?: wp_actionscheduler_actionsWhereInput
    /**
     * Limit how many wp_actionscheduler_actions to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_actions without action
   */
  export type wp_actionscheduler_actionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_actions
     */
    select?: wp_actionscheduler_actionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_actions
     */
    omit?: wp_actionscheduler_actionsOmit<ExtArgs> | null
  }


  /**
   * Model wp_actionscheduler_claims
   */

  export type AggregateWp_actionscheduler_claims = {
    _count: Wp_actionscheduler_claimsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_claimsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_claimsSumAggregateOutputType | null
    _min: Wp_actionscheduler_claimsMinAggregateOutputType | null
    _max: Wp_actionscheduler_claimsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_claimsAvgAggregateOutputType = {
    claim_id: number | null
  }

  export type Wp_actionscheduler_claimsSumAggregateOutputType = {
    claim_id: bigint | null
  }

  export type Wp_actionscheduler_claimsMinAggregateOutputType = {
    claim_id: bigint | null
    date_created_gmt: Date | null
  }

  export type Wp_actionscheduler_claimsMaxAggregateOutputType = {
    claim_id: bigint | null
    date_created_gmt: Date | null
  }

  export type Wp_actionscheduler_claimsCountAggregateOutputType = {
    claim_id: number
    date_created_gmt: number
    _all: number
  }


  export type Wp_actionscheduler_claimsAvgAggregateInputType = {
    claim_id?: true
  }

  export type Wp_actionscheduler_claimsSumAggregateInputType = {
    claim_id?: true
  }

  export type Wp_actionscheduler_claimsMinAggregateInputType = {
    claim_id?: true
    date_created_gmt?: true
  }

  export type Wp_actionscheduler_claimsMaxAggregateInputType = {
    claim_id?: true
    date_created_gmt?: true
  }

  export type Wp_actionscheduler_claimsCountAggregateInputType = {
    claim_id?: true
    date_created_gmt?: true
    _all?: true
  }

  export type Wp_actionscheduler_claimsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_claims to aggregate.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_claims
    **/
    _count?: true | Wp_actionscheduler_claimsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_claimsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_claimsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_claimsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_claimsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_claimsAggregateType<T extends Wp_actionscheduler_claimsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_claims]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_claims[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_claims[P]>
  }




  export type wp_actionscheduler_claimsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_claimsWhereInput
    orderBy?: wp_actionscheduler_claimsOrderByWithAggregationInput | wp_actionscheduler_claimsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_claimsScalarFieldEnum[] | Wp_actionscheduler_claimsScalarFieldEnum
    having?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_claimsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_claimsAvgAggregateInputType
    _sum?: Wp_actionscheduler_claimsSumAggregateInputType
    _min?: Wp_actionscheduler_claimsMinAggregateInputType
    _max?: Wp_actionscheduler_claimsMaxAggregateInputType
  }

  export type Wp_actionscheduler_claimsGroupByOutputType = {
    claim_id: bigint
    date_created_gmt: Date | null
    _count: Wp_actionscheduler_claimsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_claimsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_claimsSumAggregateOutputType | null
    _min: Wp_actionscheduler_claimsMinAggregateOutputType | null
    _max: Wp_actionscheduler_claimsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_claimsGroupByPayload<T extends wp_actionscheduler_claimsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_claimsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_claimsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_claimsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_claimsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_claimsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    claim_id?: boolean
    date_created_gmt?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_claims"]>



  export type wp_actionscheduler_claimsSelectScalar = {
    claim_id?: boolean
    date_created_gmt?: boolean
  }

  export type wp_actionscheduler_claimsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"claim_id" | "date_created_gmt", ExtArgs["result"]["wp_actionscheduler_claims"]>

  export type $wp_actionscheduler_claimsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_claims"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      claim_id: bigint
      date_created_gmt: Date | null
    }, ExtArgs["result"]["wp_actionscheduler_claims"]>
    composites: {}
  }

  type wp_actionscheduler_claimsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_claimsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload, S>

  type wp_actionscheduler_claimsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_claimsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_claimsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_claimsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_claims'], meta: { name: 'wp_actionscheduler_claims' } }
    /**
     * Find zero or one Wp_actionscheduler_claims that matches the filter.
     * @param {wp_actionscheduler_claimsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_claimsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_claimsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_claims that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_claimsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_claimsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_claimsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_claimsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_claims that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_claims
     * @example
     * // Get one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_claimsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.findMany({ take: 10 })
     * 
     * // Only select the `claim_id`
     * const wp_actionscheduler_claimsWithClaim_idOnly = await prisma.wp_actionscheduler_claims.findMany({ select: { claim_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_claimsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsCreateArgs} args - Arguments to create a Wp_actionscheduler_claims.
     * @example
     * // Create one Wp_actionscheduler_claims
     * const Wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_claims
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_claimsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_claimsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_claims.
     * @example
     * // Create many Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_claimsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_claims.
     * @example
     * // Delete one Wp_actionscheduler_claims
     * const Wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_claims
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_claimsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_claimsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsUpdateArgs} args - Arguments to update one Wp_actionscheduler_claims.
     * @example
     * // Update one Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_claimsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_claimsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_claims to delete.
     * @example
     * // Delete a few Wp_actionscheduler_claims
     * const { count } = await prisma.wp_actionscheduler_claims.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_claimsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_claimsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_claimsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_claimsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_claims.
     * @param {wp_actionscheduler_claimsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_claims.
     * @example
     * // Update or create a Wp_actionscheduler_claims
     * const wp_actionscheduler_claims = await prisma.wp_actionscheduler_claims.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_claims
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_claims we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_claimsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_claimsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_claimsClient<$Result.GetResult<Prisma.$wp_actionscheduler_claimsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsCountArgs} args - Arguments to filter Wp_actionscheduler_claims to count.
     * @example
     * // Count the number of Wp_actionscheduler_claims
     * const count = await prisma.wp_actionscheduler_claims.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_claims we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_claimsCountArgs>(
      args?: Subset<T, wp_actionscheduler_claimsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_claimsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_claimsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_claimsAggregateArgs>(args: Subset<T, Wp_actionscheduler_claimsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_claimsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_claimsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_claimsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_claimsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_claimsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_claimsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_claimsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_claims model
   */
  readonly fields: wp_actionscheduler_claimsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_claims.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_claimsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_claims model
   */
  interface wp_actionscheduler_claimsFieldRefs {
    readonly claim_id: FieldRef<"wp_actionscheduler_claims", 'BigInt'>
    readonly date_created_gmt: FieldRef<"wp_actionscheduler_claims", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_claims findUnique
   */
  export type wp_actionscheduler_claimsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims findUniqueOrThrow
   */
  export type wp_actionscheduler_claimsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims findFirst
   */
  export type wp_actionscheduler_claimsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_claims.
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_claims.
     */
    distinct?: Wp_actionscheduler_claimsScalarFieldEnum | Wp_actionscheduler_claimsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_claims findFirstOrThrow
   */
  export type wp_actionscheduler_claimsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_claims.
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_claims.
     */
    distinct?: Wp_actionscheduler_claimsScalarFieldEnum | Wp_actionscheduler_claimsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_claims findMany
   */
  export type wp_actionscheduler_claimsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_claims to fetch.
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_claims to fetch.
     */
    orderBy?: wp_actionscheduler_claimsOrderByWithRelationInput | wp_actionscheduler_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_claims.
     */
    cursor?: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_claims.
     */
    skip?: number
    distinct?: Wp_actionscheduler_claimsScalarFieldEnum | Wp_actionscheduler_claimsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_claims create
   */
  export type wp_actionscheduler_claimsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_claims.
     */
    data?: XOR<wp_actionscheduler_claimsCreateInput, wp_actionscheduler_claimsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_claims createMany
   */
  export type wp_actionscheduler_claimsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_claims.
     */
    data: wp_actionscheduler_claimsCreateManyInput | wp_actionscheduler_claimsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_claims update
   */
  export type wp_actionscheduler_claimsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_claims.
     */
    data: XOR<wp_actionscheduler_claimsUpdateInput, wp_actionscheduler_claimsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_claims to update.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims updateMany
   */
  export type wp_actionscheduler_claimsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_claims.
     */
    data: XOR<wp_actionscheduler_claimsUpdateManyMutationInput, wp_actionscheduler_claimsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_claims to update
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * Limit how many wp_actionscheduler_claims to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_claims upsert
   */
  export type wp_actionscheduler_claimsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_claims to update in case it exists.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_claims found by the `where` argument doesn't exist, create a new wp_actionscheduler_claims with this data.
     */
    create: XOR<wp_actionscheduler_claimsCreateInput, wp_actionscheduler_claimsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_claims was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_claimsUpdateInput, wp_actionscheduler_claimsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_claims delete
   */
  export type wp_actionscheduler_claimsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_claims to delete.
     */
    where: wp_actionscheduler_claimsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_claims deleteMany
   */
  export type wp_actionscheduler_claimsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_claims to delete
     */
    where?: wp_actionscheduler_claimsWhereInput
    /**
     * Limit how many wp_actionscheduler_claims to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_claims without action
   */
  export type wp_actionscheduler_claimsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_claims
     */
    select?: wp_actionscheduler_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_claims
     */
    omit?: wp_actionscheduler_claimsOmit<ExtArgs> | null
  }


  /**
   * Model wp_actionscheduler_groups
   */

  export type AggregateWp_actionscheduler_groups = {
    _count: Wp_actionscheduler_groupsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_groupsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_groupsSumAggregateOutputType | null
    _min: Wp_actionscheduler_groupsMinAggregateOutputType | null
    _max: Wp_actionscheduler_groupsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_groupsAvgAggregateOutputType = {
    group_id: number | null
  }

  export type Wp_actionscheduler_groupsSumAggregateOutputType = {
    group_id: bigint | null
  }

  export type Wp_actionscheduler_groupsMinAggregateOutputType = {
    group_id: bigint | null
    slug: string | null
  }

  export type Wp_actionscheduler_groupsMaxAggregateOutputType = {
    group_id: bigint | null
    slug: string | null
  }

  export type Wp_actionscheduler_groupsCountAggregateOutputType = {
    group_id: number
    slug: number
    _all: number
  }


  export type Wp_actionscheduler_groupsAvgAggregateInputType = {
    group_id?: true
  }

  export type Wp_actionscheduler_groupsSumAggregateInputType = {
    group_id?: true
  }

  export type Wp_actionscheduler_groupsMinAggregateInputType = {
    group_id?: true
    slug?: true
  }

  export type Wp_actionscheduler_groupsMaxAggregateInputType = {
    group_id?: true
    slug?: true
  }

  export type Wp_actionscheduler_groupsCountAggregateInputType = {
    group_id?: true
    slug?: true
    _all?: true
  }

  export type Wp_actionscheduler_groupsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_groups to aggregate.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_groups
    **/
    _count?: true | Wp_actionscheduler_groupsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_groupsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_groupsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_groupsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_groupsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_groupsAggregateType<T extends Wp_actionscheduler_groupsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_groups]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_groups[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_groups[P]>
  }




  export type wp_actionscheduler_groupsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_groupsWhereInput
    orderBy?: wp_actionscheduler_groupsOrderByWithAggregationInput | wp_actionscheduler_groupsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_groupsScalarFieldEnum[] | Wp_actionscheduler_groupsScalarFieldEnum
    having?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_groupsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_groupsAvgAggregateInputType
    _sum?: Wp_actionscheduler_groupsSumAggregateInputType
    _min?: Wp_actionscheduler_groupsMinAggregateInputType
    _max?: Wp_actionscheduler_groupsMaxAggregateInputType
  }

  export type Wp_actionscheduler_groupsGroupByOutputType = {
    group_id: bigint
    slug: string
    _count: Wp_actionscheduler_groupsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_groupsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_groupsSumAggregateOutputType | null
    _min: Wp_actionscheduler_groupsMinAggregateOutputType | null
    _max: Wp_actionscheduler_groupsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_groupsGroupByPayload<T extends wp_actionscheduler_groupsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_groupsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_groupsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_groupsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_groupsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_groupsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    group_id?: boolean
    slug?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_groups"]>



  export type wp_actionscheduler_groupsSelectScalar = {
    group_id?: boolean
    slug?: boolean
  }

  export type wp_actionscheduler_groupsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"group_id" | "slug", ExtArgs["result"]["wp_actionscheduler_groups"]>

  export type $wp_actionscheduler_groupsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_groups"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      group_id: bigint
      slug: string
    }, ExtArgs["result"]["wp_actionscheduler_groups"]>
    composites: {}
  }

  type wp_actionscheduler_groupsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_groupsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload, S>

  type wp_actionscheduler_groupsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_groupsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_groupsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_groupsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_groups'], meta: { name: 'wp_actionscheduler_groups' } }
    /**
     * Find zero or one Wp_actionscheduler_groups that matches the filter.
     * @param {wp_actionscheduler_groupsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_groupsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_groupsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_groups that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_groupsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_groupsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_groupsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_groupsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_groups that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_groups
     * @example
     * // Get one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_groupsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_groups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.findMany({ take: 10 })
     * 
     * // Only select the `group_id`
     * const wp_actionscheduler_groupsWithGroup_idOnly = await prisma.wp_actionscheduler_groups.findMany({ select: { group_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_groupsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsCreateArgs} args - Arguments to create a Wp_actionscheduler_groups.
     * @example
     * // Create one Wp_actionscheduler_groups
     * const Wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_groups
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_groupsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_groupsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_groups.
     * @example
     * // Create many Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_groupsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_groups.
     * @example
     * // Delete one Wp_actionscheduler_groups
     * const Wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_groups
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_groupsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_groupsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsUpdateArgs} args - Arguments to update one Wp_actionscheduler_groups.
     * @example
     * // Update one Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_groupsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_groupsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_groups to delete.
     * @example
     * // Delete a few Wp_actionscheduler_groups
     * const { count } = await prisma.wp_actionscheduler_groups.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_groupsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_groupsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_groupsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_groupsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_groups.
     * @param {wp_actionscheduler_groupsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_groups.
     * @example
     * // Update or create a Wp_actionscheduler_groups
     * const wp_actionscheduler_groups = await prisma.wp_actionscheduler_groups.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_groups
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_groups we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_groupsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_groupsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_groupsClient<$Result.GetResult<Prisma.$wp_actionscheduler_groupsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsCountArgs} args - Arguments to filter Wp_actionscheduler_groups to count.
     * @example
     * // Count the number of Wp_actionscheduler_groups
     * const count = await prisma.wp_actionscheduler_groups.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_groups we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_groupsCountArgs>(
      args?: Subset<T, wp_actionscheduler_groupsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_groupsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_groupsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_groupsAggregateArgs>(args: Subset<T, Wp_actionscheduler_groupsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_groupsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_groups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_groupsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_groupsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_groupsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_groupsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_groupsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_groupsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_groups model
   */
  readonly fields: wp_actionscheduler_groupsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_groups.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_groupsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_groups model
   */
  interface wp_actionscheduler_groupsFieldRefs {
    readonly group_id: FieldRef<"wp_actionscheduler_groups", 'BigInt'>
    readonly slug: FieldRef<"wp_actionscheduler_groups", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_groups findUnique
   */
  export type wp_actionscheduler_groupsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups findUniqueOrThrow
   */
  export type wp_actionscheduler_groupsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups findFirst
   */
  export type wp_actionscheduler_groupsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_groups.
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_groups.
     */
    distinct?: Wp_actionscheduler_groupsScalarFieldEnum | Wp_actionscheduler_groupsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_groups findFirstOrThrow
   */
  export type wp_actionscheduler_groupsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_groups.
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_groups.
     */
    distinct?: Wp_actionscheduler_groupsScalarFieldEnum | Wp_actionscheduler_groupsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_groups findMany
   */
  export type wp_actionscheduler_groupsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_groups to fetch.
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_groups to fetch.
     */
    orderBy?: wp_actionscheduler_groupsOrderByWithRelationInput | wp_actionscheduler_groupsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_groups.
     */
    cursor?: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_groups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_groups.
     */
    skip?: number
    distinct?: Wp_actionscheduler_groupsScalarFieldEnum | Wp_actionscheduler_groupsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_groups create
   */
  export type wp_actionscheduler_groupsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_groups.
     */
    data: XOR<wp_actionscheduler_groupsCreateInput, wp_actionscheduler_groupsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_groups createMany
   */
  export type wp_actionscheduler_groupsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_groups.
     */
    data: wp_actionscheduler_groupsCreateManyInput | wp_actionscheduler_groupsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_groups update
   */
  export type wp_actionscheduler_groupsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_groups.
     */
    data: XOR<wp_actionscheduler_groupsUpdateInput, wp_actionscheduler_groupsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_groups to update.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups updateMany
   */
  export type wp_actionscheduler_groupsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_groups.
     */
    data: XOR<wp_actionscheduler_groupsUpdateManyMutationInput, wp_actionscheduler_groupsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_groups to update
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * Limit how many wp_actionscheduler_groups to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_groups upsert
   */
  export type wp_actionscheduler_groupsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_groups to update in case it exists.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_groups found by the `where` argument doesn't exist, create a new wp_actionscheduler_groups with this data.
     */
    create: XOR<wp_actionscheduler_groupsCreateInput, wp_actionscheduler_groupsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_groups was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_groupsUpdateInput, wp_actionscheduler_groupsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_groups delete
   */
  export type wp_actionscheduler_groupsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_groups to delete.
     */
    where: wp_actionscheduler_groupsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_groups deleteMany
   */
  export type wp_actionscheduler_groupsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_groups to delete
     */
    where?: wp_actionscheduler_groupsWhereInput
    /**
     * Limit how many wp_actionscheduler_groups to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_groups without action
   */
  export type wp_actionscheduler_groupsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_groups
     */
    select?: wp_actionscheduler_groupsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_groups
     */
    omit?: wp_actionscheduler_groupsOmit<ExtArgs> | null
  }


  /**
   * Model wp_actionscheduler_logs
   */

  export type AggregateWp_actionscheduler_logs = {
    _count: Wp_actionscheduler_logsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_logsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_logsSumAggregateOutputType | null
    _min: Wp_actionscheduler_logsMinAggregateOutputType | null
    _max: Wp_actionscheduler_logsMaxAggregateOutputType | null
  }

  export type Wp_actionscheduler_logsAvgAggregateOutputType = {
    log_id: number | null
    action_id: number | null
  }

  export type Wp_actionscheduler_logsSumAggregateOutputType = {
    log_id: bigint | null
    action_id: bigint | null
  }

  export type Wp_actionscheduler_logsMinAggregateOutputType = {
    log_id: bigint | null
    action_id: bigint | null
    message: string | null
    log_date_gmt: Date | null
    log_date_local: Date | null
  }

  export type Wp_actionscheduler_logsMaxAggregateOutputType = {
    log_id: bigint | null
    action_id: bigint | null
    message: string | null
    log_date_gmt: Date | null
    log_date_local: Date | null
  }

  export type Wp_actionscheduler_logsCountAggregateOutputType = {
    log_id: number
    action_id: number
    message: number
    log_date_gmt: number
    log_date_local: number
    _all: number
  }


  export type Wp_actionscheduler_logsAvgAggregateInputType = {
    log_id?: true
    action_id?: true
  }

  export type Wp_actionscheduler_logsSumAggregateInputType = {
    log_id?: true
    action_id?: true
  }

  export type Wp_actionscheduler_logsMinAggregateInputType = {
    log_id?: true
    action_id?: true
    message?: true
    log_date_gmt?: true
    log_date_local?: true
  }

  export type Wp_actionscheduler_logsMaxAggregateInputType = {
    log_id?: true
    action_id?: true
    message?: true
    log_date_gmt?: true
    log_date_local?: true
  }

  export type Wp_actionscheduler_logsCountAggregateInputType = {
    log_id?: true
    action_id?: true
    message?: true
    log_date_gmt?: true
    log_date_local?: true
    _all?: true
  }

  export type Wp_actionscheduler_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_logs to aggregate.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_actionscheduler_logs
    **/
    _count?: true | Wp_actionscheduler_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_actionscheduler_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_actionscheduler_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_actionscheduler_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_actionscheduler_logsMaxAggregateInputType
  }

  export type GetWp_actionscheduler_logsAggregateType<T extends Wp_actionscheduler_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_actionscheduler_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_actionscheduler_logs[P]>
      : GetScalarType<T[P], AggregateWp_actionscheduler_logs[P]>
  }




  export type wp_actionscheduler_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_actionscheduler_logsWhereInput
    orderBy?: wp_actionscheduler_logsOrderByWithAggregationInput | wp_actionscheduler_logsOrderByWithAggregationInput[]
    by: Wp_actionscheduler_logsScalarFieldEnum[] | Wp_actionscheduler_logsScalarFieldEnum
    having?: wp_actionscheduler_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_actionscheduler_logsCountAggregateInputType | true
    _avg?: Wp_actionscheduler_logsAvgAggregateInputType
    _sum?: Wp_actionscheduler_logsSumAggregateInputType
    _min?: Wp_actionscheduler_logsMinAggregateInputType
    _max?: Wp_actionscheduler_logsMaxAggregateInputType
  }

  export type Wp_actionscheduler_logsGroupByOutputType = {
    log_id: bigint
    action_id: bigint
    message: string
    log_date_gmt: Date | null
    log_date_local: Date | null
    _count: Wp_actionscheduler_logsCountAggregateOutputType | null
    _avg: Wp_actionscheduler_logsAvgAggregateOutputType | null
    _sum: Wp_actionscheduler_logsSumAggregateOutputType | null
    _min: Wp_actionscheduler_logsMinAggregateOutputType | null
    _max: Wp_actionscheduler_logsMaxAggregateOutputType | null
  }

  type GetWp_actionscheduler_logsGroupByPayload<T extends wp_actionscheduler_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_actionscheduler_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_actionscheduler_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_actionscheduler_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_actionscheduler_logsGroupByOutputType[P]>
        }
      >
    >


  export type wp_actionscheduler_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    log_id?: boolean
    action_id?: boolean
    message?: boolean
    log_date_gmt?: boolean
    log_date_local?: boolean
  }, ExtArgs["result"]["wp_actionscheduler_logs"]>



  export type wp_actionscheduler_logsSelectScalar = {
    log_id?: boolean
    action_id?: boolean
    message?: boolean
    log_date_gmt?: boolean
    log_date_local?: boolean
  }

  export type wp_actionscheduler_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"log_id" | "action_id" | "message" | "log_date_gmt" | "log_date_local", ExtArgs["result"]["wp_actionscheduler_logs"]>

  export type $wp_actionscheduler_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_actionscheduler_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      log_id: bigint
      action_id: bigint
      message: string
      log_date_gmt: Date | null
      log_date_local: Date | null
    }, ExtArgs["result"]["wp_actionscheduler_logs"]>
    composites: {}
  }

  type wp_actionscheduler_logsGetPayload<S extends boolean | null | undefined | wp_actionscheduler_logsDefaultArgs> = $Result.GetResult<Prisma.$wp_actionscheduler_logsPayload, S>

  type wp_actionscheduler_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_actionscheduler_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_actionscheduler_logsCountAggregateInputType | true
    }

  export interface wp_actionscheduler_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_actionscheduler_logs'], meta: { name: 'wp_actionscheduler_logs' } }
    /**
     * Find zero or one Wp_actionscheduler_logs that matches the filter.
     * @param {wp_actionscheduler_logsFindUniqueArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_actionscheduler_logsFindUniqueArgs>(args: SelectSubset<T, wp_actionscheduler_logsFindUniqueArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_actionscheduler_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_actionscheduler_logsFindUniqueOrThrowArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_actionscheduler_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_actionscheduler_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsFindFirstArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_actionscheduler_logsFindFirstArgs>(args?: SelectSubset<T, wp_actionscheduler_logsFindFirstArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_actionscheduler_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsFindFirstOrThrowArgs} args - Arguments to find a Wp_actionscheduler_logs
     * @example
     * // Get one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_actionscheduler_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_actionscheduler_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_actionscheduler_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findMany()
     * 
     * // Get first 10 Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.findMany({ take: 10 })
     * 
     * // Only select the `log_id`
     * const wp_actionscheduler_logsWithLog_idOnly = await prisma.wp_actionscheduler_logs.findMany({ select: { log_id: true } })
     * 
     */
    findMany<T extends wp_actionscheduler_logsFindManyArgs>(args?: SelectSubset<T, wp_actionscheduler_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsCreateArgs} args - Arguments to create a Wp_actionscheduler_logs.
     * @example
     * // Create one Wp_actionscheduler_logs
     * const Wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.create({
     *   data: {
     *     // ... data to create a Wp_actionscheduler_logs
     *   }
     * })
     * 
     */
    create<T extends wp_actionscheduler_logsCreateArgs>(args: SelectSubset<T, wp_actionscheduler_logsCreateArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsCreateManyArgs} args - Arguments to create many Wp_actionscheduler_logs.
     * @example
     * // Create many Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_actionscheduler_logsCreateManyArgs>(args?: SelectSubset<T, wp_actionscheduler_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsDeleteArgs} args - Arguments to delete one Wp_actionscheduler_logs.
     * @example
     * // Delete one Wp_actionscheduler_logs
     * const Wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.delete({
     *   where: {
     *     // ... filter to delete one Wp_actionscheduler_logs
     *   }
     * })
     * 
     */
    delete<T extends wp_actionscheduler_logsDeleteArgs>(args: SelectSubset<T, wp_actionscheduler_logsDeleteArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsUpdateArgs} args - Arguments to update one Wp_actionscheduler_logs.
     * @example
     * // Update one Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_actionscheduler_logsUpdateArgs>(args: SelectSubset<T, wp_actionscheduler_logsUpdateArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsDeleteManyArgs} args - Arguments to filter Wp_actionscheduler_logs to delete.
     * @example
     * // Delete a few Wp_actionscheduler_logs
     * const { count } = await prisma.wp_actionscheduler_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_actionscheduler_logsDeleteManyArgs>(args?: SelectSubset<T, wp_actionscheduler_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_actionscheduler_logsUpdateManyArgs>(args: SelectSubset<T, wp_actionscheduler_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_actionscheduler_logs.
     * @param {wp_actionscheduler_logsUpsertArgs} args - Arguments to update or create a Wp_actionscheduler_logs.
     * @example
     * // Update or create a Wp_actionscheduler_logs
     * const wp_actionscheduler_logs = await prisma.wp_actionscheduler_logs.upsert({
     *   create: {
     *     // ... data to create a Wp_actionscheduler_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_logs we want to update
     *   }
     * })
     */
    upsert<T extends wp_actionscheduler_logsUpsertArgs>(args: SelectSubset<T, wp_actionscheduler_logsUpsertArgs<ExtArgs>>): Prisma__wp_actionscheduler_logsClient<$Result.GetResult<Prisma.$wp_actionscheduler_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsCountArgs} args - Arguments to filter Wp_actionscheduler_logs to count.
     * @example
     * // Count the number of Wp_actionscheduler_logs
     * const count = await prisma.wp_actionscheduler_logs.count({
     *   where: {
     *     // ... the filter for the Wp_actionscheduler_logs we want to count
     *   }
     * })
    **/
    count<T extends wp_actionscheduler_logsCountArgs>(
      args?: Subset<T, wp_actionscheduler_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_actionscheduler_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_actionscheduler_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_actionscheduler_logsAggregateArgs>(args: Subset<T, Wp_actionscheduler_logsAggregateArgs>): Prisma.PrismaPromise<GetWp_actionscheduler_logsAggregateType<T>>

    /**
     * Group by Wp_actionscheduler_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_actionscheduler_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_actionscheduler_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_actionscheduler_logsGroupByArgs['orderBy'] }
        : { orderBy?: wp_actionscheduler_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_actionscheduler_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_actionscheduler_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_actionscheduler_logs model
   */
  readonly fields: wp_actionscheduler_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_actionscheduler_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_actionscheduler_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_actionscheduler_logs model
   */
  interface wp_actionscheduler_logsFieldRefs {
    readonly log_id: FieldRef<"wp_actionscheduler_logs", 'BigInt'>
    readonly action_id: FieldRef<"wp_actionscheduler_logs", 'BigInt'>
    readonly message: FieldRef<"wp_actionscheduler_logs", 'String'>
    readonly log_date_gmt: FieldRef<"wp_actionscheduler_logs", 'DateTime'>
    readonly log_date_local: FieldRef<"wp_actionscheduler_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_actionscheduler_logs findUnique
   */
  export type wp_actionscheduler_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs findUniqueOrThrow
   */
  export type wp_actionscheduler_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs findFirst
   */
  export type wp_actionscheduler_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_logs.
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_logs.
     */
    distinct?: Wp_actionscheduler_logsScalarFieldEnum | Wp_actionscheduler_logsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_logs findFirstOrThrow
   */
  export type wp_actionscheduler_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_actionscheduler_logs.
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_actionscheduler_logs.
     */
    distinct?: Wp_actionscheduler_logsScalarFieldEnum | Wp_actionscheduler_logsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_logs findMany
   */
  export type wp_actionscheduler_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_actionscheduler_logs to fetch.
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_actionscheduler_logs to fetch.
     */
    orderBy?: wp_actionscheduler_logsOrderByWithRelationInput | wp_actionscheduler_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_actionscheduler_logs.
     */
    cursor?: wp_actionscheduler_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_actionscheduler_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_actionscheduler_logs.
     */
    skip?: number
    distinct?: Wp_actionscheduler_logsScalarFieldEnum | Wp_actionscheduler_logsScalarFieldEnum[]
  }

  /**
   * wp_actionscheduler_logs create
   */
  export type wp_actionscheduler_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_actionscheduler_logs.
     */
    data: XOR<wp_actionscheduler_logsCreateInput, wp_actionscheduler_logsUncheckedCreateInput>
  }

  /**
   * wp_actionscheduler_logs createMany
   */
  export type wp_actionscheduler_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_actionscheduler_logs.
     */
    data: wp_actionscheduler_logsCreateManyInput | wp_actionscheduler_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_actionscheduler_logs update
   */
  export type wp_actionscheduler_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_actionscheduler_logs.
     */
    data: XOR<wp_actionscheduler_logsUpdateInput, wp_actionscheduler_logsUncheckedUpdateInput>
    /**
     * Choose, which wp_actionscheduler_logs to update.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs updateMany
   */
  export type wp_actionscheduler_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_actionscheduler_logs.
     */
    data: XOR<wp_actionscheduler_logsUpdateManyMutationInput, wp_actionscheduler_logsUncheckedUpdateManyInput>
    /**
     * Filter which wp_actionscheduler_logs to update
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * Limit how many wp_actionscheduler_logs to update.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_logs upsert
   */
  export type wp_actionscheduler_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_actionscheduler_logs to update in case it exists.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
    /**
     * In case the wp_actionscheduler_logs found by the `where` argument doesn't exist, create a new wp_actionscheduler_logs with this data.
     */
    create: XOR<wp_actionscheduler_logsCreateInput, wp_actionscheduler_logsUncheckedCreateInput>
    /**
     * In case the wp_actionscheduler_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_actionscheduler_logsUpdateInput, wp_actionscheduler_logsUncheckedUpdateInput>
  }

  /**
   * wp_actionscheduler_logs delete
   */
  export type wp_actionscheduler_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
    /**
     * Filter which wp_actionscheduler_logs to delete.
     */
    where: wp_actionscheduler_logsWhereUniqueInput
  }

  /**
   * wp_actionscheduler_logs deleteMany
   */
  export type wp_actionscheduler_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_actionscheduler_logs to delete
     */
    where?: wp_actionscheduler_logsWhereInput
    /**
     * Limit how many wp_actionscheduler_logs to delete.
     */
    limit?: number
  }

  /**
   * wp_actionscheduler_logs without action
   */
  export type wp_actionscheduler_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_actionscheduler_logs
     */
    select?: wp_actionscheduler_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_actionscheduler_logs
     */
    omit?: wp_actionscheduler_logsOmit<ExtArgs> | null
  }


  /**
   * Model wp_addonlibrary_addons
   */

  export type AggregateWp_addonlibrary_addons = {
    _count: Wp_addonlibrary_addonsCountAggregateOutputType | null
    _avg: Wp_addonlibrary_addonsAvgAggregateOutputType | null
    _sum: Wp_addonlibrary_addonsSumAggregateOutputType | null
    _min: Wp_addonlibrary_addonsMinAggregateOutputType | null
    _max: Wp_addonlibrary_addonsMaxAggregateOutputType | null
  }

  export type Wp_addonlibrary_addonsAvgAggregateOutputType = {
    id: number | null
    ordering: number | null
    catid: number | null
    is_active: number | null
  }

  export type Wp_addonlibrary_addonsSumAggregateOutputType = {
    id: bigint | null
    ordering: number | null
    catid: number | null
    is_active: number | null
  }

  export type Wp_addonlibrary_addonsMinAggregateOutputType = {
    id: bigint | null
    title: string | null
    name: string | null
    alias: string | null
    addontype: string | null
    description: string | null
    ordering: number | null
    templates: string | null
    config: string | null
    catid: number | null
    is_active: number | null
    test_slot1: string | null
    test_slot2: string | null
    test_slot3: string | null
  }

  export type Wp_addonlibrary_addonsMaxAggregateOutputType = {
    id: bigint | null
    title: string | null
    name: string | null
    alias: string | null
    addontype: string | null
    description: string | null
    ordering: number | null
    templates: string | null
    config: string | null
    catid: number | null
    is_active: number | null
    test_slot1: string | null
    test_slot2: string | null
    test_slot3: string | null
  }

  export type Wp_addonlibrary_addonsCountAggregateOutputType = {
    id: number
    title: number
    name: number
    alias: number
    addontype: number
    description: number
    ordering: number
    templates: number
    config: number
    catid: number
    is_active: number
    test_slot1: number
    test_slot2: number
    test_slot3: number
    _all: number
  }


  export type Wp_addonlibrary_addonsAvgAggregateInputType = {
    id?: true
    ordering?: true
    catid?: true
    is_active?: true
  }

  export type Wp_addonlibrary_addonsSumAggregateInputType = {
    id?: true
    ordering?: true
    catid?: true
    is_active?: true
  }

  export type Wp_addonlibrary_addonsMinAggregateInputType = {
    id?: true
    title?: true
    name?: true
    alias?: true
    addontype?: true
    description?: true
    ordering?: true
    templates?: true
    config?: true
    catid?: true
    is_active?: true
    test_slot1?: true
    test_slot2?: true
    test_slot3?: true
  }

  export type Wp_addonlibrary_addonsMaxAggregateInputType = {
    id?: true
    title?: true
    name?: true
    alias?: true
    addontype?: true
    description?: true
    ordering?: true
    templates?: true
    config?: true
    catid?: true
    is_active?: true
    test_slot1?: true
    test_slot2?: true
    test_slot3?: true
  }

  export type Wp_addonlibrary_addonsCountAggregateInputType = {
    id?: true
    title?: true
    name?: true
    alias?: true
    addontype?: true
    description?: true
    ordering?: true
    templates?: true
    config?: true
    catid?: true
    is_active?: true
    test_slot1?: true
    test_slot2?: true
    test_slot3?: true
    _all?: true
  }

  export type Wp_addonlibrary_addonsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_addonlibrary_addons to aggregate.
     */
    where?: wp_addonlibrary_addonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_addons to fetch.
     */
    orderBy?: wp_addonlibrary_addonsOrderByWithRelationInput | wp_addonlibrary_addonsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_addonlibrary_addonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_addons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_addons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_addonlibrary_addons
    **/
    _count?: true | Wp_addonlibrary_addonsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_addonlibrary_addonsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_addonlibrary_addonsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_addonlibrary_addonsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_addonlibrary_addonsMaxAggregateInputType
  }

  export type GetWp_addonlibrary_addonsAggregateType<T extends Wp_addonlibrary_addonsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_addonlibrary_addons]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_addonlibrary_addons[P]>
      : GetScalarType<T[P], AggregateWp_addonlibrary_addons[P]>
  }




  export type wp_addonlibrary_addonsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_addonlibrary_addonsWhereInput
    orderBy?: wp_addonlibrary_addonsOrderByWithAggregationInput | wp_addonlibrary_addonsOrderByWithAggregationInput[]
    by: Wp_addonlibrary_addonsScalarFieldEnum[] | Wp_addonlibrary_addonsScalarFieldEnum
    having?: wp_addonlibrary_addonsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_addonlibrary_addonsCountAggregateInputType | true
    _avg?: Wp_addonlibrary_addonsAvgAggregateInputType
    _sum?: Wp_addonlibrary_addonsSumAggregateInputType
    _min?: Wp_addonlibrary_addonsMinAggregateInputType
    _max?: Wp_addonlibrary_addonsMaxAggregateInputType
  }

  export type Wp_addonlibrary_addonsGroupByOutputType = {
    id: bigint
    title: string | null
    name: string | null
    alias: string | null
    addontype: string | null
    description: string | null
    ordering: number
    templates: string | null
    config: string | null
    catid: number | null
    is_active: number | null
    test_slot1: string | null
    test_slot2: string | null
    test_slot3: string | null
    _count: Wp_addonlibrary_addonsCountAggregateOutputType | null
    _avg: Wp_addonlibrary_addonsAvgAggregateOutputType | null
    _sum: Wp_addonlibrary_addonsSumAggregateOutputType | null
    _min: Wp_addonlibrary_addonsMinAggregateOutputType | null
    _max: Wp_addonlibrary_addonsMaxAggregateOutputType | null
  }

  type GetWp_addonlibrary_addonsGroupByPayload<T extends wp_addonlibrary_addonsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_addonlibrary_addonsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_addonlibrary_addonsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_addonlibrary_addonsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_addonlibrary_addonsGroupByOutputType[P]>
        }
      >
    >


  export type wp_addonlibrary_addonsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    name?: boolean
    alias?: boolean
    addontype?: boolean
    description?: boolean
    ordering?: boolean
    templates?: boolean
    config?: boolean
    catid?: boolean
    is_active?: boolean
    test_slot1?: boolean
    test_slot2?: boolean
    test_slot3?: boolean
  }, ExtArgs["result"]["wp_addonlibrary_addons"]>



  export type wp_addonlibrary_addonsSelectScalar = {
    id?: boolean
    title?: boolean
    name?: boolean
    alias?: boolean
    addontype?: boolean
    description?: boolean
    ordering?: boolean
    templates?: boolean
    config?: boolean
    catid?: boolean
    is_active?: boolean
    test_slot1?: boolean
    test_slot2?: boolean
    test_slot3?: boolean
  }

  export type wp_addonlibrary_addonsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "name" | "alias" | "addontype" | "description" | "ordering" | "templates" | "config" | "catid" | "is_active" | "test_slot1" | "test_slot2" | "test_slot3", ExtArgs["result"]["wp_addonlibrary_addons"]>

  export type $wp_addonlibrary_addonsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_addonlibrary_addons"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      title: string | null
      name: string | null
      alias: string | null
      addontype: string | null
      description: string | null
      ordering: number
      templates: string | null
      config: string | null
      catid: number | null
      is_active: number | null
      test_slot1: string | null
      test_slot2: string | null
      test_slot3: string | null
    }, ExtArgs["result"]["wp_addonlibrary_addons"]>
    composites: {}
  }

  type wp_addonlibrary_addonsGetPayload<S extends boolean | null | undefined | wp_addonlibrary_addonsDefaultArgs> = $Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload, S>

  type wp_addonlibrary_addonsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_addonlibrary_addonsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_addonlibrary_addonsCountAggregateInputType | true
    }

  export interface wp_addonlibrary_addonsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_addonlibrary_addons'], meta: { name: 'wp_addonlibrary_addons' } }
    /**
     * Find zero or one Wp_addonlibrary_addons that matches the filter.
     * @param {wp_addonlibrary_addonsFindUniqueArgs} args - Arguments to find a Wp_addonlibrary_addons
     * @example
     * // Get one Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_addonlibrary_addonsFindUniqueArgs>(args: SelectSubset<T, wp_addonlibrary_addonsFindUniqueArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_addonlibrary_addons that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_addonlibrary_addonsFindUniqueOrThrowArgs} args - Arguments to find a Wp_addonlibrary_addons
     * @example
     * // Get one Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_addonlibrary_addonsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_addonlibrary_addonsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_addonlibrary_addons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_addonsFindFirstArgs} args - Arguments to find a Wp_addonlibrary_addons
     * @example
     * // Get one Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_addonlibrary_addonsFindFirstArgs>(args?: SelectSubset<T, wp_addonlibrary_addonsFindFirstArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_addonlibrary_addons that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_addonsFindFirstOrThrowArgs} args - Arguments to find a Wp_addonlibrary_addons
     * @example
     * // Get one Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_addonlibrary_addonsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_addonlibrary_addonsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_addonlibrary_addons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_addonsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.findMany()
     * 
     * // Get first 10 Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_addonlibrary_addonsWithIdOnly = await prisma.wp_addonlibrary_addons.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_addonlibrary_addonsFindManyArgs>(args?: SelectSubset<T, wp_addonlibrary_addonsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_addonlibrary_addons.
     * @param {wp_addonlibrary_addonsCreateArgs} args - Arguments to create a Wp_addonlibrary_addons.
     * @example
     * // Create one Wp_addonlibrary_addons
     * const Wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.create({
     *   data: {
     *     // ... data to create a Wp_addonlibrary_addons
     *   }
     * })
     * 
     */
    create<T extends wp_addonlibrary_addonsCreateArgs>(args: SelectSubset<T, wp_addonlibrary_addonsCreateArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_addonlibrary_addons.
     * @param {wp_addonlibrary_addonsCreateManyArgs} args - Arguments to create many Wp_addonlibrary_addons.
     * @example
     * // Create many Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_addonlibrary_addonsCreateManyArgs>(args?: SelectSubset<T, wp_addonlibrary_addonsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_addonlibrary_addons.
     * @param {wp_addonlibrary_addonsDeleteArgs} args - Arguments to delete one Wp_addonlibrary_addons.
     * @example
     * // Delete one Wp_addonlibrary_addons
     * const Wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.delete({
     *   where: {
     *     // ... filter to delete one Wp_addonlibrary_addons
     *   }
     * })
     * 
     */
    delete<T extends wp_addonlibrary_addonsDeleteArgs>(args: SelectSubset<T, wp_addonlibrary_addonsDeleteArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_addonlibrary_addons.
     * @param {wp_addonlibrary_addonsUpdateArgs} args - Arguments to update one Wp_addonlibrary_addons.
     * @example
     * // Update one Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_addonlibrary_addonsUpdateArgs>(args: SelectSubset<T, wp_addonlibrary_addonsUpdateArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_addonlibrary_addons.
     * @param {wp_addonlibrary_addonsDeleteManyArgs} args - Arguments to filter Wp_addonlibrary_addons to delete.
     * @example
     * // Delete a few Wp_addonlibrary_addons
     * const { count } = await prisma.wp_addonlibrary_addons.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_addonlibrary_addonsDeleteManyArgs>(args?: SelectSubset<T, wp_addonlibrary_addonsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_addonlibrary_addons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_addonsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_addonlibrary_addonsUpdateManyArgs>(args: SelectSubset<T, wp_addonlibrary_addonsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_addonlibrary_addons.
     * @param {wp_addonlibrary_addonsUpsertArgs} args - Arguments to update or create a Wp_addonlibrary_addons.
     * @example
     * // Update or create a Wp_addonlibrary_addons
     * const wp_addonlibrary_addons = await prisma.wp_addonlibrary_addons.upsert({
     *   create: {
     *     // ... data to create a Wp_addonlibrary_addons
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_addonlibrary_addons we want to update
     *   }
     * })
     */
    upsert<T extends wp_addonlibrary_addonsUpsertArgs>(args: SelectSubset<T, wp_addonlibrary_addonsUpsertArgs<ExtArgs>>): Prisma__wp_addonlibrary_addonsClient<$Result.GetResult<Prisma.$wp_addonlibrary_addonsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_addonlibrary_addons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_addonsCountArgs} args - Arguments to filter Wp_addonlibrary_addons to count.
     * @example
     * // Count the number of Wp_addonlibrary_addons
     * const count = await prisma.wp_addonlibrary_addons.count({
     *   where: {
     *     // ... the filter for the Wp_addonlibrary_addons we want to count
     *   }
     * })
    **/
    count<T extends wp_addonlibrary_addonsCountArgs>(
      args?: Subset<T, wp_addonlibrary_addonsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_addonlibrary_addonsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_addonlibrary_addons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_addonlibrary_addonsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_addonlibrary_addonsAggregateArgs>(args: Subset<T, Wp_addonlibrary_addonsAggregateArgs>): Prisma.PrismaPromise<GetWp_addonlibrary_addonsAggregateType<T>>

    /**
     * Group by Wp_addonlibrary_addons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_addonsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_addonlibrary_addonsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_addonlibrary_addonsGroupByArgs['orderBy'] }
        : { orderBy?: wp_addonlibrary_addonsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_addonlibrary_addonsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_addonlibrary_addonsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_addonlibrary_addons model
   */
  readonly fields: wp_addonlibrary_addonsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_addonlibrary_addons.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_addonlibrary_addonsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_addonlibrary_addons model
   */
  interface wp_addonlibrary_addonsFieldRefs {
    readonly id: FieldRef<"wp_addonlibrary_addons", 'BigInt'>
    readonly title: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly name: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly alias: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly addontype: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly description: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly ordering: FieldRef<"wp_addonlibrary_addons", 'Int'>
    readonly templates: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly config: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly catid: FieldRef<"wp_addonlibrary_addons", 'Int'>
    readonly is_active: FieldRef<"wp_addonlibrary_addons", 'Int'>
    readonly test_slot1: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly test_slot2: FieldRef<"wp_addonlibrary_addons", 'String'>
    readonly test_slot3: FieldRef<"wp_addonlibrary_addons", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_addonlibrary_addons findUnique
   */
  export type wp_addonlibrary_addonsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_addons to fetch.
     */
    where: wp_addonlibrary_addonsWhereUniqueInput
  }

  /**
   * wp_addonlibrary_addons findUniqueOrThrow
   */
  export type wp_addonlibrary_addonsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_addons to fetch.
     */
    where: wp_addonlibrary_addonsWhereUniqueInput
  }

  /**
   * wp_addonlibrary_addons findFirst
   */
  export type wp_addonlibrary_addonsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_addons to fetch.
     */
    where?: wp_addonlibrary_addonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_addons to fetch.
     */
    orderBy?: wp_addonlibrary_addonsOrderByWithRelationInput | wp_addonlibrary_addonsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_addonlibrary_addons.
     */
    cursor?: wp_addonlibrary_addonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_addons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_addons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_addonlibrary_addons.
     */
    distinct?: Wp_addonlibrary_addonsScalarFieldEnum | Wp_addonlibrary_addonsScalarFieldEnum[]
  }

  /**
   * wp_addonlibrary_addons findFirstOrThrow
   */
  export type wp_addonlibrary_addonsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_addons to fetch.
     */
    where?: wp_addonlibrary_addonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_addons to fetch.
     */
    orderBy?: wp_addonlibrary_addonsOrderByWithRelationInput | wp_addonlibrary_addonsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_addonlibrary_addons.
     */
    cursor?: wp_addonlibrary_addonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_addons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_addons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_addonlibrary_addons.
     */
    distinct?: Wp_addonlibrary_addonsScalarFieldEnum | Wp_addonlibrary_addonsScalarFieldEnum[]
  }

  /**
   * wp_addonlibrary_addons findMany
   */
  export type wp_addonlibrary_addonsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_addons to fetch.
     */
    where?: wp_addonlibrary_addonsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_addons to fetch.
     */
    orderBy?: wp_addonlibrary_addonsOrderByWithRelationInput | wp_addonlibrary_addonsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_addonlibrary_addons.
     */
    cursor?: wp_addonlibrary_addonsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_addons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_addons.
     */
    skip?: number
    distinct?: Wp_addonlibrary_addonsScalarFieldEnum | Wp_addonlibrary_addonsScalarFieldEnum[]
  }

  /**
   * wp_addonlibrary_addons create
   */
  export type wp_addonlibrary_addonsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_addonlibrary_addons.
     */
    data: XOR<wp_addonlibrary_addonsCreateInput, wp_addonlibrary_addonsUncheckedCreateInput>
  }

  /**
   * wp_addonlibrary_addons createMany
   */
  export type wp_addonlibrary_addonsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_addonlibrary_addons.
     */
    data: wp_addonlibrary_addonsCreateManyInput | wp_addonlibrary_addonsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_addonlibrary_addons update
   */
  export type wp_addonlibrary_addonsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_addonlibrary_addons.
     */
    data: XOR<wp_addonlibrary_addonsUpdateInput, wp_addonlibrary_addonsUncheckedUpdateInput>
    /**
     * Choose, which wp_addonlibrary_addons to update.
     */
    where: wp_addonlibrary_addonsWhereUniqueInput
  }

  /**
   * wp_addonlibrary_addons updateMany
   */
  export type wp_addonlibrary_addonsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_addonlibrary_addons.
     */
    data: XOR<wp_addonlibrary_addonsUpdateManyMutationInput, wp_addonlibrary_addonsUncheckedUpdateManyInput>
    /**
     * Filter which wp_addonlibrary_addons to update
     */
    where?: wp_addonlibrary_addonsWhereInput
    /**
     * Limit how many wp_addonlibrary_addons to update.
     */
    limit?: number
  }

  /**
   * wp_addonlibrary_addons upsert
   */
  export type wp_addonlibrary_addonsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_addonlibrary_addons to update in case it exists.
     */
    where: wp_addonlibrary_addonsWhereUniqueInput
    /**
     * In case the wp_addonlibrary_addons found by the `where` argument doesn't exist, create a new wp_addonlibrary_addons with this data.
     */
    create: XOR<wp_addonlibrary_addonsCreateInput, wp_addonlibrary_addonsUncheckedCreateInput>
    /**
     * In case the wp_addonlibrary_addons was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_addonlibrary_addonsUpdateInput, wp_addonlibrary_addonsUncheckedUpdateInput>
  }

  /**
   * wp_addonlibrary_addons delete
   */
  export type wp_addonlibrary_addonsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
    /**
     * Filter which wp_addonlibrary_addons to delete.
     */
    where: wp_addonlibrary_addonsWhereUniqueInput
  }

  /**
   * wp_addonlibrary_addons deleteMany
   */
  export type wp_addonlibrary_addonsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_addonlibrary_addons to delete
     */
    where?: wp_addonlibrary_addonsWhereInput
    /**
     * Limit how many wp_addonlibrary_addons to delete.
     */
    limit?: number
  }

  /**
   * wp_addonlibrary_addons without action
   */
  export type wp_addonlibrary_addonsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_addons
     */
    select?: wp_addonlibrary_addonsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_addons
     */
    omit?: wp_addonlibrary_addonsOmit<ExtArgs> | null
  }


  /**
   * Model wp_addonlibrary_categories
   */

  export type AggregateWp_addonlibrary_categories = {
    _count: Wp_addonlibrary_categoriesCountAggregateOutputType | null
    _avg: Wp_addonlibrary_categoriesAvgAggregateOutputType | null
    _sum: Wp_addonlibrary_categoriesSumAggregateOutputType | null
    _min: Wp_addonlibrary_categoriesMinAggregateOutputType | null
    _max: Wp_addonlibrary_categoriesMaxAggregateOutputType | null
  }

  export type Wp_addonlibrary_categoriesAvgAggregateOutputType = {
    id: number | null
    ordering: number | null
    parent_id: number | null
  }

  export type Wp_addonlibrary_categoriesSumAggregateOutputType = {
    id: number | null
    ordering: number | null
    parent_id: number | null
  }

  export type Wp_addonlibrary_categoriesMinAggregateOutputType = {
    id: number | null
    title: string | null
    alias: string | null
    ordering: number | null
    params: string | null
    type: string | null
    parent_id: number | null
  }

  export type Wp_addonlibrary_categoriesMaxAggregateOutputType = {
    id: number | null
    title: string | null
    alias: string | null
    ordering: number | null
    params: string | null
    type: string | null
    parent_id: number | null
  }

  export type Wp_addonlibrary_categoriesCountAggregateOutputType = {
    id: number
    title: number
    alias: number
    ordering: number
    params: number
    type: number
    parent_id: number
    _all: number
  }


  export type Wp_addonlibrary_categoriesAvgAggregateInputType = {
    id?: true
    ordering?: true
    parent_id?: true
  }

  export type Wp_addonlibrary_categoriesSumAggregateInputType = {
    id?: true
    ordering?: true
    parent_id?: true
  }

  export type Wp_addonlibrary_categoriesMinAggregateInputType = {
    id?: true
    title?: true
    alias?: true
    ordering?: true
    params?: true
    type?: true
    parent_id?: true
  }

  export type Wp_addonlibrary_categoriesMaxAggregateInputType = {
    id?: true
    title?: true
    alias?: true
    ordering?: true
    params?: true
    type?: true
    parent_id?: true
  }

  export type Wp_addonlibrary_categoriesCountAggregateInputType = {
    id?: true
    title?: true
    alias?: true
    ordering?: true
    params?: true
    type?: true
    parent_id?: true
    _all?: true
  }

  export type Wp_addonlibrary_categoriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_addonlibrary_categories to aggregate.
     */
    where?: wp_addonlibrary_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_categories to fetch.
     */
    orderBy?: wp_addonlibrary_categoriesOrderByWithRelationInput | wp_addonlibrary_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_addonlibrary_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_addonlibrary_categories
    **/
    _count?: true | Wp_addonlibrary_categoriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_addonlibrary_categoriesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_addonlibrary_categoriesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_addonlibrary_categoriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_addonlibrary_categoriesMaxAggregateInputType
  }

  export type GetWp_addonlibrary_categoriesAggregateType<T extends Wp_addonlibrary_categoriesAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_addonlibrary_categories]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_addonlibrary_categories[P]>
      : GetScalarType<T[P], AggregateWp_addonlibrary_categories[P]>
  }




  export type wp_addonlibrary_categoriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_addonlibrary_categoriesWhereInput
    orderBy?: wp_addonlibrary_categoriesOrderByWithAggregationInput | wp_addonlibrary_categoriesOrderByWithAggregationInput[]
    by: Wp_addonlibrary_categoriesScalarFieldEnum[] | Wp_addonlibrary_categoriesScalarFieldEnum
    having?: wp_addonlibrary_categoriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_addonlibrary_categoriesCountAggregateInputType | true
    _avg?: Wp_addonlibrary_categoriesAvgAggregateInputType
    _sum?: Wp_addonlibrary_categoriesSumAggregateInputType
    _min?: Wp_addonlibrary_categoriesMinAggregateInputType
    _max?: Wp_addonlibrary_categoriesMaxAggregateInputType
  }

  export type Wp_addonlibrary_categoriesGroupByOutputType = {
    id: number
    title: string
    alias: string | null
    ordering: number
    params: string
    type: string | null
    parent_id: number | null
    _count: Wp_addonlibrary_categoriesCountAggregateOutputType | null
    _avg: Wp_addonlibrary_categoriesAvgAggregateOutputType | null
    _sum: Wp_addonlibrary_categoriesSumAggregateOutputType | null
    _min: Wp_addonlibrary_categoriesMinAggregateOutputType | null
    _max: Wp_addonlibrary_categoriesMaxAggregateOutputType | null
  }

  type GetWp_addonlibrary_categoriesGroupByPayload<T extends wp_addonlibrary_categoriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_addonlibrary_categoriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_addonlibrary_categoriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_addonlibrary_categoriesGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_addonlibrary_categoriesGroupByOutputType[P]>
        }
      >
    >


  export type wp_addonlibrary_categoriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    alias?: boolean
    ordering?: boolean
    params?: boolean
    type?: boolean
    parent_id?: boolean
  }, ExtArgs["result"]["wp_addonlibrary_categories"]>



  export type wp_addonlibrary_categoriesSelectScalar = {
    id?: boolean
    title?: boolean
    alias?: boolean
    ordering?: boolean
    params?: boolean
    type?: boolean
    parent_id?: boolean
  }

  export type wp_addonlibrary_categoriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "title" | "alias" | "ordering" | "params" | "type" | "parent_id", ExtArgs["result"]["wp_addonlibrary_categories"]>

  export type $wp_addonlibrary_categoriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_addonlibrary_categories"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      alias: string | null
      ordering: number
      params: string
      type: string | null
      parent_id: number | null
    }, ExtArgs["result"]["wp_addonlibrary_categories"]>
    composites: {}
  }

  type wp_addonlibrary_categoriesGetPayload<S extends boolean | null | undefined | wp_addonlibrary_categoriesDefaultArgs> = $Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload, S>

  type wp_addonlibrary_categoriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_addonlibrary_categoriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_addonlibrary_categoriesCountAggregateInputType | true
    }

  export interface wp_addonlibrary_categoriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_addonlibrary_categories'], meta: { name: 'wp_addonlibrary_categories' } }
    /**
     * Find zero or one Wp_addonlibrary_categories that matches the filter.
     * @param {wp_addonlibrary_categoriesFindUniqueArgs} args - Arguments to find a Wp_addonlibrary_categories
     * @example
     * // Get one Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_addonlibrary_categoriesFindUniqueArgs>(args: SelectSubset<T, wp_addonlibrary_categoriesFindUniqueArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_addonlibrary_categories that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_addonlibrary_categoriesFindUniqueOrThrowArgs} args - Arguments to find a Wp_addonlibrary_categories
     * @example
     * // Get one Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_addonlibrary_categoriesFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_addonlibrary_categoriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_addonlibrary_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_categoriesFindFirstArgs} args - Arguments to find a Wp_addonlibrary_categories
     * @example
     * // Get one Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_addonlibrary_categoriesFindFirstArgs>(args?: SelectSubset<T, wp_addonlibrary_categoriesFindFirstArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_addonlibrary_categories that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_categoriesFindFirstOrThrowArgs} args - Arguments to find a Wp_addonlibrary_categories
     * @example
     * // Get one Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_addonlibrary_categoriesFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_addonlibrary_categoriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_addonlibrary_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_categoriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.findMany()
     * 
     * // Get first 10 Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_addonlibrary_categoriesWithIdOnly = await prisma.wp_addonlibrary_categories.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_addonlibrary_categoriesFindManyArgs>(args?: SelectSubset<T, wp_addonlibrary_categoriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_addonlibrary_categories.
     * @param {wp_addonlibrary_categoriesCreateArgs} args - Arguments to create a Wp_addonlibrary_categories.
     * @example
     * // Create one Wp_addonlibrary_categories
     * const Wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.create({
     *   data: {
     *     // ... data to create a Wp_addonlibrary_categories
     *   }
     * })
     * 
     */
    create<T extends wp_addonlibrary_categoriesCreateArgs>(args: SelectSubset<T, wp_addonlibrary_categoriesCreateArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_addonlibrary_categories.
     * @param {wp_addonlibrary_categoriesCreateManyArgs} args - Arguments to create many Wp_addonlibrary_categories.
     * @example
     * // Create many Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_addonlibrary_categoriesCreateManyArgs>(args?: SelectSubset<T, wp_addonlibrary_categoriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_addonlibrary_categories.
     * @param {wp_addonlibrary_categoriesDeleteArgs} args - Arguments to delete one Wp_addonlibrary_categories.
     * @example
     * // Delete one Wp_addonlibrary_categories
     * const Wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.delete({
     *   where: {
     *     // ... filter to delete one Wp_addonlibrary_categories
     *   }
     * })
     * 
     */
    delete<T extends wp_addonlibrary_categoriesDeleteArgs>(args: SelectSubset<T, wp_addonlibrary_categoriesDeleteArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_addonlibrary_categories.
     * @param {wp_addonlibrary_categoriesUpdateArgs} args - Arguments to update one Wp_addonlibrary_categories.
     * @example
     * // Update one Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_addonlibrary_categoriesUpdateArgs>(args: SelectSubset<T, wp_addonlibrary_categoriesUpdateArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_addonlibrary_categories.
     * @param {wp_addonlibrary_categoriesDeleteManyArgs} args - Arguments to filter Wp_addonlibrary_categories to delete.
     * @example
     * // Delete a few Wp_addonlibrary_categories
     * const { count } = await prisma.wp_addonlibrary_categories.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_addonlibrary_categoriesDeleteManyArgs>(args?: SelectSubset<T, wp_addonlibrary_categoriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_addonlibrary_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_categoriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_addonlibrary_categoriesUpdateManyArgs>(args: SelectSubset<T, wp_addonlibrary_categoriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_addonlibrary_categories.
     * @param {wp_addonlibrary_categoriesUpsertArgs} args - Arguments to update or create a Wp_addonlibrary_categories.
     * @example
     * // Update or create a Wp_addonlibrary_categories
     * const wp_addonlibrary_categories = await prisma.wp_addonlibrary_categories.upsert({
     *   create: {
     *     // ... data to create a Wp_addonlibrary_categories
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_addonlibrary_categories we want to update
     *   }
     * })
     */
    upsert<T extends wp_addonlibrary_categoriesUpsertArgs>(args: SelectSubset<T, wp_addonlibrary_categoriesUpsertArgs<ExtArgs>>): Prisma__wp_addonlibrary_categoriesClient<$Result.GetResult<Prisma.$wp_addonlibrary_categoriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_addonlibrary_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_categoriesCountArgs} args - Arguments to filter Wp_addonlibrary_categories to count.
     * @example
     * // Count the number of Wp_addonlibrary_categories
     * const count = await prisma.wp_addonlibrary_categories.count({
     *   where: {
     *     // ... the filter for the Wp_addonlibrary_categories we want to count
     *   }
     * })
    **/
    count<T extends wp_addonlibrary_categoriesCountArgs>(
      args?: Subset<T, wp_addonlibrary_categoriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_addonlibrary_categoriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_addonlibrary_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_addonlibrary_categoriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_addonlibrary_categoriesAggregateArgs>(args: Subset<T, Wp_addonlibrary_categoriesAggregateArgs>): Prisma.PrismaPromise<GetWp_addonlibrary_categoriesAggregateType<T>>

    /**
     * Group by Wp_addonlibrary_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_addonlibrary_categoriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_addonlibrary_categoriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_addonlibrary_categoriesGroupByArgs['orderBy'] }
        : { orderBy?: wp_addonlibrary_categoriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_addonlibrary_categoriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_addonlibrary_categoriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_addonlibrary_categories model
   */
  readonly fields: wp_addonlibrary_categoriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_addonlibrary_categories.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_addonlibrary_categoriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_addonlibrary_categories model
   */
  interface wp_addonlibrary_categoriesFieldRefs {
    readonly id: FieldRef<"wp_addonlibrary_categories", 'Int'>
    readonly title: FieldRef<"wp_addonlibrary_categories", 'String'>
    readonly alias: FieldRef<"wp_addonlibrary_categories", 'String'>
    readonly ordering: FieldRef<"wp_addonlibrary_categories", 'Int'>
    readonly params: FieldRef<"wp_addonlibrary_categories", 'String'>
    readonly type: FieldRef<"wp_addonlibrary_categories", 'String'>
    readonly parent_id: FieldRef<"wp_addonlibrary_categories", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_addonlibrary_categories findUnique
   */
  export type wp_addonlibrary_categoriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_categories to fetch.
     */
    where: wp_addonlibrary_categoriesWhereUniqueInput
  }

  /**
   * wp_addonlibrary_categories findUniqueOrThrow
   */
  export type wp_addonlibrary_categoriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_categories to fetch.
     */
    where: wp_addonlibrary_categoriesWhereUniqueInput
  }

  /**
   * wp_addonlibrary_categories findFirst
   */
  export type wp_addonlibrary_categoriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_categories to fetch.
     */
    where?: wp_addonlibrary_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_categories to fetch.
     */
    orderBy?: wp_addonlibrary_categoriesOrderByWithRelationInput | wp_addonlibrary_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_addonlibrary_categories.
     */
    cursor?: wp_addonlibrary_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_addonlibrary_categories.
     */
    distinct?: Wp_addonlibrary_categoriesScalarFieldEnum | Wp_addonlibrary_categoriesScalarFieldEnum[]
  }

  /**
   * wp_addonlibrary_categories findFirstOrThrow
   */
  export type wp_addonlibrary_categoriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_categories to fetch.
     */
    where?: wp_addonlibrary_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_categories to fetch.
     */
    orderBy?: wp_addonlibrary_categoriesOrderByWithRelationInput | wp_addonlibrary_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_addonlibrary_categories.
     */
    cursor?: wp_addonlibrary_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_addonlibrary_categories.
     */
    distinct?: Wp_addonlibrary_categoriesScalarFieldEnum | Wp_addonlibrary_categoriesScalarFieldEnum[]
  }

  /**
   * wp_addonlibrary_categories findMany
   */
  export type wp_addonlibrary_categoriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * Filter, which wp_addonlibrary_categories to fetch.
     */
    where?: wp_addonlibrary_categoriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_addonlibrary_categories to fetch.
     */
    orderBy?: wp_addonlibrary_categoriesOrderByWithRelationInput | wp_addonlibrary_categoriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_addonlibrary_categories.
     */
    cursor?: wp_addonlibrary_categoriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_addonlibrary_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_addonlibrary_categories.
     */
    skip?: number
    distinct?: Wp_addonlibrary_categoriesScalarFieldEnum | Wp_addonlibrary_categoriesScalarFieldEnum[]
  }

  /**
   * wp_addonlibrary_categories create
   */
  export type wp_addonlibrary_categoriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_addonlibrary_categories.
     */
    data: XOR<wp_addonlibrary_categoriesCreateInput, wp_addonlibrary_categoriesUncheckedCreateInput>
  }

  /**
   * wp_addonlibrary_categories createMany
   */
  export type wp_addonlibrary_categoriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_addonlibrary_categories.
     */
    data: wp_addonlibrary_categoriesCreateManyInput | wp_addonlibrary_categoriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_addonlibrary_categories update
   */
  export type wp_addonlibrary_categoriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_addonlibrary_categories.
     */
    data: XOR<wp_addonlibrary_categoriesUpdateInput, wp_addonlibrary_categoriesUncheckedUpdateInput>
    /**
     * Choose, which wp_addonlibrary_categories to update.
     */
    where: wp_addonlibrary_categoriesWhereUniqueInput
  }

  /**
   * wp_addonlibrary_categories updateMany
   */
  export type wp_addonlibrary_categoriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_addonlibrary_categories.
     */
    data: XOR<wp_addonlibrary_categoriesUpdateManyMutationInput, wp_addonlibrary_categoriesUncheckedUpdateManyInput>
    /**
     * Filter which wp_addonlibrary_categories to update
     */
    where?: wp_addonlibrary_categoriesWhereInput
    /**
     * Limit how many wp_addonlibrary_categories to update.
     */
    limit?: number
  }

  /**
   * wp_addonlibrary_categories upsert
   */
  export type wp_addonlibrary_categoriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_addonlibrary_categories to update in case it exists.
     */
    where: wp_addonlibrary_categoriesWhereUniqueInput
    /**
     * In case the wp_addonlibrary_categories found by the `where` argument doesn't exist, create a new wp_addonlibrary_categories with this data.
     */
    create: XOR<wp_addonlibrary_categoriesCreateInput, wp_addonlibrary_categoriesUncheckedCreateInput>
    /**
     * In case the wp_addonlibrary_categories was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_addonlibrary_categoriesUpdateInput, wp_addonlibrary_categoriesUncheckedUpdateInput>
  }

  /**
   * wp_addonlibrary_categories delete
   */
  export type wp_addonlibrary_categoriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
    /**
     * Filter which wp_addonlibrary_categories to delete.
     */
    where: wp_addonlibrary_categoriesWhereUniqueInput
  }

  /**
   * wp_addonlibrary_categories deleteMany
   */
  export type wp_addonlibrary_categoriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_addonlibrary_categories to delete
     */
    where?: wp_addonlibrary_categoriesWhereInput
    /**
     * Limit how many wp_addonlibrary_categories to delete.
     */
    limit?: number
  }

  /**
   * wp_addonlibrary_categories without action
   */
  export type wp_addonlibrary_categoriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_addonlibrary_categories
     */
    select?: wp_addonlibrary_categoriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_addonlibrary_categories
     */
    omit?: wp_addonlibrary_categoriesOmit<ExtArgs> | null
  }


  /**
   * Model wp_ai_stats_events
   */

  export type AggregateWp_ai_stats_events = {
    _count: Wp_ai_stats_eventsCountAggregateOutputType | null
    _avg: Wp_ai_stats_eventsAvgAggregateOutputType | null
    _sum: Wp_ai_stats_eventsSumAggregateOutputType | null
    _min: Wp_ai_stats_eventsMinAggregateOutputType | null
    _max: Wp_ai_stats_eventsMaxAggregateOutputType | null
  }

  export type Wp_ai_stats_eventsAvgAggregateOutputType = {
    id: number | null
    playlist_id: number | null
    is_stream: number | null
    processed: number | null
  }

  export type Wp_ai_stats_eventsSumAggregateOutputType = {
    id: number | null
    playlist_id: number | null
    is_stream: number | null
    processed: number | null
  }

  export type Wp_ai_stats_eventsMinAggregateOutputType = {
    id: number | null
    dtime: Date | null
    track_url: string | null
    track_title: string | null
    track_artist: string | null
    playlist_id: number | null
    referrer_url: string | null
    client_fingerprint: string | null
    event_name: string | null
    event_data: string | null
    is_stream: number | null
    processed: number | null
  }

  export type Wp_ai_stats_eventsMaxAggregateOutputType = {
    id: number | null
    dtime: Date | null
    track_url: string | null
    track_title: string | null
    track_artist: string | null
    playlist_id: number | null
    referrer_url: string | null
    client_fingerprint: string | null
    event_name: string | null
    event_data: string | null
    is_stream: number | null
    processed: number | null
  }

  export type Wp_ai_stats_eventsCountAggregateOutputType = {
    id: number
    dtime: number
    track_url: number
    track_title: number
    track_artist: number
    playlist_id: number
    referrer_url: number
    client_fingerprint: number
    event_name: number
    event_data: number
    is_stream: number
    processed: number
    _all: number
  }


  export type Wp_ai_stats_eventsAvgAggregateInputType = {
    id?: true
    playlist_id?: true
    is_stream?: true
    processed?: true
  }

  export type Wp_ai_stats_eventsSumAggregateInputType = {
    id?: true
    playlist_id?: true
    is_stream?: true
    processed?: true
  }

  export type Wp_ai_stats_eventsMinAggregateInputType = {
    id?: true
    dtime?: true
    track_url?: true
    track_title?: true
    track_artist?: true
    playlist_id?: true
    referrer_url?: true
    client_fingerprint?: true
    event_name?: true
    event_data?: true
    is_stream?: true
    processed?: true
  }

  export type Wp_ai_stats_eventsMaxAggregateInputType = {
    id?: true
    dtime?: true
    track_url?: true
    track_title?: true
    track_artist?: true
    playlist_id?: true
    referrer_url?: true
    client_fingerprint?: true
    event_name?: true
    event_data?: true
    is_stream?: true
    processed?: true
  }

  export type Wp_ai_stats_eventsCountAggregateInputType = {
    id?: true
    dtime?: true
    track_url?: true
    track_title?: true
    track_artist?: true
    playlist_id?: true
    referrer_url?: true
    client_fingerprint?: true
    event_name?: true
    event_data?: true
    is_stream?: true
    processed?: true
    _all?: true
  }

  export type Wp_ai_stats_eventsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_ai_stats_events to aggregate.
     */
    where?: wp_ai_stats_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_events to fetch.
     */
    orderBy?: wp_ai_stats_eventsOrderByWithRelationInput | wp_ai_stats_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_ai_stats_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_ai_stats_events
    **/
    _count?: true | Wp_ai_stats_eventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_ai_stats_eventsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_ai_stats_eventsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_ai_stats_eventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_ai_stats_eventsMaxAggregateInputType
  }

  export type GetWp_ai_stats_eventsAggregateType<T extends Wp_ai_stats_eventsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_ai_stats_events]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_ai_stats_events[P]>
      : GetScalarType<T[P], AggregateWp_ai_stats_events[P]>
  }




  export type wp_ai_stats_eventsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_ai_stats_eventsWhereInput
    orderBy?: wp_ai_stats_eventsOrderByWithAggregationInput | wp_ai_stats_eventsOrderByWithAggregationInput[]
    by: Wp_ai_stats_eventsScalarFieldEnum[] | Wp_ai_stats_eventsScalarFieldEnum
    having?: wp_ai_stats_eventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_ai_stats_eventsCountAggregateInputType | true
    _avg?: Wp_ai_stats_eventsAvgAggregateInputType
    _sum?: Wp_ai_stats_eventsSumAggregateInputType
    _min?: Wp_ai_stats_eventsMinAggregateInputType
    _max?: Wp_ai_stats_eventsMaxAggregateInputType
  }

  export type Wp_ai_stats_eventsGroupByOutputType = {
    id: number
    dtime: Date
    track_url: string
    track_title: string | null
    track_artist: string | null
    playlist_id: number | null
    referrer_url: string | null
    client_fingerprint: string | null
    event_name: string
    event_data: string | null
    is_stream: number
    processed: number
    _count: Wp_ai_stats_eventsCountAggregateOutputType | null
    _avg: Wp_ai_stats_eventsAvgAggregateOutputType | null
    _sum: Wp_ai_stats_eventsSumAggregateOutputType | null
    _min: Wp_ai_stats_eventsMinAggregateOutputType | null
    _max: Wp_ai_stats_eventsMaxAggregateOutputType | null
  }

  type GetWp_ai_stats_eventsGroupByPayload<T extends wp_ai_stats_eventsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_ai_stats_eventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_ai_stats_eventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_ai_stats_eventsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_ai_stats_eventsGroupByOutputType[P]>
        }
      >
    >


  export type wp_ai_stats_eventsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    dtime?: boolean
    track_url?: boolean
    track_title?: boolean
    track_artist?: boolean
    playlist_id?: boolean
    referrer_url?: boolean
    client_fingerprint?: boolean
    event_name?: boolean
    event_data?: boolean
    is_stream?: boolean
    processed?: boolean
  }, ExtArgs["result"]["wp_ai_stats_events"]>



  export type wp_ai_stats_eventsSelectScalar = {
    id?: boolean
    dtime?: boolean
    track_url?: boolean
    track_title?: boolean
    track_artist?: boolean
    playlist_id?: boolean
    referrer_url?: boolean
    client_fingerprint?: boolean
    event_name?: boolean
    event_data?: boolean
    is_stream?: boolean
    processed?: boolean
  }

  export type wp_ai_stats_eventsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "dtime" | "track_url" | "track_title" | "track_artist" | "playlist_id" | "referrer_url" | "client_fingerprint" | "event_name" | "event_data" | "is_stream" | "processed", ExtArgs["result"]["wp_ai_stats_events"]>

  export type $wp_ai_stats_eventsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_ai_stats_events"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      dtime: Date
      track_url: string
      track_title: string | null
      track_artist: string | null
      playlist_id: number | null
      referrer_url: string | null
      client_fingerprint: string | null
      event_name: string
      event_data: string | null
      is_stream: number
      processed: number
    }, ExtArgs["result"]["wp_ai_stats_events"]>
    composites: {}
  }

  type wp_ai_stats_eventsGetPayload<S extends boolean | null | undefined | wp_ai_stats_eventsDefaultArgs> = $Result.GetResult<Prisma.$wp_ai_stats_eventsPayload, S>

  type wp_ai_stats_eventsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_ai_stats_eventsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_ai_stats_eventsCountAggregateInputType | true
    }

  export interface wp_ai_stats_eventsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_ai_stats_events'], meta: { name: 'wp_ai_stats_events' } }
    /**
     * Find zero or one Wp_ai_stats_events that matches the filter.
     * @param {wp_ai_stats_eventsFindUniqueArgs} args - Arguments to find a Wp_ai_stats_events
     * @example
     * // Get one Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_ai_stats_eventsFindUniqueArgs>(args: SelectSubset<T, wp_ai_stats_eventsFindUniqueArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_ai_stats_events that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_ai_stats_eventsFindUniqueOrThrowArgs} args - Arguments to find a Wp_ai_stats_events
     * @example
     * // Get one Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_ai_stats_eventsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_ai_stats_eventsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_ai_stats_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_eventsFindFirstArgs} args - Arguments to find a Wp_ai_stats_events
     * @example
     * // Get one Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_ai_stats_eventsFindFirstArgs>(args?: SelectSubset<T, wp_ai_stats_eventsFindFirstArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_ai_stats_events that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_eventsFindFirstOrThrowArgs} args - Arguments to find a Wp_ai_stats_events
     * @example
     * // Get one Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_ai_stats_eventsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_ai_stats_eventsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_ai_stats_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_eventsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.findMany()
     * 
     * // Get first 10 Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_ai_stats_eventsWithIdOnly = await prisma.wp_ai_stats_events.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_ai_stats_eventsFindManyArgs>(args?: SelectSubset<T, wp_ai_stats_eventsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_ai_stats_events.
     * @param {wp_ai_stats_eventsCreateArgs} args - Arguments to create a Wp_ai_stats_events.
     * @example
     * // Create one Wp_ai_stats_events
     * const Wp_ai_stats_events = await prisma.wp_ai_stats_events.create({
     *   data: {
     *     // ... data to create a Wp_ai_stats_events
     *   }
     * })
     * 
     */
    create<T extends wp_ai_stats_eventsCreateArgs>(args: SelectSubset<T, wp_ai_stats_eventsCreateArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_ai_stats_events.
     * @param {wp_ai_stats_eventsCreateManyArgs} args - Arguments to create many Wp_ai_stats_events.
     * @example
     * // Create many Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_ai_stats_eventsCreateManyArgs>(args?: SelectSubset<T, wp_ai_stats_eventsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_ai_stats_events.
     * @param {wp_ai_stats_eventsDeleteArgs} args - Arguments to delete one Wp_ai_stats_events.
     * @example
     * // Delete one Wp_ai_stats_events
     * const Wp_ai_stats_events = await prisma.wp_ai_stats_events.delete({
     *   where: {
     *     // ... filter to delete one Wp_ai_stats_events
     *   }
     * })
     * 
     */
    delete<T extends wp_ai_stats_eventsDeleteArgs>(args: SelectSubset<T, wp_ai_stats_eventsDeleteArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_ai_stats_events.
     * @param {wp_ai_stats_eventsUpdateArgs} args - Arguments to update one Wp_ai_stats_events.
     * @example
     * // Update one Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_ai_stats_eventsUpdateArgs>(args: SelectSubset<T, wp_ai_stats_eventsUpdateArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_ai_stats_events.
     * @param {wp_ai_stats_eventsDeleteManyArgs} args - Arguments to filter Wp_ai_stats_events to delete.
     * @example
     * // Delete a few Wp_ai_stats_events
     * const { count } = await prisma.wp_ai_stats_events.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_ai_stats_eventsDeleteManyArgs>(args?: SelectSubset<T, wp_ai_stats_eventsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_ai_stats_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_eventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_ai_stats_eventsUpdateManyArgs>(args: SelectSubset<T, wp_ai_stats_eventsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_ai_stats_events.
     * @param {wp_ai_stats_eventsUpsertArgs} args - Arguments to update or create a Wp_ai_stats_events.
     * @example
     * // Update or create a Wp_ai_stats_events
     * const wp_ai_stats_events = await prisma.wp_ai_stats_events.upsert({
     *   create: {
     *     // ... data to create a Wp_ai_stats_events
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_ai_stats_events we want to update
     *   }
     * })
     */
    upsert<T extends wp_ai_stats_eventsUpsertArgs>(args: SelectSubset<T, wp_ai_stats_eventsUpsertArgs<ExtArgs>>): Prisma__wp_ai_stats_eventsClient<$Result.GetResult<Prisma.$wp_ai_stats_eventsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_ai_stats_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_eventsCountArgs} args - Arguments to filter Wp_ai_stats_events to count.
     * @example
     * // Count the number of Wp_ai_stats_events
     * const count = await prisma.wp_ai_stats_events.count({
     *   where: {
     *     // ... the filter for the Wp_ai_stats_events we want to count
     *   }
     * })
    **/
    count<T extends wp_ai_stats_eventsCountArgs>(
      args?: Subset<T, wp_ai_stats_eventsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_ai_stats_eventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_ai_stats_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_ai_stats_eventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_ai_stats_eventsAggregateArgs>(args: Subset<T, Wp_ai_stats_eventsAggregateArgs>): Prisma.PrismaPromise<GetWp_ai_stats_eventsAggregateType<T>>

    /**
     * Group by Wp_ai_stats_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_eventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_ai_stats_eventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_ai_stats_eventsGroupByArgs['orderBy'] }
        : { orderBy?: wp_ai_stats_eventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_ai_stats_eventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_ai_stats_eventsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_ai_stats_events model
   */
  readonly fields: wp_ai_stats_eventsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_ai_stats_events.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_ai_stats_eventsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_ai_stats_events model
   */
  interface wp_ai_stats_eventsFieldRefs {
    readonly id: FieldRef<"wp_ai_stats_events", 'Int'>
    readonly dtime: FieldRef<"wp_ai_stats_events", 'DateTime'>
    readonly track_url: FieldRef<"wp_ai_stats_events", 'String'>
    readonly track_title: FieldRef<"wp_ai_stats_events", 'String'>
    readonly track_artist: FieldRef<"wp_ai_stats_events", 'String'>
    readonly playlist_id: FieldRef<"wp_ai_stats_events", 'Int'>
    readonly referrer_url: FieldRef<"wp_ai_stats_events", 'String'>
    readonly client_fingerprint: FieldRef<"wp_ai_stats_events", 'String'>
    readonly event_name: FieldRef<"wp_ai_stats_events", 'String'>
    readonly event_data: FieldRef<"wp_ai_stats_events", 'String'>
    readonly is_stream: FieldRef<"wp_ai_stats_events", 'Int'>
    readonly processed: FieldRef<"wp_ai_stats_events", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_ai_stats_events findUnique
   */
  export type wp_ai_stats_eventsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_events to fetch.
     */
    where: wp_ai_stats_eventsWhereUniqueInput
  }

  /**
   * wp_ai_stats_events findUniqueOrThrow
   */
  export type wp_ai_stats_eventsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_events to fetch.
     */
    where: wp_ai_stats_eventsWhereUniqueInput
  }

  /**
   * wp_ai_stats_events findFirst
   */
  export type wp_ai_stats_eventsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_events to fetch.
     */
    where?: wp_ai_stats_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_events to fetch.
     */
    orderBy?: wp_ai_stats_eventsOrderByWithRelationInput | wp_ai_stats_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_ai_stats_events.
     */
    cursor?: wp_ai_stats_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_ai_stats_events.
     */
    distinct?: Wp_ai_stats_eventsScalarFieldEnum | Wp_ai_stats_eventsScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_events findFirstOrThrow
   */
  export type wp_ai_stats_eventsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_events to fetch.
     */
    where?: wp_ai_stats_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_events to fetch.
     */
    orderBy?: wp_ai_stats_eventsOrderByWithRelationInput | wp_ai_stats_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_ai_stats_events.
     */
    cursor?: wp_ai_stats_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_ai_stats_events.
     */
    distinct?: Wp_ai_stats_eventsScalarFieldEnum | Wp_ai_stats_eventsScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_events findMany
   */
  export type wp_ai_stats_eventsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_events to fetch.
     */
    where?: wp_ai_stats_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_events to fetch.
     */
    orderBy?: wp_ai_stats_eventsOrderByWithRelationInput | wp_ai_stats_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_ai_stats_events.
     */
    cursor?: wp_ai_stats_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_events.
     */
    skip?: number
    distinct?: Wp_ai_stats_eventsScalarFieldEnum | Wp_ai_stats_eventsScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_events create
   */
  export type wp_ai_stats_eventsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_ai_stats_events.
     */
    data: XOR<wp_ai_stats_eventsCreateInput, wp_ai_stats_eventsUncheckedCreateInput>
  }

  /**
   * wp_ai_stats_events createMany
   */
  export type wp_ai_stats_eventsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_ai_stats_events.
     */
    data: wp_ai_stats_eventsCreateManyInput | wp_ai_stats_eventsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_ai_stats_events update
   */
  export type wp_ai_stats_eventsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_ai_stats_events.
     */
    data: XOR<wp_ai_stats_eventsUpdateInput, wp_ai_stats_eventsUncheckedUpdateInput>
    /**
     * Choose, which wp_ai_stats_events to update.
     */
    where: wp_ai_stats_eventsWhereUniqueInput
  }

  /**
   * wp_ai_stats_events updateMany
   */
  export type wp_ai_stats_eventsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_ai_stats_events.
     */
    data: XOR<wp_ai_stats_eventsUpdateManyMutationInput, wp_ai_stats_eventsUncheckedUpdateManyInput>
    /**
     * Filter which wp_ai_stats_events to update
     */
    where?: wp_ai_stats_eventsWhereInput
    /**
     * Limit how many wp_ai_stats_events to update.
     */
    limit?: number
  }

  /**
   * wp_ai_stats_events upsert
   */
  export type wp_ai_stats_eventsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_ai_stats_events to update in case it exists.
     */
    where: wp_ai_stats_eventsWhereUniqueInput
    /**
     * In case the wp_ai_stats_events found by the `where` argument doesn't exist, create a new wp_ai_stats_events with this data.
     */
    create: XOR<wp_ai_stats_eventsCreateInput, wp_ai_stats_eventsUncheckedCreateInput>
    /**
     * In case the wp_ai_stats_events was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_ai_stats_eventsUpdateInput, wp_ai_stats_eventsUncheckedUpdateInput>
  }

  /**
   * wp_ai_stats_events delete
   */
  export type wp_ai_stats_eventsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
    /**
     * Filter which wp_ai_stats_events to delete.
     */
    where: wp_ai_stats_eventsWhereUniqueInput
  }

  /**
   * wp_ai_stats_events deleteMany
   */
  export type wp_ai_stats_eventsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_ai_stats_events to delete
     */
    where?: wp_ai_stats_eventsWhereInput
    /**
     * Limit how many wp_ai_stats_events to delete.
     */
    limit?: number
  }

  /**
   * wp_ai_stats_events without action
   */
  export type wp_ai_stats_eventsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_events
     */
    select?: wp_ai_stats_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_events
     */
    omit?: wp_ai_stats_eventsOmit<ExtArgs> | null
  }


  /**
   * Model wp_ai_stats_play
   */

  export type AggregateWp_ai_stats_play = {
    _count: Wp_ai_stats_playCountAggregateOutputType | null
    _avg: Wp_ai_stats_playAvgAggregateOutputType | null
    _sum: Wp_ai_stats_playSumAggregateOutputType | null
    _min: Wp_ai_stats_playMinAggregateOutputType | null
    _max: Wp_ai_stats_playMaxAggregateOutputType | null
  }

  export type Wp_ai_stats_playAvgAggregateOutputType = {
    id: number | null
    track_id: number | null
    playlist_id: number | null
    duration: number | null
    seeks: number | null
    pauses: number | null
    skipped: number | null
    downloaded: number | null
  }

  export type Wp_ai_stats_playSumAggregateOutputType = {
    id: number | null
    track_id: number | null
    playlist_id: number | null
    duration: number | null
    seeks: number | null
    pauses: number | null
    skipped: number | null
    downloaded: number | null
  }

  export type Wp_ai_stats_playMinAggregateOutputType = {
    id: number | null
    track_id: number | null
    dtime: Date | null
    playlist_id: number | null
    referrer_url: string | null
    client_fingerprint: string | null
    duration: number | null
    seeks: number | null
    pauses: number | null
    skipped: number | null
    downloaded: number | null
  }

  export type Wp_ai_stats_playMaxAggregateOutputType = {
    id: number | null
    track_id: number | null
    dtime: Date | null
    playlist_id: number | null
    referrer_url: string | null
    client_fingerprint: string | null
    duration: number | null
    seeks: number | null
    pauses: number | null
    skipped: number | null
    downloaded: number | null
  }

  export type Wp_ai_stats_playCountAggregateOutputType = {
    id: number
    track_id: number
    dtime: number
    playlist_id: number
    referrer_url: number
    client_fingerprint: number
    duration: number
    seeks: number
    pauses: number
    skipped: number
    downloaded: number
    _all: number
  }


  export type Wp_ai_stats_playAvgAggregateInputType = {
    id?: true
    track_id?: true
    playlist_id?: true
    duration?: true
    seeks?: true
    pauses?: true
    skipped?: true
    downloaded?: true
  }

  export type Wp_ai_stats_playSumAggregateInputType = {
    id?: true
    track_id?: true
    playlist_id?: true
    duration?: true
    seeks?: true
    pauses?: true
    skipped?: true
    downloaded?: true
  }

  export type Wp_ai_stats_playMinAggregateInputType = {
    id?: true
    track_id?: true
    dtime?: true
    playlist_id?: true
    referrer_url?: true
    client_fingerprint?: true
    duration?: true
    seeks?: true
    pauses?: true
    skipped?: true
    downloaded?: true
  }

  export type Wp_ai_stats_playMaxAggregateInputType = {
    id?: true
    track_id?: true
    dtime?: true
    playlist_id?: true
    referrer_url?: true
    client_fingerprint?: true
    duration?: true
    seeks?: true
    pauses?: true
    skipped?: true
    downloaded?: true
  }

  export type Wp_ai_stats_playCountAggregateInputType = {
    id?: true
    track_id?: true
    dtime?: true
    playlist_id?: true
    referrer_url?: true
    client_fingerprint?: true
    duration?: true
    seeks?: true
    pauses?: true
    skipped?: true
    downloaded?: true
    _all?: true
  }

  export type Wp_ai_stats_playAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_ai_stats_play to aggregate.
     */
    where?: wp_ai_stats_playWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_plays to fetch.
     */
    orderBy?: wp_ai_stats_playOrderByWithRelationInput | wp_ai_stats_playOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_ai_stats_playWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_plays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_plays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_ai_stats_plays
    **/
    _count?: true | Wp_ai_stats_playCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_ai_stats_playAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_ai_stats_playSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_ai_stats_playMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_ai_stats_playMaxAggregateInputType
  }

  export type GetWp_ai_stats_playAggregateType<T extends Wp_ai_stats_playAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_ai_stats_play]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_ai_stats_play[P]>
      : GetScalarType<T[P], AggregateWp_ai_stats_play[P]>
  }




  export type wp_ai_stats_playGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_ai_stats_playWhereInput
    orderBy?: wp_ai_stats_playOrderByWithAggregationInput | wp_ai_stats_playOrderByWithAggregationInput[]
    by: Wp_ai_stats_playScalarFieldEnum[] | Wp_ai_stats_playScalarFieldEnum
    having?: wp_ai_stats_playScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_ai_stats_playCountAggregateInputType | true
    _avg?: Wp_ai_stats_playAvgAggregateInputType
    _sum?: Wp_ai_stats_playSumAggregateInputType
    _min?: Wp_ai_stats_playMinAggregateInputType
    _max?: Wp_ai_stats_playMaxAggregateInputType
  }

  export type Wp_ai_stats_playGroupByOutputType = {
    id: number
    track_id: number
    dtime: Date
    playlist_id: number | null
    referrer_url: string | null
    client_fingerprint: string | null
    duration: number | null
    seeks: number
    pauses: number
    skipped: number
    downloaded: number
    _count: Wp_ai_stats_playCountAggregateOutputType | null
    _avg: Wp_ai_stats_playAvgAggregateOutputType | null
    _sum: Wp_ai_stats_playSumAggregateOutputType | null
    _min: Wp_ai_stats_playMinAggregateOutputType | null
    _max: Wp_ai_stats_playMaxAggregateOutputType | null
  }

  type GetWp_ai_stats_playGroupByPayload<T extends wp_ai_stats_playGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_ai_stats_playGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_ai_stats_playGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_ai_stats_playGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_ai_stats_playGroupByOutputType[P]>
        }
      >
    >


  export type wp_ai_stats_playSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    track_id?: boolean
    dtime?: boolean
    playlist_id?: boolean
    referrer_url?: boolean
    client_fingerprint?: boolean
    duration?: boolean
    seeks?: boolean
    pauses?: boolean
    skipped?: boolean
    downloaded?: boolean
  }, ExtArgs["result"]["wp_ai_stats_play"]>



  export type wp_ai_stats_playSelectScalar = {
    id?: boolean
    track_id?: boolean
    dtime?: boolean
    playlist_id?: boolean
    referrer_url?: boolean
    client_fingerprint?: boolean
    duration?: boolean
    seeks?: boolean
    pauses?: boolean
    skipped?: boolean
    downloaded?: boolean
  }

  export type wp_ai_stats_playOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "track_id" | "dtime" | "playlist_id" | "referrer_url" | "client_fingerprint" | "duration" | "seeks" | "pauses" | "skipped" | "downloaded", ExtArgs["result"]["wp_ai_stats_play"]>

  export type $wp_ai_stats_playPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_ai_stats_play"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      track_id: number
      dtime: Date
      playlist_id: number | null
      referrer_url: string | null
      client_fingerprint: string | null
      duration: number | null
      seeks: number
      pauses: number
      skipped: number
      downloaded: number
    }, ExtArgs["result"]["wp_ai_stats_play"]>
    composites: {}
  }

  type wp_ai_stats_playGetPayload<S extends boolean | null | undefined | wp_ai_stats_playDefaultArgs> = $Result.GetResult<Prisma.$wp_ai_stats_playPayload, S>

  type wp_ai_stats_playCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_ai_stats_playFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_ai_stats_playCountAggregateInputType | true
    }

  export interface wp_ai_stats_playDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_ai_stats_play'], meta: { name: 'wp_ai_stats_play' } }
    /**
     * Find zero or one Wp_ai_stats_play that matches the filter.
     * @param {wp_ai_stats_playFindUniqueArgs} args - Arguments to find a Wp_ai_stats_play
     * @example
     * // Get one Wp_ai_stats_play
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_ai_stats_playFindUniqueArgs>(args: SelectSubset<T, wp_ai_stats_playFindUniqueArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_ai_stats_play that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_ai_stats_playFindUniqueOrThrowArgs} args - Arguments to find a Wp_ai_stats_play
     * @example
     * // Get one Wp_ai_stats_play
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_ai_stats_playFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_ai_stats_playFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_ai_stats_play that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_playFindFirstArgs} args - Arguments to find a Wp_ai_stats_play
     * @example
     * // Get one Wp_ai_stats_play
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_ai_stats_playFindFirstArgs>(args?: SelectSubset<T, wp_ai_stats_playFindFirstArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_ai_stats_play that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_playFindFirstOrThrowArgs} args - Arguments to find a Wp_ai_stats_play
     * @example
     * // Get one Wp_ai_stats_play
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_ai_stats_playFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_ai_stats_playFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_ai_stats_plays that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_playFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_ai_stats_plays
     * const wp_ai_stats_plays = await prisma.wp_ai_stats_play.findMany()
     * 
     * // Get first 10 Wp_ai_stats_plays
     * const wp_ai_stats_plays = await prisma.wp_ai_stats_play.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_ai_stats_playWithIdOnly = await prisma.wp_ai_stats_play.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_ai_stats_playFindManyArgs>(args?: SelectSubset<T, wp_ai_stats_playFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_ai_stats_play.
     * @param {wp_ai_stats_playCreateArgs} args - Arguments to create a Wp_ai_stats_play.
     * @example
     * // Create one Wp_ai_stats_play
     * const Wp_ai_stats_play = await prisma.wp_ai_stats_play.create({
     *   data: {
     *     // ... data to create a Wp_ai_stats_play
     *   }
     * })
     * 
     */
    create<T extends wp_ai_stats_playCreateArgs>(args: SelectSubset<T, wp_ai_stats_playCreateArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_ai_stats_plays.
     * @param {wp_ai_stats_playCreateManyArgs} args - Arguments to create many Wp_ai_stats_plays.
     * @example
     * // Create many Wp_ai_stats_plays
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_ai_stats_playCreateManyArgs>(args?: SelectSubset<T, wp_ai_stats_playCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_ai_stats_play.
     * @param {wp_ai_stats_playDeleteArgs} args - Arguments to delete one Wp_ai_stats_play.
     * @example
     * // Delete one Wp_ai_stats_play
     * const Wp_ai_stats_play = await prisma.wp_ai_stats_play.delete({
     *   where: {
     *     // ... filter to delete one Wp_ai_stats_play
     *   }
     * })
     * 
     */
    delete<T extends wp_ai_stats_playDeleteArgs>(args: SelectSubset<T, wp_ai_stats_playDeleteArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_ai_stats_play.
     * @param {wp_ai_stats_playUpdateArgs} args - Arguments to update one Wp_ai_stats_play.
     * @example
     * // Update one Wp_ai_stats_play
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_ai_stats_playUpdateArgs>(args: SelectSubset<T, wp_ai_stats_playUpdateArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_ai_stats_plays.
     * @param {wp_ai_stats_playDeleteManyArgs} args - Arguments to filter Wp_ai_stats_plays to delete.
     * @example
     * // Delete a few Wp_ai_stats_plays
     * const { count } = await prisma.wp_ai_stats_play.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_ai_stats_playDeleteManyArgs>(args?: SelectSubset<T, wp_ai_stats_playDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_ai_stats_plays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_playUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_ai_stats_plays
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_ai_stats_playUpdateManyArgs>(args: SelectSubset<T, wp_ai_stats_playUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_ai_stats_play.
     * @param {wp_ai_stats_playUpsertArgs} args - Arguments to update or create a Wp_ai_stats_play.
     * @example
     * // Update or create a Wp_ai_stats_play
     * const wp_ai_stats_play = await prisma.wp_ai_stats_play.upsert({
     *   create: {
     *     // ... data to create a Wp_ai_stats_play
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_ai_stats_play we want to update
     *   }
     * })
     */
    upsert<T extends wp_ai_stats_playUpsertArgs>(args: SelectSubset<T, wp_ai_stats_playUpsertArgs<ExtArgs>>): Prisma__wp_ai_stats_playClient<$Result.GetResult<Prisma.$wp_ai_stats_playPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_ai_stats_plays.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_playCountArgs} args - Arguments to filter Wp_ai_stats_plays to count.
     * @example
     * // Count the number of Wp_ai_stats_plays
     * const count = await prisma.wp_ai_stats_play.count({
     *   where: {
     *     // ... the filter for the Wp_ai_stats_plays we want to count
     *   }
     * })
    **/
    count<T extends wp_ai_stats_playCountArgs>(
      args?: Subset<T, wp_ai_stats_playCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_ai_stats_playCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_ai_stats_play.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_ai_stats_playAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_ai_stats_playAggregateArgs>(args: Subset<T, Wp_ai_stats_playAggregateArgs>): Prisma.PrismaPromise<GetWp_ai_stats_playAggregateType<T>>

    /**
     * Group by Wp_ai_stats_play.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_playGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_ai_stats_playGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_ai_stats_playGroupByArgs['orderBy'] }
        : { orderBy?: wp_ai_stats_playGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_ai_stats_playGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_ai_stats_playGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_ai_stats_play model
   */
  readonly fields: wp_ai_stats_playFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_ai_stats_play.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_ai_stats_playClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_ai_stats_play model
   */
  interface wp_ai_stats_playFieldRefs {
    readonly id: FieldRef<"wp_ai_stats_play", 'Int'>
    readonly track_id: FieldRef<"wp_ai_stats_play", 'Int'>
    readonly dtime: FieldRef<"wp_ai_stats_play", 'DateTime'>
    readonly playlist_id: FieldRef<"wp_ai_stats_play", 'Int'>
    readonly referrer_url: FieldRef<"wp_ai_stats_play", 'String'>
    readonly client_fingerprint: FieldRef<"wp_ai_stats_play", 'String'>
    readonly duration: FieldRef<"wp_ai_stats_play", 'Int'>
    readonly seeks: FieldRef<"wp_ai_stats_play", 'Int'>
    readonly pauses: FieldRef<"wp_ai_stats_play", 'Int'>
    readonly skipped: FieldRef<"wp_ai_stats_play", 'Int'>
    readonly downloaded: FieldRef<"wp_ai_stats_play", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_ai_stats_play findUnique
   */
  export type wp_ai_stats_playFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_play to fetch.
     */
    where: wp_ai_stats_playWhereUniqueInput
  }

  /**
   * wp_ai_stats_play findUniqueOrThrow
   */
  export type wp_ai_stats_playFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_play to fetch.
     */
    where: wp_ai_stats_playWhereUniqueInput
  }

  /**
   * wp_ai_stats_play findFirst
   */
  export type wp_ai_stats_playFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_play to fetch.
     */
    where?: wp_ai_stats_playWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_plays to fetch.
     */
    orderBy?: wp_ai_stats_playOrderByWithRelationInput | wp_ai_stats_playOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_ai_stats_plays.
     */
    cursor?: wp_ai_stats_playWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_plays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_plays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_ai_stats_plays.
     */
    distinct?: Wp_ai_stats_playScalarFieldEnum | Wp_ai_stats_playScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_play findFirstOrThrow
   */
  export type wp_ai_stats_playFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_play to fetch.
     */
    where?: wp_ai_stats_playWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_plays to fetch.
     */
    orderBy?: wp_ai_stats_playOrderByWithRelationInput | wp_ai_stats_playOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_ai_stats_plays.
     */
    cursor?: wp_ai_stats_playWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_plays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_plays.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_ai_stats_plays.
     */
    distinct?: Wp_ai_stats_playScalarFieldEnum | Wp_ai_stats_playScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_play findMany
   */
  export type wp_ai_stats_playFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_plays to fetch.
     */
    where?: wp_ai_stats_playWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_plays to fetch.
     */
    orderBy?: wp_ai_stats_playOrderByWithRelationInput | wp_ai_stats_playOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_ai_stats_plays.
     */
    cursor?: wp_ai_stats_playWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_plays from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_plays.
     */
    skip?: number
    distinct?: Wp_ai_stats_playScalarFieldEnum | Wp_ai_stats_playScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_play create
   */
  export type wp_ai_stats_playCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_ai_stats_play.
     */
    data: XOR<wp_ai_stats_playCreateInput, wp_ai_stats_playUncheckedCreateInput>
  }

  /**
   * wp_ai_stats_play createMany
   */
  export type wp_ai_stats_playCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_ai_stats_plays.
     */
    data: wp_ai_stats_playCreateManyInput | wp_ai_stats_playCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_ai_stats_play update
   */
  export type wp_ai_stats_playUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_ai_stats_play.
     */
    data: XOR<wp_ai_stats_playUpdateInput, wp_ai_stats_playUncheckedUpdateInput>
    /**
     * Choose, which wp_ai_stats_play to update.
     */
    where: wp_ai_stats_playWhereUniqueInput
  }

  /**
   * wp_ai_stats_play updateMany
   */
  export type wp_ai_stats_playUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_ai_stats_plays.
     */
    data: XOR<wp_ai_stats_playUpdateManyMutationInput, wp_ai_stats_playUncheckedUpdateManyInput>
    /**
     * Filter which wp_ai_stats_plays to update
     */
    where?: wp_ai_stats_playWhereInput
    /**
     * Limit how many wp_ai_stats_plays to update.
     */
    limit?: number
  }

  /**
   * wp_ai_stats_play upsert
   */
  export type wp_ai_stats_playUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_ai_stats_play to update in case it exists.
     */
    where: wp_ai_stats_playWhereUniqueInput
    /**
     * In case the wp_ai_stats_play found by the `where` argument doesn't exist, create a new wp_ai_stats_play with this data.
     */
    create: XOR<wp_ai_stats_playCreateInput, wp_ai_stats_playUncheckedCreateInput>
    /**
     * In case the wp_ai_stats_play was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_ai_stats_playUpdateInput, wp_ai_stats_playUncheckedUpdateInput>
  }

  /**
   * wp_ai_stats_play delete
   */
  export type wp_ai_stats_playDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
    /**
     * Filter which wp_ai_stats_play to delete.
     */
    where: wp_ai_stats_playWhereUniqueInput
  }

  /**
   * wp_ai_stats_play deleteMany
   */
  export type wp_ai_stats_playDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_ai_stats_plays to delete
     */
    where?: wp_ai_stats_playWhereInput
    /**
     * Limit how many wp_ai_stats_plays to delete.
     */
    limit?: number
  }

  /**
   * wp_ai_stats_play without action
   */
  export type wp_ai_stats_playDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_play
     */
    select?: wp_ai_stats_playSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_play
     */
    omit?: wp_ai_stats_playOmit<ExtArgs> | null
  }


  /**
   * Model wp_ai_stats_track
   */

  export type AggregateWp_ai_stats_track = {
    _count: Wp_ai_stats_trackCountAggregateOutputType | null
    _avg: Wp_ai_stats_trackAvgAggregateOutputType | null
    _sum: Wp_ai_stats_trackSumAggregateOutputType | null
    _min: Wp_ai_stats_trackMinAggregateOutputType | null
    _max: Wp_ai_stats_trackMaxAggregateOutputType | null
  }

  export type Wp_ai_stats_trackAvgAggregateOutputType = {
    id: number | null
    duration_mean: number | null
    duration_count: number | null
    is_stream: number | null
  }

  export type Wp_ai_stats_trackSumAggregateOutputType = {
    id: number | null
    duration_mean: number | null
    duration_count: number | null
    is_stream: number | null
  }

  export type Wp_ai_stats_trackMinAggregateOutputType = {
    id: number | null
    url: string | null
    url_hash: string | null
    title: string | null
    artist: string | null
    duration_mean: number | null
    duration_count: number | null
    is_stream: number | null
  }

  export type Wp_ai_stats_trackMaxAggregateOutputType = {
    id: number | null
    url: string | null
    url_hash: string | null
    title: string | null
    artist: string | null
    duration_mean: number | null
    duration_count: number | null
    is_stream: number | null
  }

  export type Wp_ai_stats_trackCountAggregateOutputType = {
    id: number
    url: number
    url_hash: number
    title: number
    artist: number
    duration_mean: number
    duration_count: number
    is_stream: number
    _all: number
  }


  export type Wp_ai_stats_trackAvgAggregateInputType = {
    id?: true
    duration_mean?: true
    duration_count?: true
    is_stream?: true
  }

  export type Wp_ai_stats_trackSumAggregateInputType = {
    id?: true
    duration_mean?: true
    duration_count?: true
    is_stream?: true
  }

  export type Wp_ai_stats_trackMinAggregateInputType = {
    id?: true
    url?: true
    url_hash?: true
    title?: true
    artist?: true
    duration_mean?: true
    duration_count?: true
    is_stream?: true
  }

  export type Wp_ai_stats_trackMaxAggregateInputType = {
    id?: true
    url?: true
    url_hash?: true
    title?: true
    artist?: true
    duration_mean?: true
    duration_count?: true
    is_stream?: true
  }

  export type Wp_ai_stats_trackCountAggregateInputType = {
    id?: true
    url?: true
    url_hash?: true
    title?: true
    artist?: true
    duration_mean?: true
    duration_count?: true
    is_stream?: true
    _all?: true
  }

  export type Wp_ai_stats_trackAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_ai_stats_track to aggregate.
     */
    where?: wp_ai_stats_trackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_tracks to fetch.
     */
    orderBy?: wp_ai_stats_trackOrderByWithRelationInput | wp_ai_stats_trackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_ai_stats_trackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_tracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_tracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_ai_stats_tracks
    **/
    _count?: true | Wp_ai_stats_trackCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_ai_stats_trackAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_ai_stats_trackSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_ai_stats_trackMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_ai_stats_trackMaxAggregateInputType
  }

  export type GetWp_ai_stats_trackAggregateType<T extends Wp_ai_stats_trackAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_ai_stats_track]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_ai_stats_track[P]>
      : GetScalarType<T[P], AggregateWp_ai_stats_track[P]>
  }




  export type wp_ai_stats_trackGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_ai_stats_trackWhereInput
    orderBy?: wp_ai_stats_trackOrderByWithAggregationInput | wp_ai_stats_trackOrderByWithAggregationInput[]
    by: Wp_ai_stats_trackScalarFieldEnum[] | Wp_ai_stats_trackScalarFieldEnum
    having?: wp_ai_stats_trackScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_ai_stats_trackCountAggregateInputType | true
    _avg?: Wp_ai_stats_trackAvgAggregateInputType
    _sum?: Wp_ai_stats_trackSumAggregateInputType
    _min?: Wp_ai_stats_trackMinAggregateInputType
    _max?: Wp_ai_stats_trackMaxAggregateInputType
  }

  export type Wp_ai_stats_trackGroupByOutputType = {
    id: number
    url: string
    url_hash: string
    title: string | null
    artist: string | null
    duration_mean: number | null
    duration_count: number | null
    is_stream: number
    _count: Wp_ai_stats_trackCountAggregateOutputType | null
    _avg: Wp_ai_stats_trackAvgAggregateOutputType | null
    _sum: Wp_ai_stats_trackSumAggregateOutputType | null
    _min: Wp_ai_stats_trackMinAggregateOutputType | null
    _max: Wp_ai_stats_trackMaxAggregateOutputType | null
  }

  type GetWp_ai_stats_trackGroupByPayload<T extends wp_ai_stats_trackGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_ai_stats_trackGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_ai_stats_trackGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_ai_stats_trackGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_ai_stats_trackGroupByOutputType[P]>
        }
      >
    >


  export type wp_ai_stats_trackSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    url_hash?: boolean
    title?: boolean
    artist?: boolean
    duration_mean?: boolean
    duration_count?: boolean
    is_stream?: boolean
  }, ExtArgs["result"]["wp_ai_stats_track"]>



  export type wp_ai_stats_trackSelectScalar = {
    id?: boolean
    url?: boolean
    url_hash?: boolean
    title?: boolean
    artist?: boolean
    duration_mean?: boolean
    duration_count?: boolean
    is_stream?: boolean
  }

  export type wp_ai_stats_trackOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "url_hash" | "title" | "artist" | "duration_mean" | "duration_count" | "is_stream", ExtArgs["result"]["wp_ai_stats_track"]>

  export type $wp_ai_stats_trackPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_ai_stats_track"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      url: string
      url_hash: string
      title: string | null
      artist: string | null
      duration_mean: number | null
      duration_count: number | null
      is_stream: number
    }, ExtArgs["result"]["wp_ai_stats_track"]>
    composites: {}
  }

  type wp_ai_stats_trackGetPayload<S extends boolean | null | undefined | wp_ai_stats_trackDefaultArgs> = $Result.GetResult<Prisma.$wp_ai_stats_trackPayload, S>

  type wp_ai_stats_trackCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_ai_stats_trackFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_ai_stats_trackCountAggregateInputType | true
    }

  export interface wp_ai_stats_trackDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_ai_stats_track'], meta: { name: 'wp_ai_stats_track' } }
    /**
     * Find zero or one Wp_ai_stats_track that matches the filter.
     * @param {wp_ai_stats_trackFindUniqueArgs} args - Arguments to find a Wp_ai_stats_track
     * @example
     * // Get one Wp_ai_stats_track
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_ai_stats_trackFindUniqueArgs>(args: SelectSubset<T, wp_ai_stats_trackFindUniqueArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_ai_stats_track that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_ai_stats_trackFindUniqueOrThrowArgs} args - Arguments to find a Wp_ai_stats_track
     * @example
     * // Get one Wp_ai_stats_track
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_ai_stats_trackFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_ai_stats_trackFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_ai_stats_track that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_trackFindFirstArgs} args - Arguments to find a Wp_ai_stats_track
     * @example
     * // Get one Wp_ai_stats_track
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_ai_stats_trackFindFirstArgs>(args?: SelectSubset<T, wp_ai_stats_trackFindFirstArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_ai_stats_track that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_trackFindFirstOrThrowArgs} args - Arguments to find a Wp_ai_stats_track
     * @example
     * // Get one Wp_ai_stats_track
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_ai_stats_trackFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_ai_stats_trackFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_ai_stats_tracks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_trackFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_ai_stats_tracks
     * const wp_ai_stats_tracks = await prisma.wp_ai_stats_track.findMany()
     * 
     * // Get first 10 Wp_ai_stats_tracks
     * const wp_ai_stats_tracks = await prisma.wp_ai_stats_track.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_ai_stats_trackWithIdOnly = await prisma.wp_ai_stats_track.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_ai_stats_trackFindManyArgs>(args?: SelectSubset<T, wp_ai_stats_trackFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_ai_stats_track.
     * @param {wp_ai_stats_trackCreateArgs} args - Arguments to create a Wp_ai_stats_track.
     * @example
     * // Create one Wp_ai_stats_track
     * const Wp_ai_stats_track = await prisma.wp_ai_stats_track.create({
     *   data: {
     *     // ... data to create a Wp_ai_stats_track
     *   }
     * })
     * 
     */
    create<T extends wp_ai_stats_trackCreateArgs>(args: SelectSubset<T, wp_ai_stats_trackCreateArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_ai_stats_tracks.
     * @param {wp_ai_stats_trackCreateManyArgs} args - Arguments to create many Wp_ai_stats_tracks.
     * @example
     * // Create many Wp_ai_stats_tracks
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_ai_stats_trackCreateManyArgs>(args?: SelectSubset<T, wp_ai_stats_trackCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_ai_stats_track.
     * @param {wp_ai_stats_trackDeleteArgs} args - Arguments to delete one Wp_ai_stats_track.
     * @example
     * // Delete one Wp_ai_stats_track
     * const Wp_ai_stats_track = await prisma.wp_ai_stats_track.delete({
     *   where: {
     *     // ... filter to delete one Wp_ai_stats_track
     *   }
     * })
     * 
     */
    delete<T extends wp_ai_stats_trackDeleteArgs>(args: SelectSubset<T, wp_ai_stats_trackDeleteArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_ai_stats_track.
     * @param {wp_ai_stats_trackUpdateArgs} args - Arguments to update one Wp_ai_stats_track.
     * @example
     * // Update one Wp_ai_stats_track
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_ai_stats_trackUpdateArgs>(args: SelectSubset<T, wp_ai_stats_trackUpdateArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_ai_stats_tracks.
     * @param {wp_ai_stats_trackDeleteManyArgs} args - Arguments to filter Wp_ai_stats_tracks to delete.
     * @example
     * // Delete a few Wp_ai_stats_tracks
     * const { count } = await prisma.wp_ai_stats_track.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_ai_stats_trackDeleteManyArgs>(args?: SelectSubset<T, wp_ai_stats_trackDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_ai_stats_tracks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_trackUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_ai_stats_tracks
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_ai_stats_trackUpdateManyArgs>(args: SelectSubset<T, wp_ai_stats_trackUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_ai_stats_track.
     * @param {wp_ai_stats_trackUpsertArgs} args - Arguments to update or create a Wp_ai_stats_track.
     * @example
     * // Update or create a Wp_ai_stats_track
     * const wp_ai_stats_track = await prisma.wp_ai_stats_track.upsert({
     *   create: {
     *     // ... data to create a Wp_ai_stats_track
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_ai_stats_track we want to update
     *   }
     * })
     */
    upsert<T extends wp_ai_stats_trackUpsertArgs>(args: SelectSubset<T, wp_ai_stats_trackUpsertArgs<ExtArgs>>): Prisma__wp_ai_stats_trackClient<$Result.GetResult<Prisma.$wp_ai_stats_trackPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_ai_stats_tracks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_trackCountArgs} args - Arguments to filter Wp_ai_stats_tracks to count.
     * @example
     * // Count the number of Wp_ai_stats_tracks
     * const count = await prisma.wp_ai_stats_track.count({
     *   where: {
     *     // ... the filter for the Wp_ai_stats_tracks we want to count
     *   }
     * })
    **/
    count<T extends wp_ai_stats_trackCountArgs>(
      args?: Subset<T, wp_ai_stats_trackCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_ai_stats_trackCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_ai_stats_track.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_ai_stats_trackAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_ai_stats_trackAggregateArgs>(args: Subset<T, Wp_ai_stats_trackAggregateArgs>): Prisma.PrismaPromise<GetWp_ai_stats_trackAggregateType<T>>

    /**
     * Group by Wp_ai_stats_track.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_ai_stats_trackGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_ai_stats_trackGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_ai_stats_trackGroupByArgs['orderBy'] }
        : { orderBy?: wp_ai_stats_trackGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_ai_stats_trackGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_ai_stats_trackGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_ai_stats_track model
   */
  readonly fields: wp_ai_stats_trackFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_ai_stats_track.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_ai_stats_trackClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_ai_stats_track model
   */
  interface wp_ai_stats_trackFieldRefs {
    readonly id: FieldRef<"wp_ai_stats_track", 'Int'>
    readonly url: FieldRef<"wp_ai_stats_track", 'String'>
    readonly url_hash: FieldRef<"wp_ai_stats_track", 'String'>
    readonly title: FieldRef<"wp_ai_stats_track", 'String'>
    readonly artist: FieldRef<"wp_ai_stats_track", 'String'>
    readonly duration_mean: FieldRef<"wp_ai_stats_track", 'Float'>
    readonly duration_count: FieldRef<"wp_ai_stats_track", 'Int'>
    readonly is_stream: FieldRef<"wp_ai_stats_track", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_ai_stats_track findUnique
   */
  export type wp_ai_stats_trackFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_track to fetch.
     */
    where: wp_ai_stats_trackWhereUniqueInput
  }

  /**
   * wp_ai_stats_track findUniqueOrThrow
   */
  export type wp_ai_stats_trackFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_track to fetch.
     */
    where: wp_ai_stats_trackWhereUniqueInput
  }

  /**
   * wp_ai_stats_track findFirst
   */
  export type wp_ai_stats_trackFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_track to fetch.
     */
    where?: wp_ai_stats_trackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_tracks to fetch.
     */
    orderBy?: wp_ai_stats_trackOrderByWithRelationInput | wp_ai_stats_trackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_ai_stats_tracks.
     */
    cursor?: wp_ai_stats_trackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_tracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_tracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_ai_stats_tracks.
     */
    distinct?: Wp_ai_stats_trackScalarFieldEnum | Wp_ai_stats_trackScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_track findFirstOrThrow
   */
  export type wp_ai_stats_trackFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_track to fetch.
     */
    where?: wp_ai_stats_trackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_tracks to fetch.
     */
    orderBy?: wp_ai_stats_trackOrderByWithRelationInput | wp_ai_stats_trackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_ai_stats_tracks.
     */
    cursor?: wp_ai_stats_trackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_tracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_tracks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_ai_stats_tracks.
     */
    distinct?: Wp_ai_stats_trackScalarFieldEnum | Wp_ai_stats_trackScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_track findMany
   */
  export type wp_ai_stats_trackFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * Filter, which wp_ai_stats_tracks to fetch.
     */
    where?: wp_ai_stats_trackWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_ai_stats_tracks to fetch.
     */
    orderBy?: wp_ai_stats_trackOrderByWithRelationInput | wp_ai_stats_trackOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_ai_stats_tracks.
     */
    cursor?: wp_ai_stats_trackWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_ai_stats_tracks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_ai_stats_tracks.
     */
    skip?: number
    distinct?: Wp_ai_stats_trackScalarFieldEnum | Wp_ai_stats_trackScalarFieldEnum[]
  }

  /**
   * wp_ai_stats_track create
   */
  export type wp_ai_stats_trackCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_ai_stats_track.
     */
    data: XOR<wp_ai_stats_trackCreateInput, wp_ai_stats_trackUncheckedCreateInput>
  }

  /**
   * wp_ai_stats_track createMany
   */
  export type wp_ai_stats_trackCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_ai_stats_tracks.
     */
    data: wp_ai_stats_trackCreateManyInput | wp_ai_stats_trackCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_ai_stats_track update
   */
  export type wp_ai_stats_trackUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_ai_stats_track.
     */
    data: XOR<wp_ai_stats_trackUpdateInput, wp_ai_stats_trackUncheckedUpdateInput>
    /**
     * Choose, which wp_ai_stats_track to update.
     */
    where: wp_ai_stats_trackWhereUniqueInput
  }

  /**
   * wp_ai_stats_track updateMany
   */
  export type wp_ai_stats_trackUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_ai_stats_tracks.
     */
    data: XOR<wp_ai_stats_trackUpdateManyMutationInput, wp_ai_stats_trackUncheckedUpdateManyInput>
    /**
     * Filter which wp_ai_stats_tracks to update
     */
    where?: wp_ai_stats_trackWhereInput
    /**
     * Limit how many wp_ai_stats_tracks to update.
     */
    limit?: number
  }

  /**
   * wp_ai_stats_track upsert
   */
  export type wp_ai_stats_trackUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_ai_stats_track to update in case it exists.
     */
    where: wp_ai_stats_trackWhereUniqueInput
    /**
     * In case the wp_ai_stats_track found by the `where` argument doesn't exist, create a new wp_ai_stats_track with this data.
     */
    create: XOR<wp_ai_stats_trackCreateInput, wp_ai_stats_trackUncheckedCreateInput>
    /**
     * In case the wp_ai_stats_track was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_ai_stats_trackUpdateInput, wp_ai_stats_trackUncheckedUpdateInput>
  }

  /**
   * wp_ai_stats_track delete
   */
  export type wp_ai_stats_trackDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
    /**
     * Filter which wp_ai_stats_track to delete.
     */
    where: wp_ai_stats_trackWhereUniqueInput
  }

  /**
   * wp_ai_stats_track deleteMany
   */
  export type wp_ai_stats_trackDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_ai_stats_tracks to delete
     */
    where?: wp_ai_stats_trackWhereInput
    /**
     * Limit how many wp_ai_stats_tracks to delete.
     */
    limit?: number
  }

  /**
   * wp_ai_stats_track without action
   */
  export type wp_ai_stats_trackDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_ai_stats_track
     */
    select?: wp_ai_stats_trackSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_ai_stats_track
     */
    omit?: wp_ai_stats_trackOmit<ExtArgs> | null
  }


  /**
   * Model wp_audier_elementor_cache
   */

  export type AggregateWp_audier_elementor_cache = {
    _count: Wp_audier_elementor_cacheCountAggregateOutputType | null
    _avg: Wp_audier_elementor_cacheAvgAggregateOutputType | null
    _sum: Wp_audier_elementor_cacheSumAggregateOutputType | null
    _min: Wp_audier_elementor_cacheMinAggregateOutputType | null
    _max: Wp_audier_elementor_cacheMaxAggregateOutputType | null
  }

  export type Wp_audier_elementor_cacheAvgAggregateOutputType = {
    id: number | null
    updated_at: number | null
  }

  export type Wp_audier_elementor_cacheSumAggregateOutputType = {
    id: number | null
    updated_at: number | null
  }

  export type Wp_audier_elementor_cacheMinAggregateOutputType = {
    id: number | null
    key: string | null
    data: string | null
    updated_at: number | null
  }

  export type Wp_audier_elementor_cacheMaxAggregateOutputType = {
    id: number | null
    key: string | null
    data: string | null
    updated_at: number | null
  }

  export type Wp_audier_elementor_cacheCountAggregateOutputType = {
    id: number
    key: number
    data: number
    updated_at: number
    _all: number
  }


  export type Wp_audier_elementor_cacheAvgAggregateInputType = {
    id?: true
    updated_at?: true
  }

  export type Wp_audier_elementor_cacheSumAggregateInputType = {
    id?: true
    updated_at?: true
  }

  export type Wp_audier_elementor_cacheMinAggregateInputType = {
    id?: true
    key?: true
    data?: true
    updated_at?: true
  }

  export type Wp_audier_elementor_cacheMaxAggregateInputType = {
    id?: true
    key?: true
    data?: true
    updated_at?: true
  }

  export type Wp_audier_elementor_cacheCountAggregateInputType = {
    id?: true
    key?: true
    data?: true
    updated_at?: true
    _all?: true
  }

  export type Wp_audier_elementor_cacheAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_audier_elementor_cache to aggregate.
     */
    where?: wp_audier_elementor_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_audier_elementor_caches to fetch.
     */
    orderBy?: wp_audier_elementor_cacheOrderByWithRelationInput | wp_audier_elementor_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_audier_elementor_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_audier_elementor_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_audier_elementor_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_audier_elementor_caches
    **/
    _count?: true | Wp_audier_elementor_cacheCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_audier_elementor_cacheAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_audier_elementor_cacheSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_audier_elementor_cacheMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_audier_elementor_cacheMaxAggregateInputType
  }

  export type GetWp_audier_elementor_cacheAggregateType<T extends Wp_audier_elementor_cacheAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_audier_elementor_cache]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_audier_elementor_cache[P]>
      : GetScalarType<T[P], AggregateWp_audier_elementor_cache[P]>
  }




  export type wp_audier_elementor_cacheGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_audier_elementor_cacheWhereInput
    orderBy?: wp_audier_elementor_cacheOrderByWithAggregationInput | wp_audier_elementor_cacheOrderByWithAggregationInput[]
    by: Wp_audier_elementor_cacheScalarFieldEnum[] | Wp_audier_elementor_cacheScalarFieldEnum
    having?: wp_audier_elementor_cacheScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_audier_elementor_cacheCountAggregateInputType | true
    _avg?: Wp_audier_elementor_cacheAvgAggregateInputType
    _sum?: Wp_audier_elementor_cacheSumAggregateInputType
    _min?: Wp_audier_elementor_cacheMinAggregateInputType
    _max?: Wp_audier_elementor_cacheMaxAggregateInputType
  }

  export type Wp_audier_elementor_cacheGroupByOutputType = {
    id: number
    key: string
    data: string
    updated_at: number
    _count: Wp_audier_elementor_cacheCountAggregateOutputType | null
    _avg: Wp_audier_elementor_cacheAvgAggregateOutputType | null
    _sum: Wp_audier_elementor_cacheSumAggregateOutputType | null
    _min: Wp_audier_elementor_cacheMinAggregateOutputType | null
    _max: Wp_audier_elementor_cacheMaxAggregateOutputType | null
  }

  type GetWp_audier_elementor_cacheGroupByPayload<T extends wp_audier_elementor_cacheGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_audier_elementor_cacheGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_audier_elementor_cacheGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_audier_elementor_cacheGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_audier_elementor_cacheGroupByOutputType[P]>
        }
      >
    >


  export type wp_audier_elementor_cacheSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    key?: boolean
    data?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["wp_audier_elementor_cache"]>



  export type wp_audier_elementor_cacheSelectScalar = {
    id?: boolean
    key?: boolean
    data?: boolean
    updated_at?: boolean
  }

  export type wp_audier_elementor_cacheOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "key" | "data" | "updated_at", ExtArgs["result"]["wp_audier_elementor_cache"]>

  export type $wp_audier_elementor_cachePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_audier_elementor_cache"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      key: string
      data: string
      updated_at: number
    }, ExtArgs["result"]["wp_audier_elementor_cache"]>
    composites: {}
  }

  type wp_audier_elementor_cacheGetPayload<S extends boolean | null | undefined | wp_audier_elementor_cacheDefaultArgs> = $Result.GetResult<Prisma.$wp_audier_elementor_cachePayload, S>

  type wp_audier_elementor_cacheCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_audier_elementor_cacheFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_audier_elementor_cacheCountAggregateInputType | true
    }

  export interface wp_audier_elementor_cacheDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_audier_elementor_cache'], meta: { name: 'wp_audier_elementor_cache' } }
    /**
     * Find zero or one Wp_audier_elementor_cache that matches the filter.
     * @param {wp_audier_elementor_cacheFindUniqueArgs} args - Arguments to find a Wp_audier_elementor_cache
     * @example
     * // Get one Wp_audier_elementor_cache
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_audier_elementor_cacheFindUniqueArgs>(args: SelectSubset<T, wp_audier_elementor_cacheFindUniqueArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_audier_elementor_cache that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_audier_elementor_cacheFindUniqueOrThrowArgs} args - Arguments to find a Wp_audier_elementor_cache
     * @example
     * // Get one Wp_audier_elementor_cache
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_audier_elementor_cacheFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_audier_elementor_cacheFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_audier_elementor_cache that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_audier_elementor_cacheFindFirstArgs} args - Arguments to find a Wp_audier_elementor_cache
     * @example
     * // Get one Wp_audier_elementor_cache
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_audier_elementor_cacheFindFirstArgs>(args?: SelectSubset<T, wp_audier_elementor_cacheFindFirstArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_audier_elementor_cache that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_audier_elementor_cacheFindFirstOrThrowArgs} args - Arguments to find a Wp_audier_elementor_cache
     * @example
     * // Get one Wp_audier_elementor_cache
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_audier_elementor_cacheFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_audier_elementor_cacheFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_audier_elementor_caches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_audier_elementor_cacheFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_audier_elementor_caches
     * const wp_audier_elementor_caches = await prisma.wp_audier_elementor_cache.findMany()
     * 
     * // Get first 10 Wp_audier_elementor_caches
     * const wp_audier_elementor_caches = await prisma.wp_audier_elementor_cache.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_audier_elementor_cacheWithIdOnly = await prisma.wp_audier_elementor_cache.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_audier_elementor_cacheFindManyArgs>(args?: SelectSubset<T, wp_audier_elementor_cacheFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_audier_elementor_cache.
     * @param {wp_audier_elementor_cacheCreateArgs} args - Arguments to create a Wp_audier_elementor_cache.
     * @example
     * // Create one Wp_audier_elementor_cache
     * const Wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.create({
     *   data: {
     *     // ... data to create a Wp_audier_elementor_cache
     *   }
     * })
     * 
     */
    create<T extends wp_audier_elementor_cacheCreateArgs>(args: SelectSubset<T, wp_audier_elementor_cacheCreateArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_audier_elementor_caches.
     * @param {wp_audier_elementor_cacheCreateManyArgs} args - Arguments to create many Wp_audier_elementor_caches.
     * @example
     * // Create many Wp_audier_elementor_caches
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_audier_elementor_cacheCreateManyArgs>(args?: SelectSubset<T, wp_audier_elementor_cacheCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_audier_elementor_cache.
     * @param {wp_audier_elementor_cacheDeleteArgs} args - Arguments to delete one Wp_audier_elementor_cache.
     * @example
     * // Delete one Wp_audier_elementor_cache
     * const Wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.delete({
     *   where: {
     *     // ... filter to delete one Wp_audier_elementor_cache
     *   }
     * })
     * 
     */
    delete<T extends wp_audier_elementor_cacheDeleteArgs>(args: SelectSubset<T, wp_audier_elementor_cacheDeleteArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_audier_elementor_cache.
     * @param {wp_audier_elementor_cacheUpdateArgs} args - Arguments to update one Wp_audier_elementor_cache.
     * @example
     * // Update one Wp_audier_elementor_cache
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_audier_elementor_cacheUpdateArgs>(args: SelectSubset<T, wp_audier_elementor_cacheUpdateArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_audier_elementor_caches.
     * @param {wp_audier_elementor_cacheDeleteManyArgs} args - Arguments to filter Wp_audier_elementor_caches to delete.
     * @example
     * // Delete a few Wp_audier_elementor_caches
     * const { count } = await prisma.wp_audier_elementor_cache.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_audier_elementor_cacheDeleteManyArgs>(args?: SelectSubset<T, wp_audier_elementor_cacheDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_audier_elementor_caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_audier_elementor_cacheUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_audier_elementor_caches
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_audier_elementor_cacheUpdateManyArgs>(args: SelectSubset<T, wp_audier_elementor_cacheUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_audier_elementor_cache.
     * @param {wp_audier_elementor_cacheUpsertArgs} args - Arguments to update or create a Wp_audier_elementor_cache.
     * @example
     * // Update or create a Wp_audier_elementor_cache
     * const wp_audier_elementor_cache = await prisma.wp_audier_elementor_cache.upsert({
     *   create: {
     *     // ... data to create a Wp_audier_elementor_cache
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_audier_elementor_cache we want to update
     *   }
     * })
     */
    upsert<T extends wp_audier_elementor_cacheUpsertArgs>(args: SelectSubset<T, wp_audier_elementor_cacheUpsertArgs<ExtArgs>>): Prisma__wp_audier_elementor_cacheClient<$Result.GetResult<Prisma.$wp_audier_elementor_cachePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_audier_elementor_caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_audier_elementor_cacheCountArgs} args - Arguments to filter Wp_audier_elementor_caches to count.
     * @example
     * // Count the number of Wp_audier_elementor_caches
     * const count = await prisma.wp_audier_elementor_cache.count({
     *   where: {
     *     // ... the filter for the Wp_audier_elementor_caches we want to count
     *   }
     * })
    **/
    count<T extends wp_audier_elementor_cacheCountArgs>(
      args?: Subset<T, wp_audier_elementor_cacheCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_audier_elementor_cacheCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_audier_elementor_cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_audier_elementor_cacheAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_audier_elementor_cacheAggregateArgs>(args: Subset<T, Wp_audier_elementor_cacheAggregateArgs>): Prisma.PrismaPromise<GetWp_audier_elementor_cacheAggregateType<T>>

    /**
     * Group by Wp_audier_elementor_cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_audier_elementor_cacheGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_audier_elementor_cacheGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_audier_elementor_cacheGroupByArgs['orderBy'] }
        : { orderBy?: wp_audier_elementor_cacheGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_audier_elementor_cacheGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_audier_elementor_cacheGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_audier_elementor_cache model
   */
  readonly fields: wp_audier_elementor_cacheFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_audier_elementor_cache.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_audier_elementor_cacheClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_audier_elementor_cache model
   */
  interface wp_audier_elementor_cacheFieldRefs {
    readonly id: FieldRef<"wp_audier_elementor_cache", 'Int'>
    readonly key: FieldRef<"wp_audier_elementor_cache", 'String'>
    readonly data: FieldRef<"wp_audier_elementor_cache", 'String'>
    readonly updated_at: FieldRef<"wp_audier_elementor_cache", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_audier_elementor_cache findUnique
   */
  export type wp_audier_elementor_cacheFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_audier_elementor_cache to fetch.
     */
    where: wp_audier_elementor_cacheWhereUniqueInput
  }

  /**
   * wp_audier_elementor_cache findUniqueOrThrow
   */
  export type wp_audier_elementor_cacheFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_audier_elementor_cache to fetch.
     */
    where: wp_audier_elementor_cacheWhereUniqueInput
  }

  /**
   * wp_audier_elementor_cache findFirst
   */
  export type wp_audier_elementor_cacheFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_audier_elementor_cache to fetch.
     */
    where?: wp_audier_elementor_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_audier_elementor_caches to fetch.
     */
    orderBy?: wp_audier_elementor_cacheOrderByWithRelationInput | wp_audier_elementor_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_audier_elementor_caches.
     */
    cursor?: wp_audier_elementor_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_audier_elementor_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_audier_elementor_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_audier_elementor_caches.
     */
    distinct?: Wp_audier_elementor_cacheScalarFieldEnum | Wp_audier_elementor_cacheScalarFieldEnum[]
  }

  /**
   * wp_audier_elementor_cache findFirstOrThrow
   */
  export type wp_audier_elementor_cacheFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_audier_elementor_cache to fetch.
     */
    where?: wp_audier_elementor_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_audier_elementor_caches to fetch.
     */
    orderBy?: wp_audier_elementor_cacheOrderByWithRelationInput | wp_audier_elementor_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_audier_elementor_caches.
     */
    cursor?: wp_audier_elementor_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_audier_elementor_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_audier_elementor_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_audier_elementor_caches.
     */
    distinct?: Wp_audier_elementor_cacheScalarFieldEnum | Wp_audier_elementor_cacheScalarFieldEnum[]
  }

  /**
   * wp_audier_elementor_cache findMany
   */
  export type wp_audier_elementor_cacheFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_audier_elementor_caches to fetch.
     */
    where?: wp_audier_elementor_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_audier_elementor_caches to fetch.
     */
    orderBy?: wp_audier_elementor_cacheOrderByWithRelationInput | wp_audier_elementor_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_audier_elementor_caches.
     */
    cursor?: wp_audier_elementor_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_audier_elementor_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_audier_elementor_caches.
     */
    skip?: number
    distinct?: Wp_audier_elementor_cacheScalarFieldEnum | Wp_audier_elementor_cacheScalarFieldEnum[]
  }

  /**
   * wp_audier_elementor_cache create
   */
  export type wp_audier_elementor_cacheCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_audier_elementor_cache.
     */
    data: XOR<wp_audier_elementor_cacheCreateInput, wp_audier_elementor_cacheUncheckedCreateInput>
  }

  /**
   * wp_audier_elementor_cache createMany
   */
  export type wp_audier_elementor_cacheCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_audier_elementor_caches.
     */
    data: wp_audier_elementor_cacheCreateManyInput | wp_audier_elementor_cacheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_audier_elementor_cache update
   */
  export type wp_audier_elementor_cacheUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_audier_elementor_cache.
     */
    data: XOR<wp_audier_elementor_cacheUpdateInput, wp_audier_elementor_cacheUncheckedUpdateInput>
    /**
     * Choose, which wp_audier_elementor_cache to update.
     */
    where: wp_audier_elementor_cacheWhereUniqueInput
  }

  /**
   * wp_audier_elementor_cache updateMany
   */
  export type wp_audier_elementor_cacheUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_audier_elementor_caches.
     */
    data: XOR<wp_audier_elementor_cacheUpdateManyMutationInput, wp_audier_elementor_cacheUncheckedUpdateManyInput>
    /**
     * Filter which wp_audier_elementor_caches to update
     */
    where?: wp_audier_elementor_cacheWhereInput
    /**
     * Limit how many wp_audier_elementor_caches to update.
     */
    limit?: number
  }

  /**
   * wp_audier_elementor_cache upsert
   */
  export type wp_audier_elementor_cacheUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_audier_elementor_cache to update in case it exists.
     */
    where: wp_audier_elementor_cacheWhereUniqueInput
    /**
     * In case the wp_audier_elementor_cache found by the `where` argument doesn't exist, create a new wp_audier_elementor_cache with this data.
     */
    create: XOR<wp_audier_elementor_cacheCreateInput, wp_audier_elementor_cacheUncheckedCreateInput>
    /**
     * In case the wp_audier_elementor_cache was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_audier_elementor_cacheUpdateInput, wp_audier_elementor_cacheUncheckedUpdateInput>
  }

  /**
   * wp_audier_elementor_cache delete
   */
  export type wp_audier_elementor_cacheDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
    /**
     * Filter which wp_audier_elementor_cache to delete.
     */
    where: wp_audier_elementor_cacheWhereUniqueInput
  }

  /**
   * wp_audier_elementor_cache deleteMany
   */
  export type wp_audier_elementor_cacheDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_audier_elementor_caches to delete
     */
    where?: wp_audier_elementor_cacheWhereInput
    /**
     * Limit how many wp_audier_elementor_caches to delete.
     */
    limit?: number
  }

  /**
   * wp_audier_elementor_cache without action
   */
  export type wp_audier_elementor_cacheDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_audier_elementor_cache
     */
    select?: wp_audier_elementor_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_audier_elementor_cache
     */
    omit?: wp_audier_elementor_cacheOmit<ExtArgs> | null
  }


  /**
   * Model wp_commentmeta
   */

  export type AggregateWp_commentmeta = {
    _count: Wp_commentmetaCountAggregateOutputType | null
    _avg: Wp_commentmetaAvgAggregateOutputType | null
    _sum: Wp_commentmetaSumAggregateOutputType | null
    _min: Wp_commentmetaMinAggregateOutputType | null
    _max: Wp_commentmetaMaxAggregateOutputType | null
  }

  export type Wp_commentmetaAvgAggregateOutputType = {
    meta_id: number | null
    comment_id: number | null
  }

  export type Wp_commentmetaSumAggregateOutputType = {
    meta_id: bigint | null
    comment_id: bigint | null
  }

  export type Wp_commentmetaMinAggregateOutputType = {
    meta_id: bigint | null
    comment_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_commentmetaMaxAggregateOutputType = {
    meta_id: bigint | null
    comment_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_commentmetaCountAggregateOutputType = {
    meta_id: number
    comment_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_commentmetaAvgAggregateInputType = {
    meta_id?: true
    comment_id?: true
  }

  export type Wp_commentmetaSumAggregateInputType = {
    meta_id?: true
    comment_id?: true
  }

  export type Wp_commentmetaMinAggregateInputType = {
    meta_id?: true
    comment_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_commentmetaMaxAggregateInputType = {
    meta_id?: true
    comment_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_commentmetaCountAggregateInputType = {
    meta_id?: true
    comment_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_commentmetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_commentmeta to aggregate.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_commentmetas
    **/
    _count?: true | Wp_commentmetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_commentmetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_commentmetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_commentmetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_commentmetaMaxAggregateInputType
  }

  export type GetWp_commentmetaAggregateType<T extends Wp_commentmetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_commentmeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_commentmeta[P]>
      : GetScalarType<T[P], AggregateWp_commentmeta[P]>
  }




  export type wp_commentmetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_commentmetaWhereInput
    orderBy?: wp_commentmetaOrderByWithAggregationInput | wp_commentmetaOrderByWithAggregationInput[]
    by: Wp_commentmetaScalarFieldEnum[] | Wp_commentmetaScalarFieldEnum
    having?: wp_commentmetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_commentmetaCountAggregateInputType | true
    _avg?: Wp_commentmetaAvgAggregateInputType
    _sum?: Wp_commentmetaSumAggregateInputType
    _min?: Wp_commentmetaMinAggregateInputType
    _max?: Wp_commentmetaMaxAggregateInputType
  }

  export type Wp_commentmetaGroupByOutputType = {
    meta_id: bigint
    comment_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_commentmetaCountAggregateOutputType | null
    _avg: Wp_commentmetaAvgAggregateOutputType | null
    _sum: Wp_commentmetaSumAggregateOutputType | null
    _min: Wp_commentmetaMinAggregateOutputType | null
    _max: Wp_commentmetaMaxAggregateOutputType | null
  }

  type GetWp_commentmetaGroupByPayload<T extends wp_commentmetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_commentmetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_commentmetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_commentmetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_commentmetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_commentmetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    meta_id?: boolean
    comment_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_commentmeta"]>



  export type wp_commentmetaSelectScalar = {
    meta_id?: boolean
    comment_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_commentmetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"meta_id" | "comment_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_commentmeta"]>

  export type $wp_commentmetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_commentmeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      meta_id: bigint
      comment_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_commentmeta"]>
    composites: {}
  }

  type wp_commentmetaGetPayload<S extends boolean | null | undefined | wp_commentmetaDefaultArgs> = $Result.GetResult<Prisma.$wp_commentmetaPayload, S>

  type wp_commentmetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_commentmetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_commentmetaCountAggregateInputType | true
    }

  export interface wp_commentmetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_commentmeta'], meta: { name: 'wp_commentmeta' } }
    /**
     * Find zero or one Wp_commentmeta that matches the filter.
     * @param {wp_commentmetaFindUniqueArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_commentmetaFindUniqueArgs>(args: SelectSubset<T, wp_commentmetaFindUniqueArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_commentmeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_commentmetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_commentmetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_commentmetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_commentmeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaFindFirstArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_commentmetaFindFirstArgs>(args?: SelectSubset<T, wp_commentmetaFindFirstArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_commentmeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaFindFirstOrThrowArgs} args - Arguments to find a Wp_commentmeta
     * @example
     * // Get one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_commentmetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_commentmetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_commentmetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_commentmetas
     * const wp_commentmetas = await prisma.wp_commentmeta.findMany()
     * 
     * // Get first 10 Wp_commentmetas
     * const wp_commentmetas = await prisma.wp_commentmeta.findMany({ take: 10 })
     * 
     * // Only select the `meta_id`
     * const wp_commentmetaWithMeta_idOnly = await prisma.wp_commentmeta.findMany({ select: { meta_id: true } })
     * 
     */
    findMany<T extends wp_commentmetaFindManyArgs>(args?: SelectSubset<T, wp_commentmetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_commentmeta.
     * @param {wp_commentmetaCreateArgs} args - Arguments to create a Wp_commentmeta.
     * @example
     * // Create one Wp_commentmeta
     * const Wp_commentmeta = await prisma.wp_commentmeta.create({
     *   data: {
     *     // ... data to create a Wp_commentmeta
     *   }
     * })
     * 
     */
    create<T extends wp_commentmetaCreateArgs>(args: SelectSubset<T, wp_commentmetaCreateArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_commentmetas.
     * @param {wp_commentmetaCreateManyArgs} args - Arguments to create many Wp_commentmetas.
     * @example
     * // Create many Wp_commentmetas
     * const wp_commentmeta = await prisma.wp_commentmeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_commentmetaCreateManyArgs>(args?: SelectSubset<T, wp_commentmetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_commentmeta.
     * @param {wp_commentmetaDeleteArgs} args - Arguments to delete one Wp_commentmeta.
     * @example
     * // Delete one Wp_commentmeta
     * const Wp_commentmeta = await prisma.wp_commentmeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_commentmeta
     *   }
     * })
     * 
     */
    delete<T extends wp_commentmetaDeleteArgs>(args: SelectSubset<T, wp_commentmetaDeleteArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_commentmeta.
     * @param {wp_commentmetaUpdateArgs} args - Arguments to update one Wp_commentmeta.
     * @example
     * // Update one Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_commentmetaUpdateArgs>(args: SelectSubset<T, wp_commentmetaUpdateArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_commentmetas.
     * @param {wp_commentmetaDeleteManyArgs} args - Arguments to filter Wp_commentmetas to delete.
     * @example
     * // Delete a few Wp_commentmetas
     * const { count } = await prisma.wp_commentmeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_commentmetaDeleteManyArgs>(args?: SelectSubset<T, wp_commentmetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_commentmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_commentmetas
     * const wp_commentmeta = await prisma.wp_commentmeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_commentmetaUpdateManyArgs>(args: SelectSubset<T, wp_commentmetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_commentmeta.
     * @param {wp_commentmetaUpsertArgs} args - Arguments to update or create a Wp_commentmeta.
     * @example
     * // Update or create a Wp_commentmeta
     * const wp_commentmeta = await prisma.wp_commentmeta.upsert({
     *   create: {
     *     // ... data to create a Wp_commentmeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_commentmeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_commentmetaUpsertArgs>(args: SelectSubset<T, wp_commentmetaUpsertArgs<ExtArgs>>): Prisma__wp_commentmetaClient<$Result.GetResult<Prisma.$wp_commentmetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_commentmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaCountArgs} args - Arguments to filter Wp_commentmetas to count.
     * @example
     * // Count the number of Wp_commentmetas
     * const count = await prisma.wp_commentmeta.count({
     *   where: {
     *     // ... the filter for the Wp_commentmetas we want to count
     *   }
     * })
    **/
    count<T extends wp_commentmetaCountArgs>(
      args?: Subset<T, wp_commentmetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_commentmetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_commentmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_commentmetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_commentmetaAggregateArgs>(args: Subset<T, Wp_commentmetaAggregateArgs>): Prisma.PrismaPromise<GetWp_commentmetaAggregateType<T>>

    /**
     * Group by Wp_commentmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentmetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_commentmetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_commentmetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_commentmetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_commentmetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_commentmetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_commentmeta model
   */
  readonly fields: wp_commentmetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_commentmeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_commentmetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_commentmeta model
   */
  interface wp_commentmetaFieldRefs {
    readonly meta_id: FieldRef<"wp_commentmeta", 'BigInt'>
    readonly comment_id: FieldRef<"wp_commentmeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_commentmeta", 'String'>
    readonly meta_value: FieldRef<"wp_commentmeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_commentmeta findUnique
   */
  export type wp_commentmetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta findUniqueOrThrow
   */
  export type wp_commentmetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta findFirst
   */
  export type wp_commentmetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_commentmetas.
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_commentmetas.
     */
    distinct?: Wp_commentmetaScalarFieldEnum | Wp_commentmetaScalarFieldEnum[]
  }

  /**
   * wp_commentmeta findFirstOrThrow
   */
  export type wp_commentmetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmeta to fetch.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_commentmetas.
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_commentmetas.
     */
    distinct?: Wp_commentmetaScalarFieldEnum | Wp_commentmetaScalarFieldEnum[]
  }

  /**
   * wp_commentmeta findMany
   */
  export type wp_commentmetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_commentmetas to fetch.
     */
    where?: wp_commentmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_commentmetas to fetch.
     */
    orderBy?: wp_commentmetaOrderByWithRelationInput | wp_commentmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_commentmetas.
     */
    cursor?: wp_commentmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_commentmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_commentmetas.
     */
    skip?: number
    distinct?: Wp_commentmetaScalarFieldEnum | Wp_commentmetaScalarFieldEnum[]
  }

  /**
   * wp_commentmeta create
   */
  export type wp_commentmetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_commentmeta.
     */
    data?: XOR<wp_commentmetaCreateInput, wp_commentmetaUncheckedCreateInput>
  }

  /**
   * wp_commentmeta createMany
   */
  export type wp_commentmetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_commentmetas.
     */
    data: wp_commentmetaCreateManyInput | wp_commentmetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_commentmeta update
   */
  export type wp_commentmetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_commentmeta.
     */
    data: XOR<wp_commentmetaUpdateInput, wp_commentmetaUncheckedUpdateInput>
    /**
     * Choose, which wp_commentmeta to update.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta updateMany
   */
  export type wp_commentmetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_commentmetas.
     */
    data: XOR<wp_commentmetaUpdateManyMutationInput, wp_commentmetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_commentmetas to update
     */
    where?: wp_commentmetaWhereInput
    /**
     * Limit how many wp_commentmetas to update.
     */
    limit?: number
  }

  /**
   * wp_commentmeta upsert
   */
  export type wp_commentmetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_commentmeta to update in case it exists.
     */
    where: wp_commentmetaWhereUniqueInput
    /**
     * In case the wp_commentmeta found by the `where` argument doesn't exist, create a new wp_commentmeta with this data.
     */
    create: XOR<wp_commentmetaCreateInput, wp_commentmetaUncheckedCreateInput>
    /**
     * In case the wp_commentmeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_commentmetaUpdateInput, wp_commentmetaUncheckedUpdateInput>
  }

  /**
   * wp_commentmeta delete
   */
  export type wp_commentmetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
    /**
     * Filter which wp_commentmeta to delete.
     */
    where: wp_commentmetaWhereUniqueInput
  }

  /**
   * wp_commentmeta deleteMany
   */
  export type wp_commentmetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_commentmetas to delete
     */
    where?: wp_commentmetaWhereInput
    /**
     * Limit how many wp_commentmetas to delete.
     */
    limit?: number
  }

  /**
   * wp_commentmeta without action
   */
  export type wp_commentmetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_commentmeta
     */
    select?: wp_commentmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_commentmeta
     */
    omit?: wp_commentmetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_comments
   */

  export type AggregateWp_comments = {
    _count: Wp_commentsCountAggregateOutputType | null
    _avg: Wp_commentsAvgAggregateOutputType | null
    _sum: Wp_commentsSumAggregateOutputType | null
    _min: Wp_commentsMinAggregateOutputType | null
    _max: Wp_commentsMaxAggregateOutputType | null
  }

  export type Wp_commentsAvgAggregateOutputType = {
    comment_ID: number | null
    comment_post_ID: number | null
    comment_karma: number | null
    comment_parent: number | null
    user_id: number | null
  }

  export type Wp_commentsSumAggregateOutputType = {
    comment_ID: bigint | null
    comment_post_ID: bigint | null
    comment_karma: number | null
    comment_parent: bigint | null
    user_id: bigint | null
  }

  export type Wp_commentsMinAggregateOutputType = {
    comment_ID: bigint | null
    comment_post_ID: bigint | null
    comment_author: string | null
    comment_author_email: string | null
    comment_author_url: string | null
    comment_author_IP: string | null
    comment_date: Date | null
    comment_date_gmt: Date | null
    comment_content: string | null
    comment_karma: number | null
    comment_approved: string | null
    comment_agent: string | null
    comment_type: string | null
    comment_parent: bigint | null
    user_id: bigint | null
  }

  export type Wp_commentsMaxAggregateOutputType = {
    comment_ID: bigint | null
    comment_post_ID: bigint | null
    comment_author: string | null
    comment_author_email: string | null
    comment_author_url: string | null
    comment_author_IP: string | null
    comment_date: Date | null
    comment_date_gmt: Date | null
    comment_content: string | null
    comment_karma: number | null
    comment_approved: string | null
    comment_agent: string | null
    comment_type: string | null
    comment_parent: bigint | null
    user_id: bigint | null
  }

  export type Wp_commentsCountAggregateOutputType = {
    comment_ID: number
    comment_post_ID: number
    comment_author: number
    comment_author_email: number
    comment_author_url: number
    comment_author_IP: number
    comment_date: number
    comment_date_gmt: number
    comment_content: number
    comment_karma: number
    comment_approved: number
    comment_agent: number
    comment_type: number
    comment_parent: number
    user_id: number
    _all: number
  }


  export type Wp_commentsAvgAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_karma?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsSumAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_karma?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsMinAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_author?: true
    comment_author_email?: true
    comment_author_url?: true
    comment_author_IP?: true
    comment_date?: true
    comment_date_gmt?: true
    comment_content?: true
    comment_karma?: true
    comment_approved?: true
    comment_agent?: true
    comment_type?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsMaxAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_author?: true
    comment_author_email?: true
    comment_author_url?: true
    comment_author_IP?: true
    comment_date?: true
    comment_date_gmt?: true
    comment_content?: true
    comment_karma?: true
    comment_approved?: true
    comment_agent?: true
    comment_type?: true
    comment_parent?: true
    user_id?: true
  }

  export type Wp_commentsCountAggregateInputType = {
    comment_ID?: true
    comment_post_ID?: true
    comment_author?: true
    comment_author_email?: true
    comment_author_url?: true
    comment_author_IP?: true
    comment_date?: true
    comment_date_gmt?: true
    comment_content?: true
    comment_karma?: true
    comment_approved?: true
    comment_agent?: true
    comment_type?: true
    comment_parent?: true
    user_id?: true
    _all?: true
  }

  export type Wp_commentsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_comments to aggregate.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_comments
    **/
    _count?: true | Wp_commentsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_commentsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_commentsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_commentsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_commentsMaxAggregateInputType
  }

  export type GetWp_commentsAggregateType<T extends Wp_commentsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_comments]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_comments[P]>
      : GetScalarType<T[P], AggregateWp_comments[P]>
  }




  export type wp_commentsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_commentsWhereInput
    orderBy?: wp_commentsOrderByWithAggregationInput | wp_commentsOrderByWithAggregationInput[]
    by: Wp_commentsScalarFieldEnum[] | Wp_commentsScalarFieldEnum
    having?: wp_commentsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_commentsCountAggregateInputType | true
    _avg?: Wp_commentsAvgAggregateInputType
    _sum?: Wp_commentsSumAggregateInputType
    _min?: Wp_commentsMinAggregateInputType
    _max?: Wp_commentsMaxAggregateInputType
  }

  export type Wp_commentsGroupByOutputType = {
    comment_ID: bigint
    comment_post_ID: bigint
    comment_author: string
    comment_author_email: string
    comment_author_url: string
    comment_author_IP: string
    comment_date: Date
    comment_date_gmt: Date
    comment_content: string
    comment_karma: number
    comment_approved: string
    comment_agent: string
    comment_type: string
    comment_parent: bigint
    user_id: bigint
    _count: Wp_commentsCountAggregateOutputType | null
    _avg: Wp_commentsAvgAggregateOutputType | null
    _sum: Wp_commentsSumAggregateOutputType | null
    _min: Wp_commentsMinAggregateOutputType | null
    _max: Wp_commentsMaxAggregateOutputType | null
  }

  type GetWp_commentsGroupByPayload<T extends wp_commentsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_commentsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_commentsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_commentsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_commentsGroupByOutputType[P]>
        }
      >
    >


  export type wp_commentsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    comment_ID?: boolean
    comment_post_ID?: boolean
    comment_author?: boolean
    comment_author_email?: boolean
    comment_author_url?: boolean
    comment_author_IP?: boolean
    comment_date?: boolean
    comment_date_gmt?: boolean
    comment_content?: boolean
    comment_karma?: boolean
    comment_approved?: boolean
    comment_agent?: boolean
    comment_type?: boolean
    comment_parent?: boolean
    user_id?: boolean
  }, ExtArgs["result"]["wp_comments"]>



  export type wp_commentsSelectScalar = {
    comment_ID?: boolean
    comment_post_ID?: boolean
    comment_author?: boolean
    comment_author_email?: boolean
    comment_author_url?: boolean
    comment_author_IP?: boolean
    comment_date?: boolean
    comment_date_gmt?: boolean
    comment_content?: boolean
    comment_karma?: boolean
    comment_approved?: boolean
    comment_agent?: boolean
    comment_type?: boolean
    comment_parent?: boolean
    user_id?: boolean
  }

  export type wp_commentsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"comment_ID" | "comment_post_ID" | "comment_author" | "comment_author_email" | "comment_author_url" | "comment_author_IP" | "comment_date" | "comment_date_gmt" | "comment_content" | "comment_karma" | "comment_approved" | "comment_agent" | "comment_type" | "comment_parent" | "user_id", ExtArgs["result"]["wp_comments"]>

  export type $wp_commentsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_comments"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      comment_ID: bigint
      comment_post_ID: bigint
      comment_author: string
      comment_author_email: string
      comment_author_url: string
      comment_author_IP: string
      comment_date: Date
      comment_date_gmt: Date
      comment_content: string
      comment_karma: number
      comment_approved: string
      comment_agent: string
      comment_type: string
      comment_parent: bigint
      user_id: bigint
    }, ExtArgs["result"]["wp_comments"]>
    composites: {}
  }

  type wp_commentsGetPayload<S extends boolean | null | undefined | wp_commentsDefaultArgs> = $Result.GetResult<Prisma.$wp_commentsPayload, S>

  type wp_commentsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_commentsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_commentsCountAggregateInputType | true
    }

  export interface wp_commentsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_comments'], meta: { name: 'wp_comments' } }
    /**
     * Find zero or one Wp_comments that matches the filter.
     * @param {wp_commentsFindUniqueArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_commentsFindUniqueArgs>(args: SelectSubset<T, wp_commentsFindUniqueArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_comments that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_commentsFindUniqueOrThrowArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_commentsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_commentsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsFindFirstArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_commentsFindFirstArgs>(args?: SelectSubset<T, wp_commentsFindFirstArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_comments that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsFindFirstOrThrowArgs} args - Arguments to find a Wp_comments
     * @example
     * // Get one Wp_comments
     * const wp_comments = await prisma.wp_comments.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_commentsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_commentsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_comments that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_comments
     * const wp_comments = await prisma.wp_comments.findMany()
     * 
     * // Get first 10 Wp_comments
     * const wp_comments = await prisma.wp_comments.findMany({ take: 10 })
     * 
     * // Only select the `comment_ID`
     * const wp_commentsWithComment_IDOnly = await prisma.wp_comments.findMany({ select: { comment_ID: true } })
     * 
     */
    findMany<T extends wp_commentsFindManyArgs>(args?: SelectSubset<T, wp_commentsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_comments.
     * @param {wp_commentsCreateArgs} args - Arguments to create a Wp_comments.
     * @example
     * // Create one Wp_comments
     * const Wp_comments = await prisma.wp_comments.create({
     *   data: {
     *     // ... data to create a Wp_comments
     *   }
     * })
     * 
     */
    create<T extends wp_commentsCreateArgs>(args: SelectSubset<T, wp_commentsCreateArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_comments.
     * @param {wp_commentsCreateManyArgs} args - Arguments to create many Wp_comments.
     * @example
     * // Create many Wp_comments
     * const wp_comments = await prisma.wp_comments.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_commentsCreateManyArgs>(args?: SelectSubset<T, wp_commentsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_comments.
     * @param {wp_commentsDeleteArgs} args - Arguments to delete one Wp_comments.
     * @example
     * // Delete one Wp_comments
     * const Wp_comments = await prisma.wp_comments.delete({
     *   where: {
     *     // ... filter to delete one Wp_comments
     *   }
     * })
     * 
     */
    delete<T extends wp_commentsDeleteArgs>(args: SelectSubset<T, wp_commentsDeleteArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_comments.
     * @param {wp_commentsUpdateArgs} args - Arguments to update one Wp_comments.
     * @example
     * // Update one Wp_comments
     * const wp_comments = await prisma.wp_comments.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_commentsUpdateArgs>(args: SelectSubset<T, wp_commentsUpdateArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_comments.
     * @param {wp_commentsDeleteManyArgs} args - Arguments to filter Wp_comments to delete.
     * @example
     * // Delete a few Wp_comments
     * const { count } = await prisma.wp_comments.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_commentsDeleteManyArgs>(args?: SelectSubset<T, wp_commentsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_comments
     * const wp_comments = await prisma.wp_comments.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_commentsUpdateManyArgs>(args: SelectSubset<T, wp_commentsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_comments.
     * @param {wp_commentsUpsertArgs} args - Arguments to update or create a Wp_comments.
     * @example
     * // Update or create a Wp_comments
     * const wp_comments = await prisma.wp_comments.upsert({
     *   create: {
     *     // ... data to create a Wp_comments
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_comments we want to update
     *   }
     * })
     */
    upsert<T extends wp_commentsUpsertArgs>(args: SelectSubset<T, wp_commentsUpsertArgs<ExtArgs>>): Prisma__wp_commentsClient<$Result.GetResult<Prisma.$wp_commentsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsCountArgs} args - Arguments to filter Wp_comments to count.
     * @example
     * // Count the number of Wp_comments
     * const count = await prisma.wp_comments.count({
     *   where: {
     *     // ... the filter for the Wp_comments we want to count
     *   }
     * })
    **/
    count<T extends wp_commentsCountArgs>(
      args?: Subset<T, wp_commentsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_commentsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_commentsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_commentsAggregateArgs>(args: Subset<T, Wp_commentsAggregateArgs>): Prisma.PrismaPromise<GetWp_commentsAggregateType<T>>

    /**
     * Group by Wp_comments.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_commentsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_commentsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_commentsGroupByArgs['orderBy'] }
        : { orderBy?: wp_commentsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_commentsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_commentsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_comments model
   */
  readonly fields: wp_commentsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_comments.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_commentsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_comments model
   */
  interface wp_commentsFieldRefs {
    readonly comment_ID: FieldRef<"wp_comments", 'BigInt'>
    readonly comment_post_ID: FieldRef<"wp_comments", 'BigInt'>
    readonly comment_author: FieldRef<"wp_comments", 'String'>
    readonly comment_author_email: FieldRef<"wp_comments", 'String'>
    readonly comment_author_url: FieldRef<"wp_comments", 'String'>
    readonly comment_author_IP: FieldRef<"wp_comments", 'String'>
    readonly comment_date: FieldRef<"wp_comments", 'DateTime'>
    readonly comment_date_gmt: FieldRef<"wp_comments", 'DateTime'>
    readonly comment_content: FieldRef<"wp_comments", 'String'>
    readonly comment_karma: FieldRef<"wp_comments", 'Int'>
    readonly comment_approved: FieldRef<"wp_comments", 'String'>
    readonly comment_agent: FieldRef<"wp_comments", 'String'>
    readonly comment_type: FieldRef<"wp_comments", 'String'>
    readonly comment_parent: FieldRef<"wp_comments", 'BigInt'>
    readonly user_id: FieldRef<"wp_comments", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_comments findUnique
   */
  export type wp_commentsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments findUniqueOrThrow
   */
  export type wp_commentsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments findFirst
   */
  export type wp_commentsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_comments.
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_comments.
     */
    distinct?: Wp_commentsScalarFieldEnum | Wp_commentsScalarFieldEnum[]
  }

  /**
   * wp_comments findFirstOrThrow
   */
  export type wp_commentsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_comments.
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_comments.
     */
    distinct?: Wp_commentsScalarFieldEnum | Wp_commentsScalarFieldEnum[]
  }

  /**
   * wp_comments findMany
   */
  export type wp_commentsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter, which wp_comments to fetch.
     */
    where?: wp_commentsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_comments to fetch.
     */
    orderBy?: wp_commentsOrderByWithRelationInput | wp_commentsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_comments.
     */
    cursor?: wp_commentsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_comments from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_comments.
     */
    skip?: number
    distinct?: Wp_commentsScalarFieldEnum | Wp_commentsScalarFieldEnum[]
  }

  /**
   * wp_comments create
   */
  export type wp_commentsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_comments.
     */
    data: XOR<wp_commentsCreateInput, wp_commentsUncheckedCreateInput>
  }

  /**
   * wp_comments createMany
   */
  export type wp_commentsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_comments.
     */
    data: wp_commentsCreateManyInput | wp_commentsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_comments update
   */
  export type wp_commentsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_comments.
     */
    data: XOR<wp_commentsUpdateInput, wp_commentsUncheckedUpdateInput>
    /**
     * Choose, which wp_comments to update.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments updateMany
   */
  export type wp_commentsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_comments.
     */
    data: XOR<wp_commentsUpdateManyMutationInput, wp_commentsUncheckedUpdateManyInput>
    /**
     * Filter which wp_comments to update
     */
    where?: wp_commentsWhereInput
    /**
     * Limit how many wp_comments to update.
     */
    limit?: number
  }

  /**
   * wp_comments upsert
   */
  export type wp_commentsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_comments to update in case it exists.
     */
    where: wp_commentsWhereUniqueInput
    /**
     * In case the wp_comments found by the `where` argument doesn't exist, create a new wp_comments with this data.
     */
    create: XOR<wp_commentsCreateInput, wp_commentsUncheckedCreateInput>
    /**
     * In case the wp_comments was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_commentsUpdateInput, wp_commentsUncheckedUpdateInput>
  }

  /**
   * wp_comments delete
   */
  export type wp_commentsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
    /**
     * Filter which wp_comments to delete.
     */
    where: wp_commentsWhereUniqueInput
  }

  /**
   * wp_comments deleteMany
   */
  export type wp_commentsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_comments to delete
     */
    where?: wp_commentsWhereInput
    /**
     * Limit how many wp_comments to delete.
     */
    limit?: number
  }

  /**
   * wp_comments without action
   */
  export type wp_commentsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_comments
     */
    select?: wp_commentsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_comments
     */
    omit?: wp_commentsOmit<ExtArgs> | null
  }


  /**
   * Model wp_cpmp_player
   */

  export type AggregateWp_cpmp_player = {
    _count: Wp_cpmp_playerCountAggregateOutputType | null
    _avg: Wp_cpmp_playerAvgAggregateOutputType | null
    _sum: Wp_cpmp_playerSumAggregateOutputType | null
    _min: Wp_cpmp_playerMinAggregateOutputType | null
    _max: Wp_cpmp_playerMaxAggregateOutputType | null
  }

  export type Wp_cpmp_playerAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_cpmp_playerSumAggregateOutputType = {
    id: number | null
  }

  export type Wp_cpmp_playerMinAggregateOutputType = {
    id: number | null
    player_name: string | null
    config: string | null
    playlist: string | null
  }

  export type Wp_cpmp_playerMaxAggregateOutputType = {
    id: number | null
    player_name: string | null
    config: string | null
    playlist: string | null
  }

  export type Wp_cpmp_playerCountAggregateOutputType = {
    id: number
    player_name: number
    config: number
    playlist: number
    _all: number
  }


  export type Wp_cpmp_playerAvgAggregateInputType = {
    id?: true
  }

  export type Wp_cpmp_playerSumAggregateInputType = {
    id?: true
  }

  export type Wp_cpmp_playerMinAggregateInputType = {
    id?: true
    player_name?: true
    config?: true
    playlist?: true
  }

  export type Wp_cpmp_playerMaxAggregateInputType = {
    id?: true
    player_name?: true
    config?: true
    playlist?: true
  }

  export type Wp_cpmp_playerCountAggregateInputType = {
    id?: true
    player_name?: true
    config?: true
    playlist?: true
    _all?: true
  }

  export type Wp_cpmp_playerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_cpmp_player to aggregate.
     */
    where?: wp_cpmp_playerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_cpmp_players to fetch.
     */
    orderBy?: wp_cpmp_playerOrderByWithRelationInput | wp_cpmp_playerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_cpmp_playerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_cpmp_players from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_cpmp_players.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_cpmp_players
    **/
    _count?: true | Wp_cpmp_playerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_cpmp_playerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_cpmp_playerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_cpmp_playerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_cpmp_playerMaxAggregateInputType
  }

  export type GetWp_cpmp_playerAggregateType<T extends Wp_cpmp_playerAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_cpmp_player]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_cpmp_player[P]>
      : GetScalarType<T[P], AggregateWp_cpmp_player[P]>
  }




  export type wp_cpmp_playerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_cpmp_playerWhereInput
    orderBy?: wp_cpmp_playerOrderByWithAggregationInput | wp_cpmp_playerOrderByWithAggregationInput[]
    by: Wp_cpmp_playerScalarFieldEnum[] | Wp_cpmp_playerScalarFieldEnum
    having?: wp_cpmp_playerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_cpmp_playerCountAggregateInputType | true
    _avg?: Wp_cpmp_playerAvgAggregateInputType
    _sum?: Wp_cpmp_playerSumAggregateInputType
    _min?: Wp_cpmp_playerMinAggregateInputType
    _max?: Wp_cpmp_playerMaxAggregateInputType
  }

  export type Wp_cpmp_playerGroupByOutputType = {
    id: number
    player_name: string
    config: string | null
    playlist: string | null
    _count: Wp_cpmp_playerCountAggregateOutputType | null
    _avg: Wp_cpmp_playerAvgAggregateOutputType | null
    _sum: Wp_cpmp_playerSumAggregateOutputType | null
    _min: Wp_cpmp_playerMinAggregateOutputType | null
    _max: Wp_cpmp_playerMaxAggregateOutputType | null
  }

  type GetWp_cpmp_playerGroupByPayload<T extends wp_cpmp_playerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_cpmp_playerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_cpmp_playerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_cpmp_playerGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_cpmp_playerGroupByOutputType[P]>
        }
      >
    >


  export type wp_cpmp_playerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    player_name?: boolean
    config?: boolean
    playlist?: boolean
  }, ExtArgs["result"]["wp_cpmp_player"]>



  export type wp_cpmp_playerSelectScalar = {
    id?: boolean
    player_name?: boolean
    config?: boolean
    playlist?: boolean
  }

  export type wp_cpmp_playerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "player_name" | "config" | "playlist", ExtArgs["result"]["wp_cpmp_player"]>

  export type $wp_cpmp_playerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_cpmp_player"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      player_name: string
      config: string | null
      playlist: string | null
    }, ExtArgs["result"]["wp_cpmp_player"]>
    composites: {}
  }

  type wp_cpmp_playerGetPayload<S extends boolean | null | undefined | wp_cpmp_playerDefaultArgs> = $Result.GetResult<Prisma.$wp_cpmp_playerPayload, S>

  type wp_cpmp_playerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_cpmp_playerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_cpmp_playerCountAggregateInputType | true
    }

  export interface wp_cpmp_playerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_cpmp_player'], meta: { name: 'wp_cpmp_player' } }
    /**
     * Find zero or one Wp_cpmp_player that matches the filter.
     * @param {wp_cpmp_playerFindUniqueArgs} args - Arguments to find a Wp_cpmp_player
     * @example
     * // Get one Wp_cpmp_player
     * const wp_cpmp_player = await prisma.wp_cpmp_player.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_cpmp_playerFindUniqueArgs>(args: SelectSubset<T, wp_cpmp_playerFindUniqueArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_cpmp_player that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_cpmp_playerFindUniqueOrThrowArgs} args - Arguments to find a Wp_cpmp_player
     * @example
     * // Get one Wp_cpmp_player
     * const wp_cpmp_player = await prisma.wp_cpmp_player.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_cpmp_playerFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_cpmp_playerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_cpmp_player that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_cpmp_playerFindFirstArgs} args - Arguments to find a Wp_cpmp_player
     * @example
     * // Get one Wp_cpmp_player
     * const wp_cpmp_player = await prisma.wp_cpmp_player.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_cpmp_playerFindFirstArgs>(args?: SelectSubset<T, wp_cpmp_playerFindFirstArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_cpmp_player that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_cpmp_playerFindFirstOrThrowArgs} args - Arguments to find a Wp_cpmp_player
     * @example
     * // Get one Wp_cpmp_player
     * const wp_cpmp_player = await prisma.wp_cpmp_player.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_cpmp_playerFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_cpmp_playerFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_cpmp_players that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_cpmp_playerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_cpmp_players
     * const wp_cpmp_players = await prisma.wp_cpmp_player.findMany()
     * 
     * // Get first 10 Wp_cpmp_players
     * const wp_cpmp_players = await prisma.wp_cpmp_player.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_cpmp_playerWithIdOnly = await prisma.wp_cpmp_player.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_cpmp_playerFindManyArgs>(args?: SelectSubset<T, wp_cpmp_playerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_cpmp_player.
     * @param {wp_cpmp_playerCreateArgs} args - Arguments to create a Wp_cpmp_player.
     * @example
     * // Create one Wp_cpmp_player
     * const Wp_cpmp_player = await prisma.wp_cpmp_player.create({
     *   data: {
     *     // ... data to create a Wp_cpmp_player
     *   }
     * })
     * 
     */
    create<T extends wp_cpmp_playerCreateArgs>(args: SelectSubset<T, wp_cpmp_playerCreateArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_cpmp_players.
     * @param {wp_cpmp_playerCreateManyArgs} args - Arguments to create many Wp_cpmp_players.
     * @example
     * // Create many Wp_cpmp_players
     * const wp_cpmp_player = await prisma.wp_cpmp_player.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_cpmp_playerCreateManyArgs>(args?: SelectSubset<T, wp_cpmp_playerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_cpmp_player.
     * @param {wp_cpmp_playerDeleteArgs} args - Arguments to delete one Wp_cpmp_player.
     * @example
     * // Delete one Wp_cpmp_player
     * const Wp_cpmp_player = await prisma.wp_cpmp_player.delete({
     *   where: {
     *     // ... filter to delete one Wp_cpmp_player
     *   }
     * })
     * 
     */
    delete<T extends wp_cpmp_playerDeleteArgs>(args: SelectSubset<T, wp_cpmp_playerDeleteArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_cpmp_player.
     * @param {wp_cpmp_playerUpdateArgs} args - Arguments to update one Wp_cpmp_player.
     * @example
     * // Update one Wp_cpmp_player
     * const wp_cpmp_player = await prisma.wp_cpmp_player.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_cpmp_playerUpdateArgs>(args: SelectSubset<T, wp_cpmp_playerUpdateArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_cpmp_players.
     * @param {wp_cpmp_playerDeleteManyArgs} args - Arguments to filter Wp_cpmp_players to delete.
     * @example
     * // Delete a few Wp_cpmp_players
     * const { count } = await prisma.wp_cpmp_player.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_cpmp_playerDeleteManyArgs>(args?: SelectSubset<T, wp_cpmp_playerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_cpmp_players.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_cpmp_playerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_cpmp_players
     * const wp_cpmp_player = await prisma.wp_cpmp_player.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_cpmp_playerUpdateManyArgs>(args: SelectSubset<T, wp_cpmp_playerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_cpmp_player.
     * @param {wp_cpmp_playerUpsertArgs} args - Arguments to update or create a Wp_cpmp_player.
     * @example
     * // Update or create a Wp_cpmp_player
     * const wp_cpmp_player = await prisma.wp_cpmp_player.upsert({
     *   create: {
     *     // ... data to create a Wp_cpmp_player
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_cpmp_player we want to update
     *   }
     * })
     */
    upsert<T extends wp_cpmp_playerUpsertArgs>(args: SelectSubset<T, wp_cpmp_playerUpsertArgs<ExtArgs>>): Prisma__wp_cpmp_playerClient<$Result.GetResult<Prisma.$wp_cpmp_playerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_cpmp_players.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_cpmp_playerCountArgs} args - Arguments to filter Wp_cpmp_players to count.
     * @example
     * // Count the number of Wp_cpmp_players
     * const count = await prisma.wp_cpmp_player.count({
     *   where: {
     *     // ... the filter for the Wp_cpmp_players we want to count
     *   }
     * })
    **/
    count<T extends wp_cpmp_playerCountArgs>(
      args?: Subset<T, wp_cpmp_playerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_cpmp_playerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_cpmp_player.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_cpmp_playerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_cpmp_playerAggregateArgs>(args: Subset<T, Wp_cpmp_playerAggregateArgs>): Prisma.PrismaPromise<GetWp_cpmp_playerAggregateType<T>>

    /**
     * Group by Wp_cpmp_player.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_cpmp_playerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_cpmp_playerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_cpmp_playerGroupByArgs['orderBy'] }
        : { orderBy?: wp_cpmp_playerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_cpmp_playerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_cpmp_playerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_cpmp_player model
   */
  readonly fields: wp_cpmp_playerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_cpmp_player.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_cpmp_playerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_cpmp_player model
   */
  interface wp_cpmp_playerFieldRefs {
    readonly id: FieldRef<"wp_cpmp_player", 'Int'>
    readonly player_name: FieldRef<"wp_cpmp_player", 'String'>
    readonly config: FieldRef<"wp_cpmp_player", 'String'>
    readonly playlist: FieldRef<"wp_cpmp_player", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_cpmp_player findUnique
   */
  export type wp_cpmp_playerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * Filter, which wp_cpmp_player to fetch.
     */
    where: wp_cpmp_playerWhereUniqueInput
  }

  /**
   * wp_cpmp_player findUniqueOrThrow
   */
  export type wp_cpmp_playerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * Filter, which wp_cpmp_player to fetch.
     */
    where: wp_cpmp_playerWhereUniqueInput
  }

  /**
   * wp_cpmp_player findFirst
   */
  export type wp_cpmp_playerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * Filter, which wp_cpmp_player to fetch.
     */
    where?: wp_cpmp_playerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_cpmp_players to fetch.
     */
    orderBy?: wp_cpmp_playerOrderByWithRelationInput | wp_cpmp_playerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_cpmp_players.
     */
    cursor?: wp_cpmp_playerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_cpmp_players from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_cpmp_players.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_cpmp_players.
     */
    distinct?: Wp_cpmp_playerScalarFieldEnum | Wp_cpmp_playerScalarFieldEnum[]
  }

  /**
   * wp_cpmp_player findFirstOrThrow
   */
  export type wp_cpmp_playerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * Filter, which wp_cpmp_player to fetch.
     */
    where?: wp_cpmp_playerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_cpmp_players to fetch.
     */
    orderBy?: wp_cpmp_playerOrderByWithRelationInput | wp_cpmp_playerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_cpmp_players.
     */
    cursor?: wp_cpmp_playerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_cpmp_players from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_cpmp_players.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_cpmp_players.
     */
    distinct?: Wp_cpmp_playerScalarFieldEnum | Wp_cpmp_playerScalarFieldEnum[]
  }

  /**
   * wp_cpmp_player findMany
   */
  export type wp_cpmp_playerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * Filter, which wp_cpmp_players to fetch.
     */
    where?: wp_cpmp_playerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_cpmp_players to fetch.
     */
    orderBy?: wp_cpmp_playerOrderByWithRelationInput | wp_cpmp_playerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_cpmp_players.
     */
    cursor?: wp_cpmp_playerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_cpmp_players from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_cpmp_players.
     */
    skip?: number
    distinct?: Wp_cpmp_playerScalarFieldEnum | Wp_cpmp_playerScalarFieldEnum[]
  }

  /**
   * wp_cpmp_player create
   */
  export type wp_cpmp_playerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_cpmp_player.
     */
    data?: XOR<wp_cpmp_playerCreateInput, wp_cpmp_playerUncheckedCreateInput>
  }

  /**
   * wp_cpmp_player createMany
   */
  export type wp_cpmp_playerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_cpmp_players.
     */
    data: wp_cpmp_playerCreateManyInput | wp_cpmp_playerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_cpmp_player update
   */
  export type wp_cpmp_playerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_cpmp_player.
     */
    data: XOR<wp_cpmp_playerUpdateInput, wp_cpmp_playerUncheckedUpdateInput>
    /**
     * Choose, which wp_cpmp_player to update.
     */
    where: wp_cpmp_playerWhereUniqueInput
  }

  /**
   * wp_cpmp_player updateMany
   */
  export type wp_cpmp_playerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_cpmp_players.
     */
    data: XOR<wp_cpmp_playerUpdateManyMutationInput, wp_cpmp_playerUncheckedUpdateManyInput>
    /**
     * Filter which wp_cpmp_players to update
     */
    where?: wp_cpmp_playerWhereInput
    /**
     * Limit how many wp_cpmp_players to update.
     */
    limit?: number
  }

  /**
   * wp_cpmp_player upsert
   */
  export type wp_cpmp_playerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_cpmp_player to update in case it exists.
     */
    where: wp_cpmp_playerWhereUniqueInput
    /**
     * In case the wp_cpmp_player found by the `where` argument doesn't exist, create a new wp_cpmp_player with this data.
     */
    create: XOR<wp_cpmp_playerCreateInput, wp_cpmp_playerUncheckedCreateInput>
    /**
     * In case the wp_cpmp_player was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_cpmp_playerUpdateInput, wp_cpmp_playerUncheckedUpdateInput>
  }

  /**
   * wp_cpmp_player delete
   */
  export type wp_cpmp_playerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
    /**
     * Filter which wp_cpmp_player to delete.
     */
    where: wp_cpmp_playerWhereUniqueInput
  }

  /**
   * wp_cpmp_player deleteMany
   */
  export type wp_cpmp_playerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_cpmp_players to delete
     */
    where?: wp_cpmp_playerWhereInput
    /**
     * Limit how many wp_cpmp_players to delete.
     */
    limit?: number
  }

  /**
   * wp_cpmp_player without action
   */
  export type wp_cpmp_playerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_cpmp_player
     */
    select?: wp_cpmp_playerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_cpmp_player
     */
    omit?: wp_cpmp_playerOmit<ExtArgs> | null
  }


  /**
   * Model wp_e_events
   */

  export type AggregateWp_e_events = {
    _count: Wp_e_eventsCountAggregateOutputType | null
    _avg: Wp_e_eventsAvgAggregateOutputType | null
    _sum: Wp_e_eventsSumAggregateOutputType | null
    _min: Wp_e_eventsMinAggregateOutputType | null
    _max: Wp_e_eventsMaxAggregateOutputType | null
  }

  export type Wp_e_eventsAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_e_eventsSumAggregateOutputType = {
    id: bigint | null
  }

  export type Wp_e_eventsMinAggregateOutputType = {
    id: bigint | null
    event_data: string | null
    created_at: Date | null
  }

  export type Wp_e_eventsMaxAggregateOutputType = {
    id: bigint | null
    event_data: string | null
    created_at: Date | null
  }

  export type Wp_e_eventsCountAggregateOutputType = {
    id: number
    event_data: number
    created_at: number
    _all: number
  }


  export type Wp_e_eventsAvgAggregateInputType = {
    id?: true
  }

  export type Wp_e_eventsSumAggregateInputType = {
    id?: true
  }

  export type Wp_e_eventsMinAggregateInputType = {
    id?: true
    event_data?: true
    created_at?: true
  }

  export type Wp_e_eventsMaxAggregateInputType = {
    id?: true
    event_data?: true
    created_at?: true
  }

  export type Wp_e_eventsCountAggregateInputType = {
    id?: true
    event_data?: true
    created_at?: true
    _all?: true
  }

  export type Wp_e_eventsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_events to aggregate.
     */
    where?: wp_e_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_events to fetch.
     */
    orderBy?: wp_e_eventsOrderByWithRelationInput | wp_e_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_e_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_e_events
    **/
    _count?: true | Wp_e_eventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_e_eventsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_e_eventsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_e_eventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_e_eventsMaxAggregateInputType
  }

  export type GetWp_e_eventsAggregateType<T extends Wp_e_eventsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_e_events]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_e_events[P]>
      : GetScalarType<T[P], AggregateWp_e_events[P]>
  }




  export type wp_e_eventsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_e_eventsWhereInput
    orderBy?: wp_e_eventsOrderByWithAggregationInput | wp_e_eventsOrderByWithAggregationInput[]
    by: Wp_e_eventsScalarFieldEnum[] | Wp_e_eventsScalarFieldEnum
    having?: wp_e_eventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_e_eventsCountAggregateInputType | true
    _avg?: Wp_e_eventsAvgAggregateInputType
    _sum?: Wp_e_eventsSumAggregateInputType
    _min?: Wp_e_eventsMinAggregateInputType
    _max?: Wp_e_eventsMaxAggregateInputType
  }

  export type Wp_e_eventsGroupByOutputType = {
    id: bigint
    event_data: string | null
    created_at: Date
    _count: Wp_e_eventsCountAggregateOutputType | null
    _avg: Wp_e_eventsAvgAggregateOutputType | null
    _sum: Wp_e_eventsSumAggregateOutputType | null
    _min: Wp_e_eventsMinAggregateOutputType | null
    _max: Wp_e_eventsMaxAggregateOutputType | null
  }

  type GetWp_e_eventsGroupByPayload<T extends wp_e_eventsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_e_eventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_e_eventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_e_eventsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_e_eventsGroupByOutputType[P]>
        }
      >
    >


  export type wp_e_eventsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    event_data?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["wp_e_events"]>



  export type wp_e_eventsSelectScalar = {
    id?: boolean
    event_data?: boolean
    created_at?: boolean
  }

  export type wp_e_eventsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "event_data" | "created_at", ExtArgs["result"]["wp_e_events"]>

  export type $wp_e_eventsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_e_events"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      event_data: string | null
      created_at: Date
    }, ExtArgs["result"]["wp_e_events"]>
    composites: {}
  }

  type wp_e_eventsGetPayload<S extends boolean | null | undefined | wp_e_eventsDefaultArgs> = $Result.GetResult<Prisma.$wp_e_eventsPayload, S>

  type wp_e_eventsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_e_eventsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_e_eventsCountAggregateInputType | true
    }

  export interface wp_e_eventsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_e_events'], meta: { name: 'wp_e_events' } }
    /**
     * Find zero or one Wp_e_events that matches the filter.
     * @param {wp_e_eventsFindUniqueArgs} args - Arguments to find a Wp_e_events
     * @example
     * // Get one Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_e_eventsFindUniqueArgs>(args: SelectSubset<T, wp_e_eventsFindUniqueArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_e_events that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_e_eventsFindUniqueOrThrowArgs} args - Arguments to find a Wp_e_events
     * @example
     * // Get one Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_e_eventsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_e_eventsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_eventsFindFirstArgs} args - Arguments to find a Wp_e_events
     * @example
     * // Get one Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_e_eventsFindFirstArgs>(args?: SelectSubset<T, wp_e_eventsFindFirstArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_events that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_eventsFindFirstOrThrowArgs} args - Arguments to find a Wp_e_events
     * @example
     * // Get one Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_e_eventsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_e_eventsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_e_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_eventsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.findMany()
     * 
     * // Get first 10 Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_e_eventsWithIdOnly = await prisma.wp_e_events.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_e_eventsFindManyArgs>(args?: SelectSubset<T, wp_e_eventsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_e_events.
     * @param {wp_e_eventsCreateArgs} args - Arguments to create a Wp_e_events.
     * @example
     * // Create one Wp_e_events
     * const Wp_e_events = await prisma.wp_e_events.create({
     *   data: {
     *     // ... data to create a Wp_e_events
     *   }
     * })
     * 
     */
    create<T extends wp_e_eventsCreateArgs>(args: SelectSubset<T, wp_e_eventsCreateArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_e_events.
     * @param {wp_e_eventsCreateManyArgs} args - Arguments to create many Wp_e_events.
     * @example
     * // Create many Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_e_eventsCreateManyArgs>(args?: SelectSubset<T, wp_e_eventsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_e_events.
     * @param {wp_e_eventsDeleteArgs} args - Arguments to delete one Wp_e_events.
     * @example
     * // Delete one Wp_e_events
     * const Wp_e_events = await prisma.wp_e_events.delete({
     *   where: {
     *     // ... filter to delete one Wp_e_events
     *   }
     * })
     * 
     */
    delete<T extends wp_e_eventsDeleteArgs>(args: SelectSubset<T, wp_e_eventsDeleteArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_e_events.
     * @param {wp_e_eventsUpdateArgs} args - Arguments to update one Wp_e_events.
     * @example
     * // Update one Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_e_eventsUpdateArgs>(args: SelectSubset<T, wp_e_eventsUpdateArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_e_events.
     * @param {wp_e_eventsDeleteManyArgs} args - Arguments to filter Wp_e_events to delete.
     * @example
     * // Delete a few Wp_e_events
     * const { count } = await prisma.wp_e_events.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_e_eventsDeleteManyArgs>(args?: SelectSubset<T, wp_e_eventsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_e_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_eventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_e_eventsUpdateManyArgs>(args: SelectSubset<T, wp_e_eventsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_e_events.
     * @param {wp_e_eventsUpsertArgs} args - Arguments to update or create a Wp_e_events.
     * @example
     * // Update or create a Wp_e_events
     * const wp_e_events = await prisma.wp_e_events.upsert({
     *   create: {
     *     // ... data to create a Wp_e_events
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_e_events we want to update
     *   }
     * })
     */
    upsert<T extends wp_e_eventsUpsertArgs>(args: SelectSubset<T, wp_e_eventsUpsertArgs<ExtArgs>>): Prisma__wp_e_eventsClient<$Result.GetResult<Prisma.$wp_e_eventsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_e_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_eventsCountArgs} args - Arguments to filter Wp_e_events to count.
     * @example
     * // Count the number of Wp_e_events
     * const count = await prisma.wp_e_events.count({
     *   where: {
     *     // ... the filter for the Wp_e_events we want to count
     *   }
     * })
    **/
    count<T extends wp_e_eventsCountArgs>(
      args?: Subset<T, wp_e_eventsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_e_eventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_e_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_e_eventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_e_eventsAggregateArgs>(args: Subset<T, Wp_e_eventsAggregateArgs>): Prisma.PrismaPromise<GetWp_e_eventsAggregateType<T>>

    /**
     * Group by Wp_e_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_eventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_e_eventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_e_eventsGroupByArgs['orderBy'] }
        : { orderBy?: wp_e_eventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_e_eventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_e_eventsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_e_events model
   */
  readonly fields: wp_e_eventsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_e_events.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_e_eventsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_e_events model
   */
  interface wp_e_eventsFieldRefs {
    readonly id: FieldRef<"wp_e_events", 'BigInt'>
    readonly event_data: FieldRef<"wp_e_events", 'String'>
    readonly created_at: FieldRef<"wp_e_events", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_e_events findUnique
   */
  export type wp_e_eventsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_events to fetch.
     */
    where: wp_e_eventsWhereUniqueInput
  }

  /**
   * wp_e_events findUniqueOrThrow
   */
  export type wp_e_eventsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_events to fetch.
     */
    where: wp_e_eventsWhereUniqueInput
  }

  /**
   * wp_e_events findFirst
   */
  export type wp_e_eventsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_events to fetch.
     */
    where?: wp_e_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_events to fetch.
     */
    orderBy?: wp_e_eventsOrderByWithRelationInput | wp_e_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_events.
     */
    cursor?: wp_e_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_events.
     */
    distinct?: Wp_e_eventsScalarFieldEnum | Wp_e_eventsScalarFieldEnum[]
  }

  /**
   * wp_e_events findFirstOrThrow
   */
  export type wp_e_eventsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_events to fetch.
     */
    where?: wp_e_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_events to fetch.
     */
    orderBy?: wp_e_eventsOrderByWithRelationInput | wp_e_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_events.
     */
    cursor?: wp_e_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_events.
     */
    distinct?: Wp_e_eventsScalarFieldEnum | Wp_e_eventsScalarFieldEnum[]
  }

  /**
   * wp_e_events findMany
   */
  export type wp_e_eventsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_events to fetch.
     */
    where?: wp_e_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_events to fetch.
     */
    orderBy?: wp_e_eventsOrderByWithRelationInput | wp_e_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_e_events.
     */
    cursor?: wp_e_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_events.
     */
    skip?: number
    distinct?: Wp_e_eventsScalarFieldEnum | Wp_e_eventsScalarFieldEnum[]
  }

  /**
   * wp_e_events create
   */
  export type wp_e_eventsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_e_events.
     */
    data: XOR<wp_e_eventsCreateInput, wp_e_eventsUncheckedCreateInput>
  }

  /**
   * wp_e_events createMany
   */
  export type wp_e_eventsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_e_events.
     */
    data: wp_e_eventsCreateManyInput | wp_e_eventsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_e_events update
   */
  export type wp_e_eventsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_e_events.
     */
    data: XOR<wp_e_eventsUpdateInput, wp_e_eventsUncheckedUpdateInput>
    /**
     * Choose, which wp_e_events to update.
     */
    where: wp_e_eventsWhereUniqueInput
  }

  /**
   * wp_e_events updateMany
   */
  export type wp_e_eventsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_e_events.
     */
    data: XOR<wp_e_eventsUpdateManyMutationInput, wp_e_eventsUncheckedUpdateManyInput>
    /**
     * Filter which wp_e_events to update
     */
    where?: wp_e_eventsWhereInput
    /**
     * Limit how many wp_e_events to update.
     */
    limit?: number
  }

  /**
   * wp_e_events upsert
   */
  export type wp_e_eventsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_e_events to update in case it exists.
     */
    where: wp_e_eventsWhereUniqueInput
    /**
     * In case the wp_e_events found by the `where` argument doesn't exist, create a new wp_e_events with this data.
     */
    create: XOR<wp_e_eventsCreateInput, wp_e_eventsUncheckedCreateInput>
    /**
     * In case the wp_e_events was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_e_eventsUpdateInput, wp_e_eventsUncheckedUpdateInput>
  }

  /**
   * wp_e_events delete
   */
  export type wp_e_eventsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
    /**
     * Filter which wp_e_events to delete.
     */
    where: wp_e_eventsWhereUniqueInput
  }

  /**
   * wp_e_events deleteMany
   */
  export type wp_e_eventsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_events to delete
     */
    where?: wp_e_eventsWhereInput
    /**
     * Limit how many wp_e_events to delete.
     */
    limit?: number
  }

  /**
   * wp_e_events without action
   */
  export type wp_e_eventsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_events
     */
    select?: wp_e_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_events
     */
    omit?: wp_e_eventsOmit<ExtArgs> | null
  }


  /**
   * Model wp_e_notes
   */

  export type AggregateWp_e_notes = {
    _count: Wp_e_notesCountAggregateOutputType | null
    _avg: Wp_e_notesAvgAggregateOutputType | null
    _sum: Wp_e_notesSumAggregateOutputType | null
    _min: Wp_e_notesMinAggregateOutputType | null
    _max: Wp_e_notesMaxAggregateOutputType | null
  }

  export type Wp_e_notesAvgAggregateOutputType = {
    id: number | null
    route_post_id: number | null
    post_id: number | null
    parent_id: number | null
    author_id: number | null
  }

  export type Wp_e_notesSumAggregateOutputType = {
    id: bigint | null
    route_post_id: bigint | null
    post_id: bigint | null
    parent_id: bigint | null
    author_id: bigint | null
  }

  export type Wp_e_notesMinAggregateOutputType = {
    id: bigint | null
    route_url: string | null
    route_title: string | null
    route_post_id: bigint | null
    post_id: bigint | null
    element_id: string | null
    parent_id: bigint | null
    author_id: bigint | null
    author_display_name: string | null
    status: string | null
    position: string | null
    content: string | null
    is_resolved: boolean | null
    is_public: boolean | null
    last_activity_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_notesMaxAggregateOutputType = {
    id: bigint | null
    route_url: string | null
    route_title: string | null
    route_post_id: bigint | null
    post_id: bigint | null
    element_id: string | null
    parent_id: bigint | null
    author_id: bigint | null
    author_display_name: string | null
    status: string | null
    position: string | null
    content: string | null
    is_resolved: boolean | null
    is_public: boolean | null
    last_activity_at: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_notesCountAggregateOutputType = {
    id: number
    route_url: number
    route_title: number
    route_post_id: number
    post_id: number
    element_id: number
    parent_id: number
    author_id: number
    author_display_name: number
    status: number
    position: number
    content: number
    is_resolved: number
    is_public: number
    last_activity_at: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Wp_e_notesAvgAggregateInputType = {
    id?: true
    route_post_id?: true
    post_id?: true
    parent_id?: true
    author_id?: true
  }

  export type Wp_e_notesSumAggregateInputType = {
    id?: true
    route_post_id?: true
    post_id?: true
    parent_id?: true
    author_id?: true
  }

  export type Wp_e_notesMinAggregateInputType = {
    id?: true
    route_url?: true
    route_title?: true
    route_post_id?: true
    post_id?: true
    element_id?: true
    parent_id?: true
    author_id?: true
    author_display_name?: true
    status?: true
    position?: true
    content?: true
    is_resolved?: true
    is_public?: true
    last_activity_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_notesMaxAggregateInputType = {
    id?: true
    route_url?: true
    route_title?: true
    route_post_id?: true
    post_id?: true
    element_id?: true
    parent_id?: true
    author_id?: true
    author_display_name?: true
    status?: true
    position?: true
    content?: true
    is_resolved?: true
    is_public?: true
    last_activity_at?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_notesCountAggregateInputType = {
    id?: true
    route_url?: true
    route_title?: true
    route_post_id?: true
    post_id?: true
    element_id?: true
    parent_id?: true
    author_id?: true
    author_display_name?: true
    status?: true
    position?: true
    content?: true
    is_resolved?: true
    is_public?: true
    last_activity_at?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Wp_e_notesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_notes to aggregate.
     */
    where?: wp_e_notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes to fetch.
     */
    orderBy?: wp_e_notesOrderByWithRelationInput | wp_e_notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_e_notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_e_notes
    **/
    _count?: true | Wp_e_notesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_e_notesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_e_notesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_e_notesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_e_notesMaxAggregateInputType
  }

  export type GetWp_e_notesAggregateType<T extends Wp_e_notesAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_e_notes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_e_notes[P]>
      : GetScalarType<T[P], AggregateWp_e_notes[P]>
  }




  export type wp_e_notesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_e_notesWhereInput
    orderBy?: wp_e_notesOrderByWithAggregationInput | wp_e_notesOrderByWithAggregationInput[]
    by: Wp_e_notesScalarFieldEnum[] | Wp_e_notesScalarFieldEnum
    having?: wp_e_notesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_e_notesCountAggregateInputType | true
    _avg?: Wp_e_notesAvgAggregateInputType
    _sum?: Wp_e_notesSumAggregateInputType
    _min?: Wp_e_notesMinAggregateInputType
    _max?: Wp_e_notesMaxAggregateInputType
  }

  export type Wp_e_notesGroupByOutputType = {
    id: bigint
    route_url: string | null
    route_title: string | null
    route_post_id: bigint | null
    post_id: bigint | null
    element_id: string | null
    parent_id: bigint
    author_id: bigint | null
    author_display_name: string | null
    status: string
    position: string | null
    content: string | null
    is_resolved: boolean
    is_public: boolean
    last_activity_at: Date | null
    created_at: Date
    updated_at: Date
    _count: Wp_e_notesCountAggregateOutputType | null
    _avg: Wp_e_notesAvgAggregateOutputType | null
    _sum: Wp_e_notesSumAggregateOutputType | null
    _min: Wp_e_notesMinAggregateOutputType | null
    _max: Wp_e_notesMaxAggregateOutputType | null
  }

  type GetWp_e_notesGroupByPayload<T extends wp_e_notesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_e_notesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_e_notesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_e_notesGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_e_notesGroupByOutputType[P]>
        }
      >
    >


  export type wp_e_notesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    route_url?: boolean
    route_title?: boolean
    route_post_id?: boolean
    post_id?: boolean
    element_id?: boolean
    parent_id?: boolean
    author_id?: boolean
    author_display_name?: boolean
    status?: boolean
    position?: boolean
    content?: boolean
    is_resolved?: boolean
    is_public?: boolean
    last_activity_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["wp_e_notes"]>



  export type wp_e_notesSelectScalar = {
    id?: boolean
    route_url?: boolean
    route_title?: boolean
    route_post_id?: boolean
    post_id?: boolean
    element_id?: boolean
    parent_id?: boolean
    author_id?: boolean
    author_display_name?: boolean
    status?: boolean
    position?: boolean
    content?: boolean
    is_resolved?: boolean
    is_public?: boolean
    last_activity_at?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type wp_e_notesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "route_url" | "route_title" | "route_post_id" | "post_id" | "element_id" | "parent_id" | "author_id" | "author_display_name" | "status" | "position" | "content" | "is_resolved" | "is_public" | "last_activity_at" | "created_at" | "updated_at", ExtArgs["result"]["wp_e_notes"]>

  export type $wp_e_notesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_e_notes"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      route_url: string | null
      route_title: string | null
      route_post_id: bigint | null
      post_id: bigint | null
      element_id: string | null
      parent_id: bigint
      author_id: bigint | null
      author_display_name: string | null
      status: string
      position: string | null
      content: string | null
      is_resolved: boolean
      is_public: boolean
      last_activity_at: Date | null
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["wp_e_notes"]>
    composites: {}
  }

  type wp_e_notesGetPayload<S extends boolean | null | undefined | wp_e_notesDefaultArgs> = $Result.GetResult<Prisma.$wp_e_notesPayload, S>

  type wp_e_notesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_e_notesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_e_notesCountAggregateInputType | true
    }

  export interface wp_e_notesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_e_notes'], meta: { name: 'wp_e_notes' } }
    /**
     * Find zero or one Wp_e_notes that matches the filter.
     * @param {wp_e_notesFindUniqueArgs} args - Arguments to find a Wp_e_notes
     * @example
     * // Get one Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_e_notesFindUniqueArgs>(args: SelectSubset<T, wp_e_notesFindUniqueArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_e_notes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_e_notesFindUniqueOrThrowArgs} args - Arguments to find a Wp_e_notes
     * @example
     * // Get one Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_e_notesFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_e_notesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_notes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notesFindFirstArgs} args - Arguments to find a Wp_e_notes
     * @example
     * // Get one Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_e_notesFindFirstArgs>(args?: SelectSubset<T, wp_e_notesFindFirstArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_notes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notesFindFirstOrThrowArgs} args - Arguments to find a Wp_e_notes
     * @example
     * // Get one Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_e_notesFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_e_notesFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_e_notes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.findMany()
     * 
     * // Get first 10 Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_e_notesWithIdOnly = await prisma.wp_e_notes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_e_notesFindManyArgs>(args?: SelectSubset<T, wp_e_notesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_e_notes.
     * @param {wp_e_notesCreateArgs} args - Arguments to create a Wp_e_notes.
     * @example
     * // Create one Wp_e_notes
     * const Wp_e_notes = await prisma.wp_e_notes.create({
     *   data: {
     *     // ... data to create a Wp_e_notes
     *   }
     * })
     * 
     */
    create<T extends wp_e_notesCreateArgs>(args: SelectSubset<T, wp_e_notesCreateArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_e_notes.
     * @param {wp_e_notesCreateManyArgs} args - Arguments to create many Wp_e_notes.
     * @example
     * // Create many Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_e_notesCreateManyArgs>(args?: SelectSubset<T, wp_e_notesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_e_notes.
     * @param {wp_e_notesDeleteArgs} args - Arguments to delete one Wp_e_notes.
     * @example
     * // Delete one Wp_e_notes
     * const Wp_e_notes = await prisma.wp_e_notes.delete({
     *   where: {
     *     // ... filter to delete one Wp_e_notes
     *   }
     * })
     * 
     */
    delete<T extends wp_e_notesDeleteArgs>(args: SelectSubset<T, wp_e_notesDeleteArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_e_notes.
     * @param {wp_e_notesUpdateArgs} args - Arguments to update one Wp_e_notes.
     * @example
     * // Update one Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_e_notesUpdateArgs>(args: SelectSubset<T, wp_e_notesUpdateArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_e_notes.
     * @param {wp_e_notesDeleteManyArgs} args - Arguments to filter Wp_e_notes to delete.
     * @example
     * // Delete a few Wp_e_notes
     * const { count } = await prisma.wp_e_notes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_e_notesDeleteManyArgs>(args?: SelectSubset<T, wp_e_notesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_e_notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_e_notesUpdateManyArgs>(args: SelectSubset<T, wp_e_notesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_e_notes.
     * @param {wp_e_notesUpsertArgs} args - Arguments to update or create a Wp_e_notes.
     * @example
     * // Update or create a Wp_e_notes
     * const wp_e_notes = await prisma.wp_e_notes.upsert({
     *   create: {
     *     // ... data to create a Wp_e_notes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_e_notes we want to update
     *   }
     * })
     */
    upsert<T extends wp_e_notesUpsertArgs>(args: SelectSubset<T, wp_e_notesUpsertArgs<ExtArgs>>): Prisma__wp_e_notesClient<$Result.GetResult<Prisma.$wp_e_notesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_e_notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notesCountArgs} args - Arguments to filter Wp_e_notes to count.
     * @example
     * // Count the number of Wp_e_notes
     * const count = await prisma.wp_e_notes.count({
     *   where: {
     *     // ... the filter for the Wp_e_notes we want to count
     *   }
     * })
    **/
    count<T extends wp_e_notesCountArgs>(
      args?: Subset<T, wp_e_notesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_e_notesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_e_notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_e_notesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_e_notesAggregateArgs>(args: Subset<T, Wp_e_notesAggregateArgs>): Prisma.PrismaPromise<GetWp_e_notesAggregateType<T>>

    /**
     * Group by Wp_e_notes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_e_notesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_e_notesGroupByArgs['orderBy'] }
        : { orderBy?: wp_e_notesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_e_notesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_e_notesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_e_notes model
   */
  readonly fields: wp_e_notesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_e_notes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_e_notesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_e_notes model
   */
  interface wp_e_notesFieldRefs {
    readonly id: FieldRef<"wp_e_notes", 'BigInt'>
    readonly route_url: FieldRef<"wp_e_notes", 'String'>
    readonly route_title: FieldRef<"wp_e_notes", 'String'>
    readonly route_post_id: FieldRef<"wp_e_notes", 'BigInt'>
    readonly post_id: FieldRef<"wp_e_notes", 'BigInt'>
    readonly element_id: FieldRef<"wp_e_notes", 'String'>
    readonly parent_id: FieldRef<"wp_e_notes", 'BigInt'>
    readonly author_id: FieldRef<"wp_e_notes", 'BigInt'>
    readonly author_display_name: FieldRef<"wp_e_notes", 'String'>
    readonly status: FieldRef<"wp_e_notes", 'String'>
    readonly position: FieldRef<"wp_e_notes", 'String'>
    readonly content: FieldRef<"wp_e_notes", 'String'>
    readonly is_resolved: FieldRef<"wp_e_notes", 'Boolean'>
    readonly is_public: FieldRef<"wp_e_notes", 'Boolean'>
    readonly last_activity_at: FieldRef<"wp_e_notes", 'DateTime'>
    readonly created_at: FieldRef<"wp_e_notes", 'DateTime'>
    readonly updated_at: FieldRef<"wp_e_notes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_e_notes findUnique
   */
  export type wp_e_notesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes to fetch.
     */
    where: wp_e_notesWhereUniqueInput
  }

  /**
   * wp_e_notes findUniqueOrThrow
   */
  export type wp_e_notesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes to fetch.
     */
    where: wp_e_notesWhereUniqueInput
  }

  /**
   * wp_e_notes findFirst
   */
  export type wp_e_notesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes to fetch.
     */
    where?: wp_e_notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes to fetch.
     */
    orderBy?: wp_e_notesOrderByWithRelationInput | wp_e_notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_notes.
     */
    cursor?: wp_e_notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_notes.
     */
    distinct?: Wp_e_notesScalarFieldEnum | Wp_e_notesScalarFieldEnum[]
  }

  /**
   * wp_e_notes findFirstOrThrow
   */
  export type wp_e_notesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes to fetch.
     */
    where?: wp_e_notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes to fetch.
     */
    orderBy?: wp_e_notesOrderByWithRelationInput | wp_e_notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_notes.
     */
    cursor?: wp_e_notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_notes.
     */
    distinct?: Wp_e_notesScalarFieldEnum | Wp_e_notesScalarFieldEnum[]
  }

  /**
   * wp_e_notes findMany
   */
  export type wp_e_notesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes to fetch.
     */
    where?: wp_e_notesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes to fetch.
     */
    orderBy?: wp_e_notesOrderByWithRelationInput | wp_e_notesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_e_notes.
     */
    cursor?: wp_e_notesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes.
     */
    skip?: number
    distinct?: Wp_e_notesScalarFieldEnum | Wp_e_notesScalarFieldEnum[]
  }

  /**
   * wp_e_notes create
   */
  export type wp_e_notesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_e_notes.
     */
    data: XOR<wp_e_notesCreateInput, wp_e_notesUncheckedCreateInput>
  }

  /**
   * wp_e_notes createMany
   */
  export type wp_e_notesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_e_notes.
     */
    data: wp_e_notesCreateManyInput | wp_e_notesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_e_notes update
   */
  export type wp_e_notesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_e_notes.
     */
    data: XOR<wp_e_notesUpdateInput, wp_e_notesUncheckedUpdateInput>
    /**
     * Choose, which wp_e_notes to update.
     */
    where: wp_e_notesWhereUniqueInput
  }

  /**
   * wp_e_notes updateMany
   */
  export type wp_e_notesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_e_notes.
     */
    data: XOR<wp_e_notesUpdateManyMutationInput, wp_e_notesUncheckedUpdateManyInput>
    /**
     * Filter which wp_e_notes to update
     */
    where?: wp_e_notesWhereInput
    /**
     * Limit how many wp_e_notes to update.
     */
    limit?: number
  }

  /**
   * wp_e_notes upsert
   */
  export type wp_e_notesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_e_notes to update in case it exists.
     */
    where: wp_e_notesWhereUniqueInput
    /**
     * In case the wp_e_notes found by the `where` argument doesn't exist, create a new wp_e_notes with this data.
     */
    create: XOR<wp_e_notesCreateInput, wp_e_notesUncheckedCreateInput>
    /**
     * In case the wp_e_notes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_e_notesUpdateInput, wp_e_notesUncheckedUpdateInput>
  }

  /**
   * wp_e_notes delete
   */
  export type wp_e_notesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
    /**
     * Filter which wp_e_notes to delete.
     */
    where: wp_e_notesWhereUniqueInput
  }

  /**
   * wp_e_notes deleteMany
   */
  export type wp_e_notesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_notes to delete
     */
    where?: wp_e_notesWhereInput
    /**
     * Limit how many wp_e_notes to delete.
     */
    limit?: number
  }

  /**
   * wp_e_notes without action
   */
  export type wp_e_notesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes
     */
    select?: wp_e_notesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes
     */
    omit?: wp_e_notesOmit<ExtArgs> | null
  }


  /**
   * Model wp_e_notes_users_relations
   */

  export type AggregateWp_e_notes_users_relations = {
    _count: Wp_e_notes_users_relationsCountAggregateOutputType | null
    _avg: Wp_e_notes_users_relationsAvgAggregateOutputType | null
    _sum: Wp_e_notes_users_relationsSumAggregateOutputType | null
    _min: Wp_e_notes_users_relationsMinAggregateOutputType | null
    _max: Wp_e_notes_users_relationsMaxAggregateOutputType | null
  }

  export type Wp_e_notes_users_relationsAvgAggregateOutputType = {
    id: number | null
    note_id: number | null
    user_id: number | null
  }

  export type Wp_e_notes_users_relationsSumAggregateOutputType = {
    id: bigint | null
    note_id: bigint | null
    user_id: bigint | null
  }

  export type Wp_e_notes_users_relationsMinAggregateOutputType = {
    id: bigint | null
    type: string | null
    note_id: bigint | null
    user_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_notes_users_relationsMaxAggregateOutputType = {
    id: bigint | null
    type: string | null
    note_id: bigint | null
    user_id: bigint | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_notes_users_relationsCountAggregateOutputType = {
    id: number
    type: number
    note_id: number
    user_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Wp_e_notes_users_relationsAvgAggregateInputType = {
    id?: true
    note_id?: true
    user_id?: true
  }

  export type Wp_e_notes_users_relationsSumAggregateInputType = {
    id?: true
    note_id?: true
    user_id?: true
  }

  export type Wp_e_notes_users_relationsMinAggregateInputType = {
    id?: true
    type?: true
    note_id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_notes_users_relationsMaxAggregateInputType = {
    id?: true
    type?: true
    note_id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_notes_users_relationsCountAggregateInputType = {
    id?: true
    type?: true
    note_id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Wp_e_notes_users_relationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_notes_users_relations to aggregate.
     */
    where?: wp_e_notes_users_relationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes_users_relations to fetch.
     */
    orderBy?: wp_e_notes_users_relationsOrderByWithRelationInput | wp_e_notes_users_relationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_e_notes_users_relationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes_users_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes_users_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_e_notes_users_relations
    **/
    _count?: true | Wp_e_notes_users_relationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_e_notes_users_relationsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_e_notes_users_relationsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_e_notes_users_relationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_e_notes_users_relationsMaxAggregateInputType
  }

  export type GetWp_e_notes_users_relationsAggregateType<T extends Wp_e_notes_users_relationsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_e_notes_users_relations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_e_notes_users_relations[P]>
      : GetScalarType<T[P], AggregateWp_e_notes_users_relations[P]>
  }




  export type wp_e_notes_users_relationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_e_notes_users_relationsWhereInput
    orderBy?: wp_e_notes_users_relationsOrderByWithAggregationInput | wp_e_notes_users_relationsOrderByWithAggregationInput[]
    by: Wp_e_notes_users_relationsScalarFieldEnum[] | Wp_e_notes_users_relationsScalarFieldEnum
    having?: wp_e_notes_users_relationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_e_notes_users_relationsCountAggregateInputType | true
    _avg?: Wp_e_notes_users_relationsAvgAggregateInputType
    _sum?: Wp_e_notes_users_relationsSumAggregateInputType
    _min?: Wp_e_notes_users_relationsMinAggregateInputType
    _max?: Wp_e_notes_users_relationsMaxAggregateInputType
  }

  export type Wp_e_notes_users_relationsGroupByOutputType = {
    id: bigint
    type: string
    note_id: bigint
    user_id: bigint
    created_at: Date
    updated_at: Date
    _count: Wp_e_notes_users_relationsCountAggregateOutputType | null
    _avg: Wp_e_notes_users_relationsAvgAggregateOutputType | null
    _sum: Wp_e_notes_users_relationsSumAggregateOutputType | null
    _min: Wp_e_notes_users_relationsMinAggregateOutputType | null
    _max: Wp_e_notes_users_relationsMaxAggregateOutputType | null
  }

  type GetWp_e_notes_users_relationsGroupByPayload<T extends wp_e_notes_users_relationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_e_notes_users_relationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_e_notes_users_relationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_e_notes_users_relationsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_e_notes_users_relationsGroupByOutputType[P]>
        }
      >
    >


  export type wp_e_notes_users_relationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    note_id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["wp_e_notes_users_relations"]>



  export type wp_e_notes_users_relationsSelectScalar = {
    id?: boolean
    type?: boolean
    note_id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type wp_e_notes_users_relationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "note_id" | "user_id" | "created_at" | "updated_at", ExtArgs["result"]["wp_e_notes_users_relations"]>

  export type $wp_e_notes_users_relationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_e_notes_users_relations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      type: string
      note_id: bigint
      user_id: bigint
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["wp_e_notes_users_relations"]>
    composites: {}
  }

  type wp_e_notes_users_relationsGetPayload<S extends boolean | null | undefined | wp_e_notes_users_relationsDefaultArgs> = $Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload, S>

  type wp_e_notes_users_relationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_e_notes_users_relationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_e_notes_users_relationsCountAggregateInputType | true
    }

  export interface wp_e_notes_users_relationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_e_notes_users_relations'], meta: { name: 'wp_e_notes_users_relations' } }
    /**
     * Find zero or one Wp_e_notes_users_relations that matches the filter.
     * @param {wp_e_notes_users_relationsFindUniqueArgs} args - Arguments to find a Wp_e_notes_users_relations
     * @example
     * // Get one Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_e_notes_users_relationsFindUniqueArgs>(args: SelectSubset<T, wp_e_notes_users_relationsFindUniqueArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_e_notes_users_relations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_e_notes_users_relationsFindUniqueOrThrowArgs} args - Arguments to find a Wp_e_notes_users_relations
     * @example
     * // Get one Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_e_notes_users_relationsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_e_notes_users_relationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_notes_users_relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notes_users_relationsFindFirstArgs} args - Arguments to find a Wp_e_notes_users_relations
     * @example
     * // Get one Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_e_notes_users_relationsFindFirstArgs>(args?: SelectSubset<T, wp_e_notes_users_relationsFindFirstArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_notes_users_relations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notes_users_relationsFindFirstOrThrowArgs} args - Arguments to find a Wp_e_notes_users_relations
     * @example
     * // Get one Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_e_notes_users_relationsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_e_notes_users_relationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_e_notes_users_relations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notes_users_relationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.findMany()
     * 
     * // Get first 10 Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_e_notes_users_relationsWithIdOnly = await prisma.wp_e_notes_users_relations.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_e_notes_users_relationsFindManyArgs>(args?: SelectSubset<T, wp_e_notes_users_relationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_e_notes_users_relations.
     * @param {wp_e_notes_users_relationsCreateArgs} args - Arguments to create a Wp_e_notes_users_relations.
     * @example
     * // Create one Wp_e_notes_users_relations
     * const Wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.create({
     *   data: {
     *     // ... data to create a Wp_e_notes_users_relations
     *   }
     * })
     * 
     */
    create<T extends wp_e_notes_users_relationsCreateArgs>(args: SelectSubset<T, wp_e_notes_users_relationsCreateArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_e_notes_users_relations.
     * @param {wp_e_notes_users_relationsCreateManyArgs} args - Arguments to create many Wp_e_notes_users_relations.
     * @example
     * // Create many Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_e_notes_users_relationsCreateManyArgs>(args?: SelectSubset<T, wp_e_notes_users_relationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_e_notes_users_relations.
     * @param {wp_e_notes_users_relationsDeleteArgs} args - Arguments to delete one Wp_e_notes_users_relations.
     * @example
     * // Delete one Wp_e_notes_users_relations
     * const Wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.delete({
     *   where: {
     *     // ... filter to delete one Wp_e_notes_users_relations
     *   }
     * })
     * 
     */
    delete<T extends wp_e_notes_users_relationsDeleteArgs>(args: SelectSubset<T, wp_e_notes_users_relationsDeleteArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_e_notes_users_relations.
     * @param {wp_e_notes_users_relationsUpdateArgs} args - Arguments to update one Wp_e_notes_users_relations.
     * @example
     * // Update one Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_e_notes_users_relationsUpdateArgs>(args: SelectSubset<T, wp_e_notes_users_relationsUpdateArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_e_notes_users_relations.
     * @param {wp_e_notes_users_relationsDeleteManyArgs} args - Arguments to filter Wp_e_notes_users_relations to delete.
     * @example
     * // Delete a few Wp_e_notes_users_relations
     * const { count } = await prisma.wp_e_notes_users_relations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_e_notes_users_relationsDeleteManyArgs>(args?: SelectSubset<T, wp_e_notes_users_relationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_e_notes_users_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notes_users_relationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_e_notes_users_relationsUpdateManyArgs>(args: SelectSubset<T, wp_e_notes_users_relationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_e_notes_users_relations.
     * @param {wp_e_notes_users_relationsUpsertArgs} args - Arguments to update or create a Wp_e_notes_users_relations.
     * @example
     * // Update or create a Wp_e_notes_users_relations
     * const wp_e_notes_users_relations = await prisma.wp_e_notes_users_relations.upsert({
     *   create: {
     *     // ... data to create a Wp_e_notes_users_relations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_e_notes_users_relations we want to update
     *   }
     * })
     */
    upsert<T extends wp_e_notes_users_relationsUpsertArgs>(args: SelectSubset<T, wp_e_notes_users_relationsUpsertArgs<ExtArgs>>): Prisma__wp_e_notes_users_relationsClient<$Result.GetResult<Prisma.$wp_e_notes_users_relationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_e_notes_users_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notes_users_relationsCountArgs} args - Arguments to filter Wp_e_notes_users_relations to count.
     * @example
     * // Count the number of Wp_e_notes_users_relations
     * const count = await prisma.wp_e_notes_users_relations.count({
     *   where: {
     *     // ... the filter for the Wp_e_notes_users_relations we want to count
     *   }
     * })
    **/
    count<T extends wp_e_notes_users_relationsCountArgs>(
      args?: Subset<T, wp_e_notes_users_relationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_e_notes_users_relationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_e_notes_users_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_e_notes_users_relationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_e_notes_users_relationsAggregateArgs>(args: Subset<T, Wp_e_notes_users_relationsAggregateArgs>): Prisma.PrismaPromise<GetWp_e_notes_users_relationsAggregateType<T>>

    /**
     * Group by Wp_e_notes_users_relations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_notes_users_relationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_e_notes_users_relationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_e_notes_users_relationsGroupByArgs['orderBy'] }
        : { orderBy?: wp_e_notes_users_relationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_e_notes_users_relationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_e_notes_users_relationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_e_notes_users_relations model
   */
  readonly fields: wp_e_notes_users_relationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_e_notes_users_relations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_e_notes_users_relationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_e_notes_users_relations model
   */
  interface wp_e_notes_users_relationsFieldRefs {
    readonly id: FieldRef<"wp_e_notes_users_relations", 'BigInt'>
    readonly type: FieldRef<"wp_e_notes_users_relations", 'String'>
    readonly note_id: FieldRef<"wp_e_notes_users_relations", 'BigInt'>
    readonly user_id: FieldRef<"wp_e_notes_users_relations", 'BigInt'>
    readonly created_at: FieldRef<"wp_e_notes_users_relations", 'DateTime'>
    readonly updated_at: FieldRef<"wp_e_notes_users_relations", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_e_notes_users_relations findUnique
   */
  export type wp_e_notes_users_relationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes_users_relations to fetch.
     */
    where: wp_e_notes_users_relationsWhereUniqueInput
  }

  /**
   * wp_e_notes_users_relations findUniqueOrThrow
   */
  export type wp_e_notes_users_relationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes_users_relations to fetch.
     */
    where: wp_e_notes_users_relationsWhereUniqueInput
  }

  /**
   * wp_e_notes_users_relations findFirst
   */
  export type wp_e_notes_users_relationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes_users_relations to fetch.
     */
    where?: wp_e_notes_users_relationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes_users_relations to fetch.
     */
    orderBy?: wp_e_notes_users_relationsOrderByWithRelationInput | wp_e_notes_users_relationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_notes_users_relations.
     */
    cursor?: wp_e_notes_users_relationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes_users_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes_users_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_notes_users_relations.
     */
    distinct?: Wp_e_notes_users_relationsScalarFieldEnum | Wp_e_notes_users_relationsScalarFieldEnum[]
  }

  /**
   * wp_e_notes_users_relations findFirstOrThrow
   */
  export type wp_e_notes_users_relationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes_users_relations to fetch.
     */
    where?: wp_e_notes_users_relationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes_users_relations to fetch.
     */
    orderBy?: wp_e_notes_users_relationsOrderByWithRelationInput | wp_e_notes_users_relationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_notes_users_relations.
     */
    cursor?: wp_e_notes_users_relationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes_users_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes_users_relations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_notes_users_relations.
     */
    distinct?: Wp_e_notes_users_relationsScalarFieldEnum | Wp_e_notes_users_relationsScalarFieldEnum[]
  }

  /**
   * wp_e_notes_users_relations findMany
   */
  export type wp_e_notes_users_relationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_notes_users_relations to fetch.
     */
    where?: wp_e_notes_users_relationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_notes_users_relations to fetch.
     */
    orderBy?: wp_e_notes_users_relationsOrderByWithRelationInput | wp_e_notes_users_relationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_e_notes_users_relations.
     */
    cursor?: wp_e_notes_users_relationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_notes_users_relations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_notes_users_relations.
     */
    skip?: number
    distinct?: Wp_e_notes_users_relationsScalarFieldEnum | Wp_e_notes_users_relationsScalarFieldEnum[]
  }

  /**
   * wp_e_notes_users_relations create
   */
  export type wp_e_notes_users_relationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_e_notes_users_relations.
     */
    data: XOR<wp_e_notes_users_relationsCreateInput, wp_e_notes_users_relationsUncheckedCreateInput>
  }

  /**
   * wp_e_notes_users_relations createMany
   */
  export type wp_e_notes_users_relationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_e_notes_users_relations.
     */
    data: wp_e_notes_users_relationsCreateManyInput | wp_e_notes_users_relationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_e_notes_users_relations update
   */
  export type wp_e_notes_users_relationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_e_notes_users_relations.
     */
    data: XOR<wp_e_notes_users_relationsUpdateInput, wp_e_notes_users_relationsUncheckedUpdateInput>
    /**
     * Choose, which wp_e_notes_users_relations to update.
     */
    where: wp_e_notes_users_relationsWhereUniqueInput
  }

  /**
   * wp_e_notes_users_relations updateMany
   */
  export type wp_e_notes_users_relationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_e_notes_users_relations.
     */
    data: XOR<wp_e_notes_users_relationsUpdateManyMutationInput, wp_e_notes_users_relationsUncheckedUpdateManyInput>
    /**
     * Filter which wp_e_notes_users_relations to update
     */
    where?: wp_e_notes_users_relationsWhereInput
    /**
     * Limit how many wp_e_notes_users_relations to update.
     */
    limit?: number
  }

  /**
   * wp_e_notes_users_relations upsert
   */
  export type wp_e_notes_users_relationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_e_notes_users_relations to update in case it exists.
     */
    where: wp_e_notes_users_relationsWhereUniqueInput
    /**
     * In case the wp_e_notes_users_relations found by the `where` argument doesn't exist, create a new wp_e_notes_users_relations with this data.
     */
    create: XOR<wp_e_notes_users_relationsCreateInput, wp_e_notes_users_relationsUncheckedCreateInput>
    /**
     * In case the wp_e_notes_users_relations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_e_notes_users_relationsUpdateInput, wp_e_notes_users_relationsUncheckedUpdateInput>
  }

  /**
   * wp_e_notes_users_relations delete
   */
  export type wp_e_notes_users_relationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
    /**
     * Filter which wp_e_notes_users_relations to delete.
     */
    where: wp_e_notes_users_relationsWhereUniqueInput
  }

  /**
   * wp_e_notes_users_relations deleteMany
   */
  export type wp_e_notes_users_relationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_notes_users_relations to delete
     */
    where?: wp_e_notes_users_relationsWhereInput
    /**
     * Limit how many wp_e_notes_users_relations to delete.
     */
    limit?: number
  }

  /**
   * wp_e_notes_users_relations without action
   */
  export type wp_e_notes_users_relationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_notes_users_relations
     */
    select?: wp_e_notes_users_relationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_notes_users_relations
     */
    omit?: wp_e_notes_users_relationsOmit<ExtArgs> | null
  }


  /**
   * Model wp_e_submissions
   */

  export type AggregateWp_e_submissions = {
    _count: Wp_e_submissionsCountAggregateOutputType | null
    _avg: Wp_e_submissionsAvgAggregateOutputType | null
    _sum: Wp_e_submissionsSumAggregateOutputType | null
    _min: Wp_e_submissionsMinAggregateOutputType | null
    _max: Wp_e_submissionsMaxAggregateOutputType | null
  }

  export type Wp_e_submissionsAvgAggregateOutputType = {
    id: number | null
    main_meta_id: number | null
    post_id: number | null
    campaign_id: number | null
    user_id: number | null
    actions_count: number | null
    actions_succeeded_count: number | null
  }

  export type Wp_e_submissionsSumAggregateOutputType = {
    id: bigint | null
    main_meta_id: bigint | null
    post_id: bigint | null
    campaign_id: bigint | null
    user_id: bigint | null
    actions_count: number | null
    actions_succeeded_count: number | null
  }

  export type Wp_e_submissionsMinAggregateOutputType = {
    id: bigint | null
    type: string | null
    hash_id: string | null
    main_meta_id: bigint | null
    post_id: bigint | null
    referer: string | null
    referer_title: string | null
    element_id: string | null
    form_name: string | null
    campaign_id: bigint | null
    user_id: bigint | null
    user_ip: string | null
    user_agent: string | null
    actions_count: number | null
    actions_succeeded_count: number | null
    status: string | null
    is_read: boolean | null
    meta: string | null
    created_at_gmt: Date | null
    updated_at_gmt: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_submissionsMaxAggregateOutputType = {
    id: bigint | null
    type: string | null
    hash_id: string | null
    main_meta_id: bigint | null
    post_id: bigint | null
    referer: string | null
    referer_title: string | null
    element_id: string | null
    form_name: string | null
    campaign_id: bigint | null
    user_id: bigint | null
    user_ip: string | null
    user_agent: string | null
    actions_count: number | null
    actions_succeeded_count: number | null
    status: string | null
    is_read: boolean | null
    meta: string | null
    created_at_gmt: Date | null
    updated_at_gmt: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_submissionsCountAggregateOutputType = {
    id: number
    type: number
    hash_id: number
    main_meta_id: number
    post_id: number
    referer: number
    referer_title: number
    element_id: number
    form_name: number
    campaign_id: number
    user_id: number
    user_ip: number
    user_agent: number
    actions_count: number
    actions_succeeded_count: number
    status: number
    is_read: number
    meta: number
    created_at_gmt: number
    updated_at_gmt: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Wp_e_submissionsAvgAggregateInputType = {
    id?: true
    main_meta_id?: true
    post_id?: true
    campaign_id?: true
    user_id?: true
    actions_count?: true
    actions_succeeded_count?: true
  }

  export type Wp_e_submissionsSumAggregateInputType = {
    id?: true
    main_meta_id?: true
    post_id?: true
    campaign_id?: true
    user_id?: true
    actions_count?: true
    actions_succeeded_count?: true
  }

  export type Wp_e_submissionsMinAggregateInputType = {
    id?: true
    type?: true
    hash_id?: true
    main_meta_id?: true
    post_id?: true
    referer?: true
    referer_title?: true
    element_id?: true
    form_name?: true
    campaign_id?: true
    user_id?: true
    user_ip?: true
    user_agent?: true
    actions_count?: true
    actions_succeeded_count?: true
    status?: true
    is_read?: true
    meta?: true
    created_at_gmt?: true
    updated_at_gmt?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_submissionsMaxAggregateInputType = {
    id?: true
    type?: true
    hash_id?: true
    main_meta_id?: true
    post_id?: true
    referer?: true
    referer_title?: true
    element_id?: true
    form_name?: true
    campaign_id?: true
    user_id?: true
    user_ip?: true
    user_agent?: true
    actions_count?: true
    actions_succeeded_count?: true
    status?: true
    is_read?: true
    meta?: true
    created_at_gmt?: true
    updated_at_gmt?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_submissionsCountAggregateInputType = {
    id?: true
    type?: true
    hash_id?: true
    main_meta_id?: true
    post_id?: true
    referer?: true
    referer_title?: true
    element_id?: true
    form_name?: true
    campaign_id?: true
    user_id?: true
    user_ip?: true
    user_agent?: true
    actions_count?: true
    actions_succeeded_count?: true
    status?: true
    is_read?: true
    meta?: true
    created_at_gmt?: true
    updated_at_gmt?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Wp_e_submissionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_submissions to aggregate.
     */
    where?: wp_e_submissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions to fetch.
     */
    orderBy?: wp_e_submissionsOrderByWithRelationInput | wp_e_submissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_e_submissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_e_submissions
    **/
    _count?: true | Wp_e_submissionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_e_submissionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_e_submissionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_e_submissionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_e_submissionsMaxAggregateInputType
  }

  export type GetWp_e_submissionsAggregateType<T extends Wp_e_submissionsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_e_submissions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_e_submissions[P]>
      : GetScalarType<T[P], AggregateWp_e_submissions[P]>
  }




  export type wp_e_submissionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_e_submissionsWhereInput
    orderBy?: wp_e_submissionsOrderByWithAggregationInput | wp_e_submissionsOrderByWithAggregationInput[]
    by: Wp_e_submissionsScalarFieldEnum[] | Wp_e_submissionsScalarFieldEnum
    having?: wp_e_submissionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_e_submissionsCountAggregateInputType | true
    _avg?: Wp_e_submissionsAvgAggregateInputType
    _sum?: Wp_e_submissionsSumAggregateInputType
    _min?: Wp_e_submissionsMinAggregateInputType
    _max?: Wp_e_submissionsMaxAggregateInputType
  }

  export type Wp_e_submissionsGroupByOutputType = {
    id: bigint
    type: string | null
    hash_id: string
    main_meta_id: bigint
    post_id: bigint
    referer: string
    referer_title: string | null
    element_id: string
    form_name: string
    campaign_id: bigint
    user_id: bigint | null
    user_ip: string
    user_agent: string
    actions_count: number | null
    actions_succeeded_count: number | null
    status: string
    is_read: boolean
    meta: string | null
    created_at_gmt: Date
    updated_at_gmt: Date
    created_at: Date
    updated_at: Date
    _count: Wp_e_submissionsCountAggregateOutputType | null
    _avg: Wp_e_submissionsAvgAggregateOutputType | null
    _sum: Wp_e_submissionsSumAggregateOutputType | null
    _min: Wp_e_submissionsMinAggregateOutputType | null
    _max: Wp_e_submissionsMaxAggregateOutputType | null
  }

  type GetWp_e_submissionsGroupByPayload<T extends wp_e_submissionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_e_submissionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_e_submissionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_e_submissionsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_e_submissionsGroupByOutputType[P]>
        }
      >
    >


  export type wp_e_submissionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    hash_id?: boolean
    main_meta_id?: boolean
    post_id?: boolean
    referer?: boolean
    referer_title?: boolean
    element_id?: boolean
    form_name?: boolean
    campaign_id?: boolean
    user_id?: boolean
    user_ip?: boolean
    user_agent?: boolean
    actions_count?: boolean
    actions_succeeded_count?: boolean
    status?: boolean
    is_read?: boolean
    meta?: boolean
    created_at_gmt?: boolean
    updated_at_gmt?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["wp_e_submissions"]>



  export type wp_e_submissionsSelectScalar = {
    id?: boolean
    type?: boolean
    hash_id?: boolean
    main_meta_id?: boolean
    post_id?: boolean
    referer?: boolean
    referer_title?: boolean
    element_id?: boolean
    form_name?: boolean
    campaign_id?: boolean
    user_id?: boolean
    user_ip?: boolean
    user_agent?: boolean
    actions_count?: boolean
    actions_succeeded_count?: boolean
    status?: boolean
    is_read?: boolean
    meta?: boolean
    created_at_gmt?: boolean
    updated_at_gmt?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type wp_e_submissionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "hash_id" | "main_meta_id" | "post_id" | "referer" | "referer_title" | "element_id" | "form_name" | "campaign_id" | "user_id" | "user_ip" | "user_agent" | "actions_count" | "actions_succeeded_count" | "status" | "is_read" | "meta" | "created_at_gmt" | "updated_at_gmt" | "created_at" | "updated_at", ExtArgs["result"]["wp_e_submissions"]>

  export type $wp_e_submissionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_e_submissions"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      type: string | null
      hash_id: string
      main_meta_id: bigint
      post_id: bigint
      referer: string
      referer_title: string | null
      element_id: string
      form_name: string
      campaign_id: bigint
      user_id: bigint | null
      user_ip: string
      user_agent: string
      actions_count: number | null
      actions_succeeded_count: number | null
      status: string
      is_read: boolean
      meta: string | null
      created_at_gmt: Date
      updated_at_gmt: Date
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["wp_e_submissions"]>
    composites: {}
  }

  type wp_e_submissionsGetPayload<S extends boolean | null | undefined | wp_e_submissionsDefaultArgs> = $Result.GetResult<Prisma.$wp_e_submissionsPayload, S>

  type wp_e_submissionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_e_submissionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_e_submissionsCountAggregateInputType | true
    }

  export interface wp_e_submissionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_e_submissions'], meta: { name: 'wp_e_submissions' } }
    /**
     * Find zero or one Wp_e_submissions that matches the filter.
     * @param {wp_e_submissionsFindUniqueArgs} args - Arguments to find a Wp_e_submissions
     * @example
     * // Get one Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_e_submissionsFindUniqueArgs>(args: SelectSubset<T, wp_e_submissionsFindUniqueArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_e_submissions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_e_submissionsFindUniqueOrThrowArgs} args - Arguments to find a Wp_e_submissions
     * @example
     * // Get one Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_e_submissionsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_e_submissionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_submissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissionsFindFirstArgs} args - Arguments to find a Wp_e_submissions
     * @example
     * // Get one Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_e_submissionsFindFirstArgs>(args?: SelectSubset<T, wp_e_submissionsFindFirstArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_submissions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissionsFindFirstOrThrowArgs} args - Arguments to find a Wp_e_submissions
     * @example
     * // Get one Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_e_submissionsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_e_submissionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_e_submissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.findMany()
     * 
     * // Get first 10 Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_e_submissionsWithIdOnly = await prisma.wp_e_submissions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_e_submissionsFindManyArgs>(args?: SelectSubset<T, wp_e_submissionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_e_submissions.
     * @param {wp_e_submissionsCreateArgs} args - Arguments to create a Wp_e_submissions.
     * @example
     * // Create one Wp_e_submissions
     * const Wp_e_submissions = await prisma.wp_e_submissions.create({
     *   data: {
     *     // ... data to create a Wp_e_submissions
     *   }
     * })
     * 
     */
    create<T extends wp_e_submissionsCreateArgs>(args: SelectSubset<T, wp_e_submissionsCreateArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_e_submissions.
     * @param {wp_e_submissionsCreateManyArgs} args - Arguments to create many Wp_e_submissions.
     * @example
     * // Create many Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_e_submissionsCreateManyArgs>(args?: SelectSubset<T, wp_e_submissionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_e_submissions.
     * @param {wp_e_submissionsDeleteArgs} args - Arguments to delete one Wp_e_submissions.
     * @example
     * // Delete one Wp_e_submissions
     * const Wp_e_submissions = await prisma.wp_e_submissions.delete({
     *   where: {
     *     // ... filter to delete one Wp_e_submissions
     *   }
     * })
     * 
     */
    delete<T extends wp_e_submissionsDeleteArgs>(args: SelectSubset<T, wp_e_submissionsDeleteArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_e_submissions.
     * @param {wp_e_submissionsUpdateArgs} args - Arguments to update one Wp_e_submissions.
     * @example
     * // Update one Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_e_submissionsUpdateArgs>(args: SelectSubset<T, wp_e_submissionsUpdateArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_e_submissions.
     * @param {wp_e_submissionsDeleteManyArgs} args - Arguments to filter Wp_e_submissions to delete.
     * @example
     * // Delete a few Wp_e_submissions
     * const { count } = await prisma.wp_e_submissions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_e_submissionsDeleteManyArgs>(args?: SelectSubset<T, wp_e_submissionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_e_submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_e_submissionsUpdateManyArgs>(args: SelectSubset<T, wp_e_submissionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_e_submissions.
     * @param {wp_e_submissionsUpsertArgs} args - Arguments to update or create a Wp_e_submissions.
     * @example
     * // Update or create a Wp_e_submissions
     * const wp_e_submissions = await prisma.wp_e_submissions.upsert({
     *   create: {
     *     // ... data to create a Wp_e_submissions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_e_submissions we want to update
     *   }
     * })
     */
    upsert<T extends wp_e_submissionsUpsertArgs>(args: SelectSubset<T, wp_e_submissionsUpsertArgs<ExtArgs>>): Prisma__wp_e_submissionsClient<$Result.GetResult<Prisma.$wp_e_submissionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_e_submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissionsCountArgs} args - Arguments to filter Wp_e_submissions to count.
     * @example
     * // Count the number of Wp_e_submissions
     * const count = await prisma.wp_e_submissions.count({
     *   where: {
     *     // ... the filter for the Wp_e_submissions we want to count
     *   }
     * })
    **/
    count<T extends wp_e_submissionsCountArgs>(
      args?: Subset<T, wp_e_submissionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_e_submissionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_e_submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_e_submissionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_e_submissionsAggregateArgs>(args: Subset<T, Wp_e_submissionsAggregateArgs>): Prisma.PrismaPromise<GetWp_e_submissionsAggregateType<T>>

    /**
     * Group by Wp_e_submissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_e_submissionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_e_submissionsGroupByArgs['orderBy'] }
        : { orderBy?: wp_e_submissionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_e_submissionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_e_submissionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_e_submissions model
   */
  readonly fields: wp_e_submissionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_e_submissions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_e_submissionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_e_submissions model
   */
  interface wp_e_submissionsFieldRefs {
    readonly id: FieldRef<"wp_e_submissions", 'BigInt'>
    readonly type: FieldRef<"wp_e_submissions", 'String'>
    readonly hash_id: FieldRef<"wp_e_submissions", 'String'>
    readonly main_meta_id: FieldRef<"wp_e_submissions", 'BigInt'>
    readonly post_id: FieldRef<"wp_e_submissions", 'BigInt'>
    readonly referer: FieldRef<"wp_e_submissions", 'String'>
    readonly referer_title: FieldRef<"wp_e_submissions", 'String'>
    readonly element_id: FieldRef<"wp_e_submissions", 'String'>
    readonly form_name: FieldRef<"wp_e_submissions", 'String'>
    readonly campaign_id: FieldRef<"wp_e_submissions", 'BigInt'>
    readonly user_id: FieldRef<"wp_e_submissions", 'BigInt'>
    readonly user_ip: FieldRef<"wp_e_submissions", 'String'>
    readonly user_agent: FieldRef<"wp_e_submissions", 'String'>
    readonly actions_count: FieldRef<"wp_e_submissions", 'Int'>
    readonly actions_succeeded_count: FieldRef<"wp_e_submissions", 'Int'>
    readonly status: FieldRef<"wp_e_submissions", 'String'>
    readonly is_read: FieldRef<"wp_e_submissions", 'Boolean'>
    readonly meta: FieldRef<"wp_e_submissions", 'String'>
    readonly created_at_gmt: FieldRef<"wp_e_submissions", 'DateTime'>
    readonly updated_at_gmt: FieldRef<"wp_e_submissions", 'DateTime'>
    readonly created_at: FieldRef<"wp_e_submissions", 'DateTime'>
    readonly updated_at: FieldRef<"wp_e_submissions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_e_submissions findUnique
   */
  export type wp_e_submissionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions to fetch.
     */
    where: wp_e_submissionsWhereUniqueInput
  }

  /**
   * wp_e_submissions findUniqueOrThrow
   */
  export type wp_e_submissionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions to fetch.
     */
    where: wp_e_submissionsWhereUniqueInput
  }

  /**
   * wp_e_submissions findFirst
   */
  export type wp_e_submissionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions to fetch.
     */
    where?: wp_e_submissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions to fetch.
     */
    orderBy?: wp_e_submissionsOrderByWithRelationInput | wp_e_submissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_submissions.
     */
    cursor?: wp_e_submissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_submissions.
     */
    distinct?: Wp_e_submissionsScalarFieldEnum | Wp_e_submissionsScalarFieldEnum[]
  }

  /**
   * wp_e_submissions findFirstOrThrow
   */
  export type wp_e_submissionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions to fetch.
     */
    where?: wp_e_submissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions to fetch.
     */
    orderBy?: wp_e_submissionsOrderByWithRelationInput | wp_e_submissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_submissions.
     */
    cursor?: wp_e_submissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_submissions.
     */
    distinct?: Wp_e_submissionsScalarFieldEnum | Wp_e_submissionsScalarFieldEnum[]
  }

  /**
   * wp_e_submissions findMany
   */
  export type wp_e_submissionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions to fetch.
     */
    where?: wp_e_submissionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions to fetch.
     */
    orderBy?: wp_e_submissionsOrderByWithRelationInput | wp_e_submissionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_e_submissions.
     */
    cursor?: wp_e_submissionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions.
     */
    skip?: number
    distinct?: Wp_e_submissionsScalarFieldEnum | Wp_e_submissionsScalarFieldEnum[]
  }

  /**
   * wp_e_submissions create
   */
  export type wp_e_submissionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_e_submissions.
     */
    data: XOR<wp_e_submissionsCreateInput, wp_e_submissionsUncheckedCreateInput>
  }

  /**
   * wp_e_submissions createMany
   */
  export type wp_e_submissionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_e_submissions.
     */
    data: wp_e_submissionsCreateManyInput | wp_e_submissionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_e_submissions update
   */
  export type wp_e_submissionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_e_submissions.
     */
    data: XOR<wp_e_submissionsUpdateInput, wp_e_submissionsUncheckedUpdateInput>
    /**
     * Choose, which wp_e_submissions to update.
     */
    where: wp_e_submissionsWhereUniqueInput
  }

  /**
   * wp_e_submissions updateMany
   */
  export type wp_e_submissionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_e_submissions.
     */
    data: XOR<wp_e_submissionsUpdateManyMutationInput, wp_e_submissionsUncheckedUpdateManyInput>
    /**
     * Filter which wp_e_submissions to update
     */
    where?: wp_e_submissionsWhereInput
    /**
     * Limit how many wp_e_submissions to update.
     */
    limit?: number
  }

  /**
   * wp_e_submissions upsert
   */
  export type wp_e_submissionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_e_submissions to update in case it exists.
     */
    where: wp_e_submissionsWhereUniqueInput
    /**
     * In case the wp_e_submissions found by the `where` argument doesn't exist, create a new wp_e_submissions with this data.
     */
    create: XOR<wp_e_submissionsCreateInput, wp_e_submissionsUncheckedCreateInput>
    /**
     * In case the wp_e_submissions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_e_submissionsUpdateInput, wp_e_submissionsUncheckedUpdateInput>
  }

  /**
   * wp_e_submissions delete
   */
  export type wp_e_submissionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
    /**
     * Filter which wp_e_submissions to delete.
     */
    where: wp_e_submissionsWhereUniqueInput
  }

  /**
   * wp_e_submissions deleteMany
   */
  export type wp_e_submissionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_submissions to delete
     */
    where?: wp_e_submissionsWhereInput
    /**
     * Limit how many wp_e_submissions to delete.
     */
    limit?: number
  }

  /**
   * wp_e_submissions without action
   */
  export type wp_e_submissionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions
     */
    select?: wp_e_submissionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions
     */
    omit?: wp_e_submissionsOmit<ExtArgs> | null
  }


  /**
   * Model wp_e_submissions_actions_log
   */

  export type AggregateWp_e_submissions_actions_log = {
    _count: Wp_e_submissions_actions_logCountAggregateOutputType | null
    _avg: Wp_e_submissions_actions_logAvgAggregateOutputType | null
    _sum: Wp_e_submissions_actions_logSumAggregateOutputType | null
    _min: Wp_e_submissions_actions_logMinAggregateOutputType | null
    _max: Wp_e_submissions_actions_logMaxAggregateOutputType | null
  }

  export type Wp_e_submissions_actions_logAvgAggregateOutputType = {
    id: number | null
    submission_id: number | null
  }

  export type Wp_e_submissions_actions_logSumAggregateOutputType = {
    id: bigint | null
    submission_id: bigint | null
  }

  export type Wp_e_submissions_actions_logMinAggregateOutputType = {
    id: bigint | null
    submission_id: bigint | null
    action_name: string | null
    action_label: string | null
    status: string | null
    log: string | null
    created_at_gmt: Date | null
    updated_at_gmt: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_submissions_actions_logMaxAggregateOutputType = {
    id: bigint | null
    submission_id: bigint | null
    action_name: string | null
    action_label: string | null
    status: string | null
    log: string | null
    created_at_gmt: Date | null
    updated_at_gmt: Date | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Wp_e_submissions_actions_logCountAggregateOutputType = {
    id: number
    submission_id: number
    action_name: number
    action_label: number
    status: number
    log: number
    created_at_gmt: number
    updated_at_gmt: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Wp_e_submissions_actions_logAvgAggregateInputType = {
    id?: true
    submission_id?: true
  }

  export type Wp_e_submissions_actions_logSumAggregateInputType = {
    id?: true
    submission_id?: true
  }

  export type Wp_e_submissions_actions_logMinAggregateInputType = {
    id?: true
    submission_id?: true
    action_name?: true
    action_label?: true
    status?: true
    log?: true
    created_at_gmt?: true
    updated_at_gmt?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_submissions_actions_logMaxAggregateInputType = {
    id?: true
    submission_id?: true
    action_name?: true
    action_label?: true
    status?: true
    log?: true
    created_at_gmt?: true
    updated_at_gmt?: true
    created_at?: true
    updated_at?: true
  }

  export type Wp_e_submissions_actions_logCountAggregateInputType = {
    id?: true
    submission_id?: true
    action_name?: true
    action_label?: true
    status?: true
    log?: true
    created_at_gmt?: true
    updated_at_gmt?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Wp_e_submissions_actions_logAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_submissions_actions_log to aggregate.
     */
    where?: wp_e_submissions_actions_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_actions_logs to fetch.
     */
    orderBy?: wp_e_submissions_actions_logOrderByWithRelationInput | wp_e_submissions_actions_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_e_submissions_actions_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_actions_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_actions_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_e_submissions_actions_logs
    **/
    _count?: true | Wp_e_submissions_actions_logCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_e_submissions_actions_logAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_e_submissions_actions_logSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_e_submissions_actions_logMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_e_submissions_actions_logMaxAggregateInputType
  }

  export type GetWp_e_submissions_actions_logAggregateType<T extends Wp_e_submissions_actions_logAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_e_submissions_actions_log]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_e_submissions_actions_log[P]>
      : GetScalarType<T[P], AggregateWp_e_submissions_actions_log[P]>
  }




  export type wp_e_submissions_actions_logGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_e_submissions_actions_logWhereInput
    orderBy?: wp_e_submissions_actions_logOrderByWithAggregationInput | wp_e_submissions_actions_logOrderByWithAggregationInput[]
    by: Wp_e_submissions_actions_logScalarFieldEnum[] | Wp_e_submissions_actions_logScalarFieldEnum
    having?: wp_e_submissions_actions_logScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_e_submissions_actions_logCountAggregateInputType | true
    _avg?: Wp_e_submissions_actions_logAvgAggregateInputType
    _sum?: Wp_e_submissions_actions_logSumAggregateInputType
    _min?: Wp_e_submissions_actions_logMinAggregateInputType
    _max?: Wp_e_submissions_actions_logMaxAggregateInputType
  }

  export type Wp_e_submissions_actions_logGroupByOutputType = {
    id: bigint
    submission_id: bigint
    action_name: string
    action_label: string | null
    status: string
    log: string | null
    created_at_gmt: Date
    updated_at_gmt: Date
    created_at: Date
    updated_at: Date
    _count: Wp_e_submissions_actions_logCountAggregateOutputType | null
    _avg: Wp_e_submissions_actions_logAvgAggregateOutputType | null
    _sum: Wp_e_submissions_actions_logSumAggregateOutputType | null
    _min: Wp_e_submissions_actions_logMinAggregateOutputType | null
    _max: Wp_e_submissions_actions_logMaxAggregateOutputType | null
  }

  type GetWp_e_submissions_actions_logGroupByPayload<T extends wp_e_submissions_actions_logGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_e_submissions_actions_logGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_e_submissions_actions_logGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_e_submissions_actions_logGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_e_submissions_actions_logGroupByOutputType[P]>
        }
      >
    >


  export type wp_e_submissions_actions_logSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    submission_id?: boolean
    action_name?: boolean
    action_label?: boolean
    status?: boolean
    log?: boolean
    created_at_gmt?: boolean
    updated_at_gmt?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["wp_e_submissions_actions_log"]>



  export type wp_e_submissions_actions_logSelectScalar = {
    id?: boolean
    submission_id?: boolean
    action_name?: boolean
    action_label?: boolean
    status?: boolean
    log?: boolean
    created_at_gmt?: boolean
    updated_at_gmt?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type wp_e_submissions_actions_logOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "submission_id" | "action_name" | "action_label" | "status" | "log" | "created_at_gmt" | "updated_at_gmt" | "created_at" | "updated_at", ExtArgs["result"]["wp_e_submissions_actions_log"]>

  export type $wp_e_submissions_actions_logPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_e_submissions_actions_log"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      submission_id: bigint
      action_name: string
      action_label: string | null
      status: string
      log: string | null
      created_at_gmt: Date
      updated_at_gmt: Date
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["wp_e_submissions_actions_log"]>
    composites: {}
  }

  type wp_e_submissions_actions_logGetPayload<S extends boolean | null | undefined | wp_e_submissions_actions_logDefaultArgs> = $Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload, S>

  type wp_e_submissions_actions_logCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_e_submissions_actions_logFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_e_submissions_actions_logCountAggregateInputType | true
    }

  export interface wp_e_submissions_actions_logDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_e_submissions_actions_log'], meta: { name: 'wp_e_submissions_actions_log' } }
    /**
     * Find zero or one Wp_e_submissions_actions_log that matches the filter.
     * @param {wp_e_submissions_actions_logFindUniqueArgs} args - Arguments to find a Wp_e_submissions_actions_log
     * @example
     * // Get one Wp_e_submissions_actions_log
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_e_submissions_actions_logFindUniqueArgs>(args: SelectSubset<T, wp_e_submissions_actions_logFindUniqueArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_e_submissions_actions_log that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_e_submissions_actions_logFindUniqueOrThrowArgs} args - Arguments to find a Wp_e_submissions_actions_log
     * @example
     * // Get one Wp_e_submissions_actions_log
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_e_submissions_actions_logFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_e_submissions_actions_logFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_submissions_actions_log that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_actions_logFindFirstArgs} args - Arguments to find a Wp_e_submissions_actions_log
     * @example
     * // Get one Wp_e_submissions_actions_log
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_e_submissions_actions_logFindFirstArgs>(args?: SelectSubset<T, wp_e_submissions_actions_logFindFirstArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_submissions_actions_log that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_actions_logFindFirstOrThrowArgs} args - Arguments to find a Wp_e_submissions_actions_log
     * @example
     * // Get one Wp_e_submissions_actions_log
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_e_submissions_actions_logFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_e_submissions_actions_logFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_e_submissions_actions_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_actions_logFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_e_submissions_actions_logs
     * const wp_e_submissions_actions_logs = await prisma.wp_e_submissions_actions_log.findMany()
     * 
     * // Get first 10 Wp_e_submissions_actions_logs
     * const wp_e_submissions_actions_logs = await prisma.wp_e_submissions_actions_log.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_e_submissions_actions_logWithIdOnly = await prisma.wp_e_submissions_actions_log.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_e_submissions_actions_logFindManyArgs>(args?: SelectSubset<T, wp_e_submissions_actions_logFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_e_submissions_actions_log.
     * @param {wp_e_submissions_actions_logCreateArgs} args - Arguments to create a Wp_e_submissions_actions_log.
     * @example
     * // Create one Wp_e_submissions_actions_log
     * const Wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.create({
     *   data: {
     *     // ... data to create a Wp_e_submissions_actions_log
     *   }
     * })
     * 
     */
    create<T extends wp_e_submissions_actions_logCreateArgs>(args: SelectSubset<T, wp_e_submissions_actions_logCreateArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_e_submissions_actions_logs.
     * @param {wp_e_submissions_actions_logCreateManyArgs} args - Arguments to create many Wp_e_submissions_actions_logs.
     * @example
     * // Create many Wp_e_submissions_actions_logs
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_e_submissions_actions_logCreateManyArgs>(args?: SelectSubset<T, wp_e_submissions_actions_logCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_e_submissions_actions_log.
     * @param {wp_e_submissions_actions_logDeleteArgs} args - Arguments to delete one Wp_e_submissions_actions_log.
     * @example
     * // Delete one Wp_e_submissions_actions_log
     * const Wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.delete({
     *   where: {
     *     // ... filter to delete one Wp_e_submissions_actions_log
     *   }
     * })
     * 
     */
    delete<T extends wp_e_submissions_actions_logDeleteArgs>(args: SelectSubset<T, wp_e_submissions_actions_logDeleteArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_e_submissions_actions_log.
     * @param {wp_e_submissions_actions_logUpdateArgs} args - Arguments to update one Wp_e_submissions_actions_log.
     * @example
     * // Update one Wp_e_submissions_actions_log
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_e_submissions_actions_logUpdateArgs>(args: SelectSubset<T, wp_e_submissions_actions_logUpdateArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_e_submissions_actions_logs.
     * @param {wp_e_submissions_actions_logDeleteManyArgs} args - Arguments to filter Wp_e_submissions_actions_logs to delete.
     * @example
     * // Delete a few Wp_e_submissions_actions_logs
     * const { count } = await prisma.wp_e_submissions_actions_log.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_e_submissions_actions_logDeleteManyArgs>(args?: SelectSubset<T, wp_e_submissions_actions_logDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_e_submissions_actions_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_actions_logUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_e_submissions_actions_logs
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_e_submissions_actions_logUpdateManyArgs>(args: SelectSubset<T, wp_e_submissions_actions_logUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_e_submissions_actions_log.
     * @param {wp_e_submissions_actions_logUpsertArgs} args - Arguments to update or create a Wp_e_submissions_actions_log.
     * @example
     * // Update or create a Wp_e_submissions_actions_log
     * const wp_e_submissions_actions_log = await prisma.wp_e_submissions_actions_log.upsert({
     *   create: {
     *     // ... data to create a Wp_e_submissions_actions_log
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_e_submissions_actions_log we want to update
     *   }
     * })
     */
    upsert<T extends wp_e_submissions_actions_logUpsertArgs>(args: SelectSubset<T, wp_e_submissions_actions_logUpsertArgs<ExtArgs>>): Prisma__wp_e_submissions_actions_logClient<$Result.GetResult<Prisma.$wp_e_submissions_actions_logPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_e_submissions_actions_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_actions_logCountArgs} args - Arguments to filter Wp_e_submissions_actions_logs to count.
     * @example
     * // Count the number of Wp_e_submissions_actions_logs
     * const count = await prisma.wp_e_submissions_actions_log.count({
     *   where: {
     *     // ... the filter for the Wp_e_submissions_actions_logs we want to count
     *   }
     * })
    **/
    count<T extends wp_e_submissions_actions_logCountArgs>(
      args?: Subset<T, wp_e_submissions_actions_logCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_e_submissions_actions_logCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_e_submissions_actions_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_e_submissions_actions_logAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_e_submissions_actions_logAggregateArgs>(args: Subset<T, Wp_e_submissions_actions_logAggregateArgs>): Prisma.PrismaPromise<GetWp_e_submissions_actions_logAggregateType<T>>

    /**
     * Group by Wp_e_submissions_actions_log.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_actions_logGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_e_submissions_actions_logGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_e_submissions_actions_logGroupByArgs['orderBy'] }
        : { orderBy?: wp_e_submissions_actions_logGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_e_submissions_actions_logGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_e_submissions_actions_logGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_e_submissions_actions_log model
   */
  readonly fields: wp_e_submissions_actions_logFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_e_submissions_actions_log.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_e_submissions_actions_logClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_e_submissions_actions_log model
   */
  interface wp_e_submissions_actions_logFieldRefs {
    readonly id: FieldRef<"wp_e_submissions_actions_log", 'BigInt'>
    readonly submission_id: FieldRef<"wp_e_submissions_actions_log", 'BigInt'>
    readonly action_name: FieldRef<"wp_e_submissions_actions_log", 'String'>
    readonly action_label: FieldRef<"wp_e_submissions_actions_log", 'String'>
    readonly status: FieldRef<"wp_e_submissions_actions_log", 'String'>
    readonly log: FieldRef<"wp_e_submissions_actions_log", 'String'>
    readonly created_at_gmt: FieldRef<"wp_e_submissions_actions_log", 'DateTime'>
    readonly updated_at_gmt: FieldRef<"wp_e_submissions_actions_log", 'DateTime'>
    readonly created_at: FieldRef<"wp_e_submissions_actions_log", 'DateTime'>
    readonly updated_at: FieldRef<"wp_e_submissions_actions_log", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_e_submissions_actions_log findUnique
   */
  export type wp_e_submissions_actions_logFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_actions_log to fetch.
     */
    where: wp_e_submissions_actions_logWhereUniqueInput
  }

  /**
   * wp_e_submissions_actions_log findUniqueOrThrow
   */
  export type wp_e_submissions_actions_logFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_actions_log to fetch.
     */
    where: wp_e_submissions_actions_logWhereUniqueInput
  }

  /**
   * wp_e_submissions_actions_log findFirst
   */
  export type wp_e_submissions_actions_logFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_actions_log to fetch.
     */
    where?: wp_e_submissions_actions_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_actions_logs to fetch.
     */
    orderBy?: wp_e_submissions_actions_logOrderByWithRelationInput | wp_e_submissions_actions_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_submissions_actions_logs.
     */
    cursor?: wp_e_submissions_actions_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_actions_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_actions_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_submissions_actions_logs.
     */
    distinct?: Wp_e_submissions_actions_logScalarFieldEnum | Wp_e_submissions_actions_logScalarFieldEnum[]
  }

  /**
   * wp_e_submissions_actions_log findFirstOrThrow
   */
  export type wp_e_submissions_actions_logFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_actions_log to fetch.
     */
    where?: wp_e_submissions_actions_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_actions_logs to fetch.
     */
    orderBy?: wp_e_submissions_actions_logOrderByWithRelationInput | wp_e_submissions_actions_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_submissions_actions_logs.
     */
    cursor?: wp_e_submissions_actions_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_actions_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_actions_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_submissions_actions_logs.
     */
    distinct?: Wp_e_submissions_actions_logScalarFieldEnum | Wp_e_submissions_actions_logScalarFieldEnum[]
  }

  /**
   * wp_e_submissions_actions_log findMany
   */
  export type wp_e_submissions_actions_logFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_actions_logs to fetch.
     */
    where?: wp_e_submissions_actions_logWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_actions_logs to fetch.
     */
    orderBy?: wp_e_submissions_actions_logOrderByWithRelationInput | wp_e_submissions_actions_logOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_e_submissions_actions_logs.
     */
    cursor?: wp_e_submissions_actions_logWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_actions_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_actions_logs.
     */
    skip?: number
    distinct?: Wp_e_submissions_actions_logScalarFieldEnum | Wp_e_submissions_actions_logScalarFieldEnum[]
  }

  /**
   * wp_e_submissions_actions_log create
   */
  export type wp_e_submissions_actions_logCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_e_submissions_actions_log.
     */
    data: XOR<wp_e_submissions_actions_logCreateInput, wp_e_submissions_actions_logUncheckedCreateInput>
  }

  /**
   * wp_e_submissions_actions_log createMany
   */
  export type wp_e_submissions_actions_logCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_e_submissions_actions_logs.
     */
    data: wp_e_submissions_actions_logCreateManyInput | wp_e_submissions_actions_logCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_e_submissions_actions_log update
   */
  export type wp_e_submissions_actions_logUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_e_submissions_actions_log.
     */
    data: XOR<wp_e_submissions_actions_logUpdateInput, wp_e_submissions_actions_logUncheckedUpdateInput>
    /**
     * Choose, which wp_e_submissions_actions_log to update.
     */
    where: wp_e_submissions_actions_logWhereUniqueInput
  }

  /**
   * wp_e_submissions_actions_log updateMany
   */
  export type wp_e_submissions_actions_logUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_e_submissions_actions_logs.
     */
    data: XOR<wp_e_submissions_actions_logUpdateManyMutationInput, wp_e_submissions_actions_logUncheckedUpdateManyInput>
    /**
     * Filter which wp_e_submissions_actions_logs to update
     */
    where?: wp_e_submissions_actions_logWhereInput
    /**
     * Limit how many wp_e_submissions_actions_logs to update.
     */
    limit?: number
  }

  /**
   * wp_e_submissions_actions_log upsert
   */
  export type wp_e_submissions_actions_logUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_e_submissions_actions_log to update in case it exists.
     */
    where: wp_e_submissions_actions_logWhereUniqueInput
    /**
     * In case the wp_e_submissions_actions_log found by the `where` argument doesn't exist, create a new wp_e_submissions_actions_log with this data.
     */
    create: XOR<wp_e_submissions_actions_logCreateInput, wp_e_submissions_actions_logUncheckedCreateInput>
    /**
     * In case the wp_e_submissions_actions_log was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_e_submissions_actions_logUpdateInput, wp_e_submissions_actions_logUncheckedUpdateInput>
  }

  /**
   * wp_e_submissions_actions_log delete
   */
  export type wp_e_submissions_actions_logDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
    /**
     * Filter which wp_e_submissions_actions_log to delete.
     */
    where: wp_e_submissions_actions_logWhereUniqueInput
  }

  /**
   * wp_e_submissions_actions_log deleteMany
   */
  export type wp_e_submissions_actions_logDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_submissions_actions_logs to delete
     */
    where?: wp_e_submissions_actions_logWhereInput
    /**
     * Limit how many wp_e_submissions_actions_logs to delete.
     */
    limit?: number
  }

  /**
   * wp_e_submissions_actions_log without action
   */
  export type wp_e_submissions_actions_logDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_actions_log
     */
    select?: wp_e_submissions_actions_logSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_actions_log
     */
    omit?: wp_e_submissions_actions_logOmit<ExtArgs> | null
  }


  /**
   * Model wp_e_submissions_values
   */

  export type AggregateWp_e_submissions_values = {
    _count: Wp_e_submissions_valuesCountAggregateOutputType | null
    _avg: Wp_e_submissions_valuesAvgAggregateOutputType | null
    _sum: Wp_e_submissions_valuesSumAggregateOutputType | null
    _min: Wp_e_submissions_valuesMinAggregateOutputType | null
    _max: Wp_e_submissions_valuesMaxAggregateOutputType | null
  }

  export type Wp_e_submissions_valuesAvgAggregateOutputType = {
    id: number | null
    submission_id: number | null
  }

  export type Wp_e_submissions_valuesSumAggregateOutputType = {
    id: bigint | null
    submission_id: bigint | null
  }

  export type Wp_e_submissions_valuesMinAggregateOutputType = {
    id: bigint | null
    submission_id: bigint | null
    key: string | null
    value: string | null
  }

  export type Wp_e_submissions_valuesMaxAggregateOutputType = {
    id: bigint | null
    submission_id: bigint | null
    key: string | null
    value: string | null
  }

  export type Wp_e_submissions_valuesCountAggregateOutputType = {
    id: number
    submission_id: number
    key: number
    value: number
    _all: number
  }


  export type Wp_e_submissions_valuesAvgAggregateInputType = {
    id?: true
    submission_id?: true
  }

  export type Wp_e_submissions_valuesSumAggregateInputType = {
    id?: true
    submission_id?: true
  }

  export type Wp_e_submissions_valuesMinAggregateInputType = {
    id?: true
    submission_id?: true
    key?: true
    value?: true
  }

  export type Wp_e_submissions_valuesMaxAggregateInputType = {
    id?: true
    submission_id?: true
    key?: true
    value?: true
  }

  export type Wp_e_submissions_valuesCountAggregateInputType = {
    id?: true
    submission_id?: true
    key?: true
    value?: true
    _all?: true
  }

  export type Wp_e_submissions_valuesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_submissions_values to aggregate.
     */
    where?: wp_e_submissions_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_values to fetch.
     */
    orderBy?: wp_e_submissions_valuesOrderByWithRelationInput | wp_e_submissions_valuesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_e_submissions_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_e_submissions_values
    **/
    _count?: true | Wp_e_submissions_valuesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_e_submissions_valuesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_e_submissions_valuesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_e_submissions_valuesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_e_submissions_valuesMaxAggregateInputType
  }

  export type GetWp_e_submissions_valuesAggregateType<T extends Wp_e_submissions_valuesAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_e_submissions_values]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_e_submissions_values[P]>
      : GetScalarType<T[P], AggregateWp_e_submissions_values[P]>
  }




  export type wp_e_submissions_valuesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_e_submissions_valuesWhereInput
    orderBy?: wp_e_submissions_valuesOrderByWithAggregationInput | wp_e_submissions_valuesOrderByWithAggregationInput[]
    by: Wp_e_submissions_valuesScalarFieldEnum[] | Wp_e_submissions_valuesScalarFieldEnum
    having?: wp_e_submissions_valuesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_e_submissions_valuesCountAggregateInputType | true
    _avg?: Wp_e_submissions_valuesAvgAggregateInputType
    _sum?: Wp_e_submissions_valuesSumAggregateInputType
    _min?: Wp_e_submissions_valuesMinAggregateInputType
    _max?: Wp_e_submissions_valuesMaxAggregateInputType
  }

  export type Wp_e_submissions_valuesGroupByOutputType = {
    id: bigint
    submission_id: bigint
    key: string | null
    value: string | null
    _count: Wp_e_submissions_valuesCountAggregateOutputType | null
    _avg: Wp_e_submissions_valuesAvgAggregateOutputType | null
    _sum: Wp_e_submissions_valuesSumAggregateOutputType | null
    _min: Wp_e_submissions_valuesMinAggregateOutputType | null
    _max: Wp_e_submissions_valuesMaxAggregateOutputType | null
  }

  type GetWp_e_submissions_valuesGroupByPayload<T extends wp_e_submissions_valuesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_e_submissions_valuesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_e_submissions_valuesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_e_submissions_valuesGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_e_submissions_valuesGroupByOutputType[P]>
        }
      >
    >


  export type wp_e_submissions_valuesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    submission_id?: boolean
    key?: boolean
    value?: boolean
  }, ExtArgs["result"]["wp_e_submissions_values"]>



  export type wp_e_submissions_valuesSelectScalar = {
    id?: boolean
    submission_id?: boolean
    key?: boolean
    value?: boolean
  }

  export type wp_e_submissions_valuesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "submission_id" | "key" | "value", ExtArgs["result"]["wp_e_submissions_values"]>

  export type $wp_e_submissions_valuesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_e_submissions_values"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      submission_id: bigint
      key: string | null
      value: string | null
    }, ExtArgs["result"]["wp_e_submissions_values"]>
    composites: {}
  }

  type wp_e_submissions_valuesGetPayload<S extends boolean | null | undefined | wp_e_submissions_valuesDefaultArgs> = $Result.GetResult<Prisma.$wp_e_submissions_valuesPayload, S>

  type wp_e_submissions_valuesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_e_submissions_valuesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_e_submissions_valuesCountAggregateInputType | true
    }

  export interface wp_e_submissions_valuesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_e_submissions_values'], meta: { name: 'wp_e_submissions_values' } }
    /**
     * Find zero or one Wp_e_submissions_values that matches the filter.
     * @param {wp_e_submissions_valuesFindUniqueArgs} args - Arguments to find a Wp_e_submissions_values
     * @example
     * // Get one Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_e_submissions_valuesFindUniqueArgs>(args: SelectSubset<T, wp_e_submissions_valuesFindUniqueArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_e_submissions_values that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_e_submissions_valuesFindUniqueOrThrowArgs} args - Arguments to find a Wp_e_submissions_values
     * @example
     * // Get one Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_e_submissions_valuesFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_e_submissions_valuesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_submissions_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_valuesFindFirstArgs} args - Arguments to find a Wp_e_submissions_values
     * @example
     * // Get one Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_e_submissions_valuesFindFirstArgs>(args?: SelectSubset<T, wp_e_submissions_valuesFindFirstArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_e_submissions_values that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_valuesFindFirstOrThrowArgs} args - Arguments to find a Wp_e_submissions_values
     * @example
     * // Get one Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_e_submissions_valuesFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_e_submissions_valuesFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_e_submissions_values that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_valuesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.findMany()
     * 
     * // Get first 10 Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_e_submissions_valuesWithIdOnly = await prisma.wp_e_submissions_values.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_e_submissions_valuesFindManyArgs>(args?: SelectSubset<T, wp_e_submissions_valuesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_e_submissions_values.
     * @param {wp_e_submissions_valuesCreateArgs} args - Arguments to create a Wp_e_submissions_values.
     * @example
     * // Create one Wp_e_submissions_values
     * const Wp_e_submissions_values = await prisma.wp_e_submissions_values.create({
     *   data: {
     *     // ... data to create a Wp_e_submissions_values
     *   }
     * })
     * 
     */
    create<T extends wp_e_submissions_valuesCreateArgs>(args: SelectSubset<T, wp_e_submissions_valuesCreateArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_e_submissions_values.
     * @param {wp_e_submissions_valuesCreateManyArgs} args - Arguments to create many Wp_e_submissions_values.
     * @example
     * // Create many Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_e_submissions_valuesCreateManyArgs>(args?: SelectSubset<T, wp_e_submissions_valuesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_e_submissions_values.
     * @param {wp_e_submissions_valuesDeleteArgs} args - Arguments to delete one Wp_e_submissions_values.
     * @example
     * // Delete one Wp_e_submissions_values
     * const Wp_e_submissions_values = await prisma.wp_e_submissions_values.delete({
     *   where: {
     *     // ... filter to delete one Wp_e_submissions_values
     *   }
     * })
     * 
     */
    delete<T extends wp_e_submissions_valuesDeleteArgs>(args: SelectSubset<T, wp_e_submissions_valuesDeleteArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_e_submissions_values.
     * @param {wp_e_submissions_valuesUpdateArgs} args - Arguments to update one Wp_e_submissions_values.
     * @example
     * // Update one Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_e_submissions_valuesUpdateArgs>(args: SelectSubset<T, wp_e_submissions_valuesUpdateArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_e_submissions_values.
     * @param {wp_e_submissions_valuesDeleteManyArgs} args - Arguments to filter Wp_e_submissions_values to delete.
     * @example
     * // Delete a few Wp_e_submissions_values
     * const { count } = await prisma.wp_e_submissions_values.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_e_submissions_valuesDeleteManyArgs>(args?: SelectSubset<T, wp_e_submissions_valuesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_e_submissions_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_valuesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_e_submissions_valuesUpdateManyArgs>(args: SelectSubset<T, wp_e_submissions_valuesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_e_submissions_values.
     * @param {wp_e_submissions_valuesUpsertArgs} args - Arguments to update or create a Wp_e_submissions_values.
     * @example
     * // Update or create a Wp_e_submissions_values
     * const wp_e_submissions_values = await prisma.wp_e_submissions_values.upsert({
     *   create: {
     *     // ... data to create a Wp_e_submissions_values
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_e_submissions_values we want to update
     *   }
     * })
     */
    upsert<T extends wp_e_submissions_valuesUpsertArgs>(args: SelectSubset<T, wp_e_submissions_valuesUpsertArgs<ExtArgs>>): Prisma__wp_e_submissions_valuesClient<$Result.GetResult<Prisma.$wp_e_submissions_valuesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_e_submissions_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_valuesCountArgs} args - Arguments to filter Wp_e_submissions_values to count.
     * @example
     * // Count the number of Wp_e_submissions_values
     * const count = await prisma.wp_e_submissions_values.count({
     *   where: {
     *     // ... the filter for the Wp_e_submissions_values we want to count
     *   }
     * })
    **/
    count<T extends wp_e_submissions_valuesCountArgs>(
      args?: Subset<T, wp_e_submissions_valuesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_e_submissions_valuesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_e_submissions_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_e_submissions_valuesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_e_submissions_valuesAggregateArgs>(args: Subset<T, Wp_e_submissions_valuesAggregateArgs>): Prisma.PrismaPromise<GetWp_e_submissions_valuesAggregateType<T>>

    /**
     * Group by Wp_e_submissions_values.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_e_submissions_valuesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_e_submissions_valuesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_e_submissions_valuesGroupByArgs['orderBy'] }
        : { orderBy?: wp_e_submissions_valuesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_e_submissions_valuesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_e_submissions_valuesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_e_submissions_values model
   */
  readonly fields: wp_e_submissions_valuesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_e_submissions_values.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_e_submissions_valuesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_e_submissions_values model
   */
  interface wp_e_submissions_valuesFieldRefs {
    readonly id: FieldRef<"wp_e_submissions_values", 'BigInt'>
    readonly submission_id: FieldRef<"wp_e_submissions_values", 'BigInt'>
    readonly key: FieldRef<"wp_e_submissions_values", 'String'>
    readonly value: FieldRef<"wp_e_submissions_values", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_e_submissions_values findUnique
   */
  export type wp_e_submissions_valuesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_values to fetch.
     */
    where: wp_e_submissions_valuesWhereUniqueInput
  }

  /**
   * wp_e_submissions_values findUniqueOrThrow
   */
  export type wp_e_submissions_valuesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_values to fetch.
     */
    where: wp_e_submissions_valuesWhereUniqueInput
  }

  /**
   * wp_e_submissions_values findFirst
   */
  export type wp_e_submissions_valuesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_values to fetch.
     */
    where?: wp_e_submissions_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_values to fetch.
     */
    orderBy?: wp_e_submissions_valuesOrderByWithRelationInput | wp_e_submissions_valuesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_submissions_values.
     */
    cursor?: wp_e_submissions_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_submissions_values.
     */
    distinct?: Wp_e_submissions_valuesScalarFieldEnum | Wp_e_submissions_valuesScalarFieldEnum[]
  }

  /**
   * wp_e_submissions_values findFirstOrThrow
   */
  export type wp_e_submissions_valuesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_values to fetch.
     */
    where?: wp_e_submissions_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_values to fetch.
     */
    orderBy?: wp_e_submissions_valuesOrderByWithRelationInput | wp_e_submissions_valuesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_e_submissions_values.
     */
    cursor?: wp_e_submissions_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_values.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_e_submissions_values.
     */
    distinct?: Wp_e_submissions_valuesScalarFieldEnum | Wp_e_submissions_valuesScalarFieldEnum[]
  }

  /**
   * wp_e_submissions_values findMany
   */
  export type wp_e_submissions_valuesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * Filter, which wp_e_submissions_values to fetch.
     */
    where?: wp_e_submissions_valuesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_e_submissions_values to fetch.
     */
    orderBy?: wp_e_submissions_valuesOrderByWithRelationInput | wp_e_submissions_valuesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_e_submissions_values.
     */
    cursor?: wp_e_submissions_valuesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_e_submissions_values from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_e_submissions_values.
     */
    skip?: number
    distinct?: Wp_e_submissions_valuesScalarFieldEnum | Wp_e_submissions_valuesScalarFieldEnum[]
  }

  /**
   * wp_e_submissions_values create
   */
  export type wp_e_submissions_valuesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_e_submissions_values.
     */
    data?: XOR<wp_e_submissions_valuesCreateInput, wp_e_submissions_valuesUncheckedCreateInput>
  }

  /**
   * wp_e_submissions_values createMany
   */
  export type wp_e_submissions_valuesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_e_submissions_values.
     */
    data: wp_e_submissions_valuesCreateManyInput | wp_e_submissions_valuesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_e_submissions_values update
   */
  export type wp_e_submissions_valuesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_e_submissions_values.
     */
    data: XOR<wp_e_submissions_valuesUpdateInput, wp_e_submissions_valuesUncheckedUpdateInput>
    /**
     * Choose, which wp_e_submissions_values to update.
     */
    where: wp_e_submissions_valuesWhereUniqueInput
  }

  /**
   * wp_e_submissions_values updateMany
   */
  export type wp_e_submissions_valuesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_e_submissions_values.
     */
    data: XOR<wp_e_submissions_valuesUpdateManyMutationInput, wp_e_submissions_valuesUncheckedUpdateManyInput>
    /**
     * Filter which wp_e_submissions_values to update
     */
    where?: wp_e_submissions_valuesWhereInput
    /**
     * Limit how many wp_e_submissions_values to update.
     */
    limit?: number
  }

  /**
   * wp_e_submissions_values upsert
   */
  export type wp_e_submissions_valuesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_e_submissions_values to update in case it exists.
     */
    where: wp_e_submissions_valuesWhereUniqueInput
    /**
     * In case the wp_e_submissions_values found by the `where` argument doesn't exist, create a new wp_e_submissions_values with this data.
     */
    create: XOR<wp_e_submissions_valuesCreateInput, wp_e_submissions_valuesUncheckedCreateInput>
    /**
     * In case the wp_e_submissions_values was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_e_submissions_valuesUpdateInput, wp_e_submissions_valuesUncheckedUpdateInput>
  }

  /**
   * wp_e_submissions_values delete
   */
  export type wp_e_submissions_valuesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
    /**
     * Filter which wp_e_submissions_values to delete.
     */
    where: wp_e_submissions_valuesWhereUniqueInput
  }

  /**
   * wp_e_submissions_values deleteMany
   */
  export type wp_e_submissions_valuesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_e_submissions_values to delete
     */
    where?: wp_e_submissions_valuesWhereInput
    /**
     * Limit how many wp_e_submissions_values to delete.
     */
    limit?: number
  }

  /**
   * wp_e_submissions_values without action
   */
  export type wp_e_submissions_valuesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_e_submissions_values
     */
    select?: wp_e_submissions_valuesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_e_submissions_values
     */
    omit?: wp_e_submissions_valuesOmit<ExtArgs> | null
  }


  /**
   * Model wp_jet_post_types
   */

  export type AggregateWp_jet_post_types = {
    _count: Wp_jet_post_typesCountAggregateOutputType | null
    _avg: Wp_jet_post_typesAvgAggregateOutputType | null
    _sum: Wp_jet_post_typesSumAggregateOutputType | null
    _min: Wp_jet_post_typesMinAggregateOutputType | null
    _max: Wp_jet_post_typesMaxAggregateOutputType | null
  }

  export type Wp_jet_post_typesAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_jet_post_typesSumAggregateOutputType = {
    id: bigint | null
  }

  export type Wp_jet_post_typesMinAggregateOutputType = {
    id: bigint | null
    slug: string | null
    status: string | null
    labels: string | null
    args: string | null
    meta_fields: string | null
  }

  export type Wp_jet_post_typesMaxAggregateOutputType = {
    id: bigint | null
    slug: string | null
    status: string | null
    labels: string | null
    args: string | null
    meta_fields: string | null
  }

  export type Wp_jet_post_typesCountAggregateOutputType = {
    id: number
    slug: number
    status: number
    labels: number
    args: number
    meta_fields: number
    _all: number
  }


  export type Wp_jet_post_typesAvgAggregateInputType = {
    id?: true
  }

  export type Wp_jet_post_typesSumAggregateInputType = {
    id?: true
  }

  export type Wp_jet_post_typesMinAggregateInputType = {
    id?: true
    slug?: true
    status?: true
    labels?: true
    args?: true
    meta_fields?: true
  }

  export type Wp_jet_post_typesMaxAggregateInputType = {
    id?: true
    slug?: true
    status?: true
    labels?: true
    args?: true
    meta_fields?: true
  }

  export type Wp_jet_post_typesCountAggregateInputType = {
    id?: true
    slug?: true
    status?: true
    labels?: true
    args?: true
    meta_fields?: true
    _all?: true
  }

  export type Wp_jet_post_typesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_jet_post_types to aggregate.
     */
    where?: wp_jet_post_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_post_types to fetch.
     */
    orderBy?: wp_jet_post_typesOrderByWithRelationInput | wp_jet_post_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_jet_post_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_post_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_post_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_jet_post_types
    **/
    _count?: true | Wp_jet_post_typesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_jet_post_typesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_jet_post_typesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_jet_post_typesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_jet_post_typesMaxAggregateInputType
  }

  export type GetWp_jet_post_typesAggregateType<T extends Wp_jet_post_typesAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_jet_post_types]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_jet_post_types[P]>
      : GetScalarType<T[P], AggregateWp_jet_post_types[P]>
  }




  export type wp_jet_post_typesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_jet_post_typesWhereInput
    orderBy?: wp_jet_post_typesOrderByWithAggregationInput | wp_jet_post_typesOrderByWithAggregationInput[]
    by: Wp_jet_post_typesScalarFieldEnum[] | Wp_jet_post_typesScalarFieldEnum
    having?: wp_jet_post_typesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_jet_post_typesCountAggregateInputType | true
    _avg?: Wp_jet_post_typesAvgAggregateInputType
    _sum?: Wp_jet_post_typesSumAggregateInputType
    _min?: Wp_jet_post_typesMinAggregateInputType
    _max?: Wp_jet_post_typesMaxAggregateInputType
  }

  export type Wp_jet_post_typesGroupByOutputType = {
    id: bigint
    slug: string | null
    status: string | null
    labels: string | null
    args: string | null
    meta_fields: string | null
    _count: Wp_jet_post_typesCountAggregateOutputType | null
    _avg: Wp_jet_post_typesAvgAggregateOutputType | null
    _sum: Wp_jet_post_typesSumAggregateOutputType | null
    _min: Wp_jet_post_typesMinAggregateOutputType | null
    _max: Wp_jet_post_typesMaxAggregateOutputType | null
  }

  type GetWp_jet_post_typesGroupByPayload<T extends wp_jet_post_typesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_jet_post_typesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_jet_post_typesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_jet_post_typesGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_jet_post_typesGroupByOutputType[P]>
        }
      >
    >


  export type wp_jet_post_typesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    status?: boolean
    labels?: boolean
    args?: boolean
    meta_fields?: boolean
  }, ExtArgs["result"]["wp_jet_post_types"]>



  export type wp_jet_post_typesSelectScalar = {
    id?: boolean
    slug?: boolean
    status?: boolean
    labels?: boolean
    args?: boolean
    meta_fields?: boolean
  }

  export type wp_jet_post_typesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "slug" | "status" | "labels" | "args" | "meta_fields", ExtArgs["result"]["wp_jet_post_types"]>

  export type $wp_jet_post_typesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_jet_post_types"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      slug: string | null
      status: string | null
      labels: string | null
      args: string | null
      meta_fields: string | null
    }, ExtArgs["result"]["wp_jet_post_types"]>
    composites: {}
  }

  type wp_jet_post_typesGetPayload<S extends boolean | null | undefined | wp_jet_post_typesDefaultArgs> = $Result.GetResult<Prisma.$wp_jet_post_typesPayload, S>

  type wp_jet_post_typesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_jet_post_typesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_jet_post_typesCountAggregateInputType | true
    }

  export interface wp_jet_post_typesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_jet_post_types'], meta: { name: 'wp_jet_post_types' } }
    /**
     * Find zero or one Wp_jet_post_types that matches the filter.
     * @param {wp_jet_post_typesFindUniqueArgs} args - Arguments to find a Wp_jet_post_types
     * @example
     * // Get one Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_jet_post_typesFindUniqueArgs>(args: SelectSubset<T, wp_jet_post_typesFindUniqueArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_jet_post_types that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_jet_post_typesFindUniqueOrThrowArgs} args - Arguments to find a Wp_jet_post_types
     * @example
     * // Get one Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_jet_post_typesFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_jet_post_typesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_jet_post_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_post_typesFindFirstArgs} args - Arguments to find a Wp_jet_post_types
     * @example
     * // Get one Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_jet_post_typesFindFirstArgs>(args?: SelectSubset<T, wp_jet_post_typesFindFirstArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_jet_post_types that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_post_typesFindFirstOrThrowArgs} args - Arguments to find a Wp_jet_post_types
     * @example
     * // Get one Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_jet_post_typesFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_jet_post_typesFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_jet_post_types that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_post_typesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.findMany()
     * 
     * // Get first 10 Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_jet_post_typesWithIdOnly = await prisma.wp_jet_post_types.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_jet_post_typesFindManyArgs>(args?: SelectSubset<T, wp_jet_post_typesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_jet_post_types.
     * @param {wp_jet_post_typesCreateArgs} args - Arguments to create a Wp_jet_post_types.
     * @example
     * // Create one Wp_jet_post_types
     * const Wp_jet_post_types = await prisma.wp_jet_post_types.create({
     *   data: {
     *     // ... data to create a Wp_jet_post_types
     *   }
     * })
     * 
     */
    create<T extends wp_jet_post_typesCreateArgs>(args: SelectSubset<T, wp_jet_post_typesCreateArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_jet_post_types.
     * @param {wp_jet_post_typesCreateManyArgs} args - Arguments to create many Wp_jet_post_types.
     * @example
     * // Create many Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_jet_post_typesCreateManyArgs>(args?: SelectSubset<T, wp_jet_post_typesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_jet_post_types.
     * @param {wp_jet_post_typesDeleteArgs} args - Arguments to delete one Wp_jet_post_types.
     * @example
     * // Delete one Wp_jet_post_types
     * const Wp_jet_post_types = await prisma.wp_jet_post_types.delete({
     *   where: {
     *     // ... filter to delete one Wp_jet_post_types
     *   }
     * })
     * 
     */
    delete<T extends wp_jet_post_typesDeleteArgs>(args: SelectSubset<T, wp_jet_post_typesDeleteArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_jet_post_types.
     * @param {wp_jet_post_typesUpdateArgs} args - Arguments to update one Wp_jet_post_types.
     * @example
     * // Update one Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_jet_post_typesUpdateArgs>(args: SelectSubset<T, wp_jet_post_typesUpdateArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_jet_post_types.
     * @param {wp_jet_post_typesDeleteManyArgs} args - Arguments to filter Wp_jet_post_types to delete.
     * @example
     * // Delete a few Wp_jet_post_types
     * const { count } = await prisma.wp_jet_post_types.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_jet_post_typesDeleteManyArgs>(args?: SelectSubset<T, wp_jet_post_typesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_jet_post_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_post_typesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_jet_post_typesUpdateManyArgs>(args: SelectSubset<T, wp_jet_post_typesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_jet_post_types.
     * @param {wp_jet_post_typesUpsertArgs} args - Arguments to update or create a Wp_jet_post_types.
     * @example
     * // Update or create a Wp_jet_post_types
     * const wp_jet_post_types = await prisma.wp_jet_post_types.upsert({
     *   create: {
     *     // ... data to create a Wp_jet_post_types
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_jet_post_types we want to update
     *   }
     * })
     */
    upsert<T extends wp_jet_post_typesUpsertArgs>(args: SelectSubset<T, wp_jet_post_typesUpsertArgs<ExtArgs>>): Prisma__wp_jet_post_typesClient<$Result.GetResult<Prisma.$wp_jet_post_typesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_jet_post_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_post_typesCountArgs} args - Arguments to filter Wp_jet_post_types to count.
     * @example
     * // Count the number of Wp_jet_post_types
     * const count = await prisma.wp_jet_post_types.count({
     *   where: {
     *     // ... the filter for the Wp_jet_post_types we want to count
     *   }
     * })
    **/
    count<T extends wp_jet_post_typesCountArgs>(
      args?: Subset<T, wp_jet_post_typesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_jet_post_typesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_jet_post_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_jet_post_typesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_jet_post_typesAggregateArgs>(args: Subset<T, Wp_jet_post_typesAggregateArgs>): Prisma.PrismaPromise<GetWp_jet_post_typesAggregateType<T>>

    /**
     * Group by Wp_jet_post_types.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_post_typesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_jet_post_typesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_jet_post_typesGroupByArgs['orderBy'] }
        : { orderBy?: wp_jet_post_typesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_jet_post_typesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_jet_post_typesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_jet_post_types model
   */
  readonly fields: wp_jet_post_typesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_jet_post_types.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_jet_post_typesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_jet_post_types model
   */
  interface wp_jet_post_typesFieldRefs {
    readonly id: FieldRef<"wp_jet_post_types", 'BigInt'>
    readonly slug: FieldRef<"wp_jet_post_types", 'String'>
    readonly status: FieldRef<"wp_jet_post_types", 'String'>
    readonly labels: FieldRef<"wp_jet_post_types", 'String'>
    readonly args: FieldRef<"wp_jet_post_types", 'String'>
    readonly meta_fields: FieldRef<"wp_jet_post_types", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_jet_post_types findUnique
   */
  export type wp_jet_post_typesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_post_types to fetch.
     */
    where: wp_jet_post_typesWhereUniqueInput
  }

  /**
   * wp_jet_post_types findUniqueOrThrow
   */
  export type wp_jet_post_typesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_post_types to fetch.
     */
    where: wp_jet_post_typesWhereUniqueInput
  }

  /**
   * wp_jet_post_types findFirst
   */
  export type wp_jet_post_typesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_post_types to fetch.
     */
    where?: wp_jet_post_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_post_types to fetch.
     */
    orderBy?: wp_jet_post_typesOrderByWithRelationInput | wp_jet_post_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_jet_post_types.
     */
    cursor?: wp_jet_post_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_post_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_post_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_jet_post_types.
     */
    distinct?: Wp_jet_post_typesScalarFieldEnum | Wp_jet_post_typesScalarFieldEnum[]
  }

  /**
   * wp_jet_post_types findFirstOrThrow
   */
  export type wp_jet_post_typesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_post_types to fetch.
     */
    where?: wp_jet_post_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_post_types to fetch.
     */
    orderBy?: wp_jet_post_typesOrderByWithRelationInput | wp_jet_post_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_jet_post_types.
     */
    cursor?: wp_jet_post_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_post_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_post_types.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_jet_post_types.
     */
    distinct?: Wp_jet_post_typesScalarFieldEnum | Wp_jet_post_typesScalarFieldEnum[]
  }

  /**
   * wp_jet_post_types findMany
   */
  export type wp_jet_post_typesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_post_types to fetch.
     */
    where?: wp_jet_post_typesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_post_types to fetch.
     */
    orderBy?: wp_jet_post_typesOrderByWithRelationInput | wp_jet_post_typesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_jet_post_types.
     */
    cursor?: wp_jet_post_typesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_post_types from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_post_types.
     */
    skip?: number
    distinct?: Wp_jet_post_typesScalarFieldEnum | Wp_jet_post_typesScalarFieldEnum[]
  }

  /**
   * wp_jet_post_types create
   */
  export type wp_jet_post_typesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_jet_post_types.
     */
    data?: XOR<wp_jet_post_typesCreateInput, wp_jet_post_typesUncheckedCreateInput>
  }

  /**
   * wp_jet_post_types createMany
   */
  export type wp_jet_post_typesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_jet_post_types.
     */
    data: wp_jet_post_typesCreateManyInput | wp_jet_post_typesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_jet_post_types update
   */
  export type wp_jet_post_typesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_jet_post_types.
     */
    data: XOR<wp_jet_post_typesUpdateInput, wp_jet_post_typesUncheckedUpdateInput>
    /**
     * Choose, which wp_jet_post_types to update.
     */
    where: wp_jet_post_typesWhereUniqueInput
  }

  /**
   * wp_jet_post_types updateMany
   */
  export type wp_jet_post_typesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_jet_post_types.
     */
    data: XOR<wp_jet_post_typesUpdateManyMutationInput, wp_jet_post_typesUncheckedUpdateManyInput>
    /**
     * Filter which wp_jet_post_types to update
     */
    where?: wp_jet_post_typesWhereInput
    /**
     * Limit how many wp_jet_post_types to update.
     */
    limit?: number
  }

  /**
   * wp_jet_post_types upsert
   */
  export type wp_jet_post_typesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_jet_post_types to update in case it exists.
     */
    where: wp_jet_post_typesWhereUniqueInput
    /**
     * In case the wp_jet_post_types found by the `where` argument doesn't exist, create a new wp_jet_post_types with this data.
     */
    create: XOR<wp_jet_post_typesCreateInput, wp_jet_post_typesUncheckedCreateInput>
    /**
     * In case the wp_jet_post_types was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_jet_post_typesUpdateInput, wp_jet_post_typesUncheckedUpdateInput>
  }

  /**
   * wp_jet_post_types delete
   */
  export type wp_jet_post_typesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
    /**
     * Filter which wp_jet_post_types to delete.
     */
    where: wp_jet_post_typesWhereUniqueInput
  }

  /**
   * wp_jet_post_types deleteMany
   */
  export type wp_jet_post_typesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_jet_post_types to delete
     */
    where?: wp_jet_post_typesWhereInput
    /**
     * Limit how many wp_jet_post_types to delete.
     */
    limit?: number
  }

  /**
   * wp_jet_post_types without action
   */
  export type wp_jet_post_typesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_post_types
     */
    select?: wp_jet_post_typesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_post_types
     */
    omit?: wp_jet_post_typesOmit<ExtArgs> | null
  }


  /**
   * Model wp_jet_smart_filters_indexer
   */

  export type AggregateWp_jet_smart_filters_indexer = {
    _count: Wp_jet_smart_filters_indexerCountAggregateOutputType | null
    _avg: Wp_jet_smart_filters_indexerAvgAggregateOutputType | null
    _sum: Wp_jet_smart_filters_indexerSumAggregateOutputType | null
    _min: Wp_jet_smart_filters_indexerMinAggregateOutputType | null
    _max: Wp_jet_smart_filters_indexerMaxAggregateOutputType | null
  }

  export type Wp_jet_smart_filters_indexerAvgAggregateOutputType = {
    id: number | null
    item_id: number | null
  }

  export type Wp_jet_smart_filters_indexerSumAggregateOutputType = {
    id: number | null
    item_id: number | null
  }

  export type Wp_jet_smart_filters_indexerMinAggregateOutputType = {
    id: number | null
    type: string | null
    item_id: number | null
    item_query: string | null
    item_key: string | null
    item_value: string | null
  }

  export type Wp_jet_smart_filters_indexerMaxAggregateOutputType = {
    id: number | null
    type: string | null
    item_id: number | null
    item_query: string | null
    item_key: string | null
    item_value: string | null
  }

  export type Wp_jet_smart_filters_indexerCountAggregateOutputType = {
    id: number
    type: number
    item_id: number
    item_query: number
    item_key: number
    item_value: number
    _all: number
  }


  export type Wp_jet_smart_filters_indexerAvgAggregateInputType = {
    id?: true
    item_id?: true
  }

  export type Wp_jet_smart_filters_indexerSumAggregateInputType = {
    id?: true
    item_id?: true
  }

  export type Wp_jet_smart_filters_indexerMinAggregateInputType = {
    id?: true
    type?: true
    item_id?: true
    item_query?: true
    item_key?: true
    item_value?: true
  }

  export type Wp_jet_smart_filters_indexerMaxAggregateInputType = {
    id?: true
    type?: true
    item_id?: true
    item_query?: true
    item_key?: true
    item_value?: true
  }

  export type Wp_jet_smart_filters_indexerCountAggregateInputType = {
    id?: true
    type?: true
    item_id?: true
    item_query?: true
    item_key?: true
    item_value?: true
    _all?: true
  }

  export type Wp_jet_smart_filters_indexerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_jet_smart_filters_indexer to aggregate.
     */
    where?: wp_jet_smart_filters_indexerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_smart_filters_indexers to fetch.
     */
    orderBy?: wp_jet_smart_filters_indexerOrderByWithRelationInput | wp_jet_smart_filters_indexerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_jet_smart_filters_indexerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_smart_filters_indexers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_smart_filters_indexers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_jet_smart_filters_indexers
    **/
    _count?: true | Wp_jet_smart_filters_indexerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_jet_smart_filters_indexerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_jet_smart_filters_indexerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_jet_smart_filters_indexerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_jet_smart_filters_indexerMaxAggregateInputType
  }

  export type GetWp_jet_smart_filters_indexerAggregateType<T extends Wp_jet_smart_filters_indexerAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_jet_smart_filters_indexer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_jet_smart_filters_indexer[P]>
      : GetScalarType<T[P], AggregateWp_jet_smart_filters_indexer[P]>
  }




  export type wp_jet_smart_filters_indexerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_jet_smart_filters_indexerWhereInput
    orderBy?: wp_jet_smart_filters_indexerOrderByWithAggregationInput | wp_jet_smart_filters_indexerOrderByWithAggregationInput[]
    by: Wp_jet_smart_filters_indexerScalarFieldEnum[] | Wp_jet_smart_filters_indexerScalarFieldEnum
    having?: wp_jet_smart_filters_indexerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_jet_smart_filters_indexerCountAggregateInputType | true
    _avg?: Wp_jet_smart_filters_indexerAvgAggregateInputType
    _sum?: Wp_jet_smart_filters_indexerSumAggregateInputType
    _min?: Wp_jet_smart_filters_indexerMinAggregateInputType
    _max?: Wp_jet_smart_filters_indexerMaxAggregateInputType
  }

  export type Wp_jet_smart_filters_indexerGroupByOutputType = {
    id: number
    type: string | null
    item_id: number | null
    item_query: string | null
    item_key: string | null
    item_value: string | null
    _count: Wp_jet_smart_filters_indexerCountAggregateOutputType | null
    _avg: Wp_jet_smart_filters_indexerAvgAggregateOutputType | null
    _sum: Wp_jet_smart_filters_indexerSumAggregateOutputType | null
    _min: Wp_jet_smart_filters_indexerMinAggregateOutputType | null
    _max: Wp_jet_smart_filters_indexerMaxAggregateOutputType | null
  }

  type GetWp_jet_smart_filters_indexerGroupByPayload<T extends wp_jet_smart_filters_indexerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_jet_smart_filters_indexerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_jet_smart_filters_indexerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_jet_smart_filters_indexerGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_jet_smart_filters_indexerGroupByOutputType[P]>
        }
      >
    >


  export type wp_jet_smart_filters_indexerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    item_id?: boolean
    item_query?: boolean
    item_key?: boolean
    item_value?: boolean
  }, ExtArgs["result"]["wp_jet_smart_filters_indexer"]>



  export type wp_jet_smart_filters_indexerSelectScalar = {
    id?: boolean
    type?: boolean
    item_id?: boolean
    item_query?: boolean
    item_key?: boolean
    item_value?: boolean
  }

  export type wp_jet_smart_filters_indexerOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "item_id" | "item_query" | "item_key" | "item_value", ExtArgs["result"]["wp_jet_smart_filters_indexer"]>

  export type $wp_jet_smart_filters_indexerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_jet_smart_filters_indexer"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string | null
      item_id: number | null
      item_query: string | null
      item_key: string | null
      item_value: string | null
    }, ExtArgs["result"]["wp_jet_smart_filters_indexer"]>
    composites: {}
  }

  type wp_jet_smart_filters_indexerGetPayload<S extends boolean | null | undefined | wp_jet_smart_filters_indexerDefaultArgs> = $Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload, S>

  type wp_jet_smart_filters_indexerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_jet_smart_filters_indexerFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_jet_smart_filters_indexerCountAggregateInputType | true
    }

  export interface wp_jet_smart_filters_indexerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_jet_smart_filters_indexer'], meta: { name: 'wp_jet_smart_filters_indexer' } }
    /**
     * Find zero or one Wp_jet_smart_filters_indexer that matches the filter.
     * @param {wp_jet_smart_filters_indexerFindUniqueArgs} args - Arguments to find a Wp_jet_smart_filters_indexer
     * @example
     * // Get one Wp_jet_smart_filters_indexer
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_jet_smart_filters_indexerFindUniqueArgs>(args: SelectSubset<T, wp_jet_smart_filters_indexerFindUniqueArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_jet_smart_filters_indexer that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_jet_smart_filters_indexerFindUniqueOrThrowArgs} args - Arguments to find a Wp_jet_smart_filters_indexer
     * @example
     * // Get one Wp_jet_smart_filters_indexer
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_jet_smart_filters_indexerFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_jet_smart_filters_indexerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_jet_smart_filters_indexer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_smart_filters_indexerFindFirstArgs} args - Arguments to find a Wp_jet_smart_filters_indexer
     * @example
     * // Get one Wp_jet_smart_filters_indexer
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_jet_smart_filters_indexerFindFirstArgs>(args?: SelectSubset<T, wp_jet_smart_filters_indexerFindFirstArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_jet_smart_filters_indexer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_smart_filters_indexerFindFirstOrThrowArgs} args - Arguments to find a Wp_jet_smart_filters_indexer
     * @example
     * // Get one Wp_jet_smart_filters_indexer
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_jet_smart_filters_indexerFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_jet_smart_filters_indexerFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_jet_smart_filters_indexers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_smart_filters_indexerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_jet_smart_filters_indexers
     * const wp_jet_smart_filters_indexers = await prisma.wp_jet_smart_filters_indexer.findMany()
     * 
     * // Get first 10 Wp_jet_smart_filters_indexers
     * const wp_jet_smart_filters_indexers = await prisma.wp_jet_smart_filters_indexer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_jet_smart_filters_indexerWithIdOnly = await prisma.wp_jet_smart_filters_indexer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_jet_smart_filters_indexerFindManyArgs>(args?: SelectSubset<T, wp_jet_smart_filters_indexerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_jet_smart_filters_indexer.
     * @param {wp_jet_smart_filters_indexerCreateArgs} args - Arguments to create a Wp_jet_smart_filters_indexer.
     * @example
     * // Create one Wp_jet_smart_filters_indexer
     * const Wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.create({
     *   data: {
     *     // ... data to create a Wp_jet_smart_filters_indexer
     *   }
     * })
     * 
     */
    create<T extends wp_jet_smart_filters_indexerCreateArgs>(args: SelectSubset<T, wp_jet_smart_filters_indexerCreateArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_jet_smart_filters_indexers.
     * @param {wp_jet_smart_filters_indexerCreateManyArgs} args - Arguments to create many Wp_jet_smart_filters_indexers.
     * @example
     * // Create many Wp_jet_smart_filters_indexers
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_jet_smart_filters_indexerCreateManyArgs>(args?: SelectSubset<T, wp_jet_smart_filters_indexerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_jet_smart_filters_indexer.
     * @param {wp_jet_smart_filters_indexerDeleteArgs} args - Arguments to delete one Wp_jet_smart_filters_indexer.
     * @example
     * // Delete one Wp_jet_smart_filters_indexer
     * const Wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.delete({
     *   where: {
     *     // ... filter to delete one Wp_jet_smart_filters_indexer
     *   }
     * })
     * 
     */
    delete<T extends wp_jet_smart_filters_indexerDeleteArgs>(args: SelectSubset<T, wp_jet_smart_filters_indexerDeleteArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_jet_smart_filters_indexer.
     * @param {wp_jet_smart_filters_indexerUpdateArgs} args - Arguments to update one Wp_jet_smart_filters_indexer.
     * @example
     * // Update one Wp_jet_smart_filters_indexer
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_jet_smart_filters_indexerUpdateArgs>(args: SelectSubset<T, wp_jet_smart_filters_indexerUpdateArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_jet_smart_filters_indexers.
     * @param {wp_jet_smart_filters_indexerDeleteManyArgs} args - Arguments to filter Wp_jet_smart_filters_indexers to delete.
     * @example
     * // Delete a few Wp_jet_smart_filters_indexers
     * const { count } = await prisma.wp_jet_smart_filters_indexer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_jet_smart_filters_indexerDeleteManyArgs>(args?: SelectSubset<T, wp_jet_smart_filters_indexerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_jet_smart_filters_indexers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_smart_filters_indexerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_jet_smart_filters_indexers
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_jet_smart_filters_indexerUpdateManyArgs>(args: SelectSubset<T, wp_jet_smart_filters_indexerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_jet_smart_filters_indexer.
     * @param {wp_jet_smart_filters_indexerUpsertArgs} args - Arguments to update or create a Wp_jet_smart_filters_indexer.
     * @example
     * // Update or create a Wp_jet_smart_filters_indexer
     * const wp_jet_smart_filters_indexer = await prisma.wp_jet_smart_filters_indexer.upsert({
     *   create: {
     *     // ... data to create a Wp_jet_smart_filters_indexer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_jet_smart_filters_indexer we want to update
     *   }
     * })
     */
    upsert<T extends wp_jet_smart_filters_indexerUpsertArgs>(args: SelectSubset<T, wp_jet_smart_filters_indexerUpsertArgs<ExtArgs>>): Prisma__wp_jet_smart_filters_indexerClient<$Result.GetResult<Prisma.$wp_jet_smart_filters_indexerPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_jet_smart_filters_indexers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_smart_filters_indexerCountArgs} args - Arguments to filter Wp_jet_smart_filters_indexers to count.
     * @example
     * // Count the number of Wp_jet_smart_filters_indexers
     * const count = await prisma.wp_jet_smart_filters_indexer.count({
     *   where: {
     *     // ... the filter for the Wp_jet_smart_filters_indexers we want to count
     *   }
     * })
    **/
    count<T extends wp_jet_smart_filters_indexerCountArgs>(
      args?: Subset<T, wp_jet_smart_filters_indexerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_jet_smart_filters_indexerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_jet_smart_filters_indexer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_jet_smart_filters_indexerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_jet_smart_filters_indexerAggregateArgs>(args: Subset<T, Wp_jet_smart_filters_indexerAggregateArgs>): Prisma.PrismaPromise<GetWp_jet_smart_filters_indexerAggregateType<T>>

    /**
     * Group by Wp_jet_smart_filters_indexer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_smart_filters_indexerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_jet_smart_filters_indexerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_jet_smart_filters_indexerGroupByArgs['orderBy'] }
        : { orderBy?: wp_jet_smart_filters_indexerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_jet_smart_filters_indexerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_jet_smart_filters_indexerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_jet_smart_filters_indexer model
   */
  readonly fields: wp_jet_smart_filters_indexerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_jet_smart_filters_indexer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_jet_smart_filters_indexerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_jet_smart_filters_indexer model
   */
  interface wp_jet_smart_filters_indexerFieldRefs {
    readonly id: FieldRef<"wp_jet_smart_filters_indexer", 'Int'>
    readonly type: FieldRef<"wp_jet_smart_filters_indexer", 'String'>
    readonly item_id: FieldRef<"wp_jet_smart_filters_indexer", 'Int'>
    readonly item_query: FieldRef<"wp_jet_smart_filters_indexer", 'String'>
    readonly item_key: FieldRef<"wp_jet_smart_filters_indexer", 'String'>
    readonly item_value: FieldRef<"wp_jet_smart_filters_indexer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_jet_smart_filters_indexer findUnique
   */
  export type wp_jet_smart_filters_indexerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_smart_filters_indexer to fetch.
     */
    where: wp_jet_smart_filters_indexerWhereUniqueInput
  }

  /**
   * wp_jet_smart_filters_indexer findUniqueOrThrow
   */
  export type wp_jet_smart_filters_indexerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_smart_filters_indexer to fetch.
     */
    where: wp_jet_smart_filters_indexerWhereUniqueInput
  }

  /**
   * wp_jet_smart_filters_indexer findFirst
   */
  export type wp_jet_smart_filters_indexerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_smart_filters_indexer to fetch.
     */
    where?: wp_jet_smart_filters_indexerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_smart_filters_indexers to fetch.
     */
    orderBy?: wp_jet_smart_filters_indexerOrderByWithRelationInput | wp_jet_smart_filters_indexerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_jet_smart_filters_indexers.
     */
    cursor?: wp_jet_smart_filters_indexerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_smart_filters_indexers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_smart_filters_indexers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_jet_smart_filters_indexers.
     */
    distinct?: Wp_jet_smart_filters_indexerScalarFieldEnum | Wp_jet_smart_filters_indexerScalarFieldEnum[]
  }

  /**
   * wp_jet_smart_filters_indexer findFirstOrThrow
   */
  export type wp_jet_smart_filters_indexerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_smart_filters_indexer to fetch.
     */
    where?: wp_jet_smart_filters_indexerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_smart_filters_indexers to fetch.
     */
    orderBy?: wp_jet_smart_filters_indexerOrderByWithRelationInput | wp_jet_smart_filters_indexerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_jet_smart_filters_indexers.
     */
    cursor?: wp_jet_smart_filters_indexerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_smart_filters_indexers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_smart_filters_indexers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_jet_smart_filters_indexers.
     */
    distinct?: Wp_jet_smart_filters_indexerScalarFieldEnum | Wp_jet_smart_filters_indexerScalarFieldEnum[]
  }

  /**
   * wp_jet_smart_filters_indexer findMany
   */
  export type wp_jet_smart_filters_indexerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_smart_filters_indexers to fetch.
     */
    where?: wp_jet_smart_filters_indexerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_smart_filters_indexers to fetch.
     */
    orderBy?: wp_jet_smart_filters_indexerOrderByWithRelationInput | wp_jet_smart_filters_indexerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_jet_smart_filters_indexers.
     */
    cursor?: wp_jet_smart_filters_indexerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_smart_filters_indexers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_smart_filters_indexers.
     */
    skip?: number
    distinct?: Wp_jet_smart_filters_indexerScalarFieldEnum | Wp_jet_smart_filters_indexerScalarFieldEnum[]
  }

  /**
   * wp_jet_smart_filters_indexer create
   */
  export type wp_jet_smart_filters_indexerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_jet_smart_filters_indexer.
     */
    data?: XOR<wp_jet_smart_filters_indexerCreateInput, wp_jet_smart_filters_indexerUncheckedCreateInput>
  }

  /**
   * wp_jet_smart_filters_indexer createMany
   */
  export type wp_jet_smart_filters_indexerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_jet_smart_filters_indexers.
     */
    data: wp_jet_smart_filters_indexerCreateManyInput | wp_jet_smart_filters_indexerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_jet_smart_filters_indexer update
   */
  export type wp_jet_smart_filters_indexerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_jet_smart_filters_indexer.
     */
    data: XOR<wp_jet_smart_filters_indexerUpdateInput, wp_jet_smart_filters_indexerUncheckedUpdateInput>
    /**
     * Choose, which wp_jet_smart_filters_indexer to update.
     */
    where: wp_jet_smart_filters_indexerWhereUniqueInput
  }

  /**
   * wp_jet_smart_filters_indexer updateMany
   */
  export type wp_jet_smart_filters_indexerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_jet_smart_filters_indexers.
     */
    data: XOR<wp_jet_smart_filters_indexerUpdateManyMutationInput, wp_jet_smart_filters_indexerUncheckedUpdateManyInput>
    /**
     * Filter which wp_jet_smart_filters_indexers to update
     */
    where?: wp_jet_smart_filters_indexerWhereInput
    /**
     * Limit how many wp_jet_smart_filters_indexers to update.
     */
    limit?: number
  }

  /**
   * wp_jet_smart_filters_indexer upsert
   */
  export type wp_jet_smart_filters_indexerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_jet_smart_filters_indexer to update in case it exists.
     */
    where: wp_jet_smart_filters_indexerWhereUniqueInput
    /**
     * In case the wp_jet_smart_filters_indexer found by the `where` argument doesn't exist, create a new wp_jet_smart_filters_indexer with this data.
     */
    create: XOR<wp_jet_smart_filters_indexerCreateInput, wp_jet_smart_filters_indexerUncheckedCreateInput>
    /**
     * In case the wp_jet_smart_filters_indexer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_jet_smart_filters_indexerUpdateInput, wp_jet_smart_filters_indexerUncheckedUpdateInput>
  }

  /**
   * wp_jet_smart_filters_indexer delete
   */
  export type wp_jet_smart_filters_indexerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
    /**
     * Filter which wp_jet_smart_filters_indexer to delete.
     */
    where: wp_jet_smart_filters_indexerWhereUniqueInput
  }

  /**
   * wp_jet_smart_filters_indexer deleteMany
   */
  export type wp_jet_smart_filters_indexerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_jet_smart_filters_indexers to delete
     */
    where?: wp_jet_smart_filters_indexerWhereInput
    /**
     * Limit how many wp_jet_smart_filters_indexers to delete.
     */
    limit?: number
  }

  /**
   * wp_jet_smart_filters_indexer without action
   */
  export type wp_jet_smart_filters_indexerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_smart_filters_indexer
     */
    select?: wp_jet_smart_filters_indexerSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_smart_filters_indexer
     */
    omit?: wp_jet_smart_filters_indexerOmit<ExtArgs> | null
  }


  /**
   * Model wp_jet_taxonomies
   */

  export type AggregateWp_jet_taxonomies = {
    _count: Wp_jet_taxonomiesCountAggregateOutputType | null
    _avg: Wp_jet_taxonomiesAvgAggregateOutputType | null
    _sum: Wp_jet_taxonomiesSumAggregateOutputType | null
    _min: Wp_jet_taxonomiesMinAggregateOutputType | null
    _max: Wp_jet_taxonomiesMaxAggregateOutputType | null
  }

  export type Wp_jet_taxonomiesAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_jet_taxonomiesSumAggregateOutputType = {
    id: bigint | null
  }

  export type Wp_jet_taxonomiesMinAggregateOutputType = {
    id: bigint | null
    slug: string | null
    object_type: string | null
    status: string | null
    labels: string | null
    args: string | null
    meta_fields: string | null
  }

  export type Wp_jet_taxonomiesMaxAggregateOutputType = {
    id: bigint | null
    slug: string | null
    object_type: string | null
    status: string | null
    labels: string | null
    args: string | null
    meta_fields: string | null
  }

  export type Wp_jet_taxonomiesCountAggregateOutputType = {
    id: number
    slug: number
    object_type: number
    status: number
    labels: number
    args: number
    meta_fields: number
    _all: number
  }


  export type Wp_jet_taxonomiesAvgAggregateInputType = {
    id?: true
  }

  export type Wp_jet_taxonomiesSumAggregateInputType = {
    id?: true
  }

  export type Wp_jet_taxonomiesMinAggregateInputType = {
    id?: true
    slug?: true
    object_type?: true
    status?: true
    labels?: true
    args?: true
    meta_fields?: true
  }

  export type Wp_jet_taxonomiesMaxAggregateInputType = {
    id?: true
    slug?: true
    object_type?: true
    status?: true
    labels?: true
    args?: true
    meta_fields?: true
  }

  export type Wp_jet_taxonomiesCountAggregateInputType = {
    id?: true
    slug?: true
    object_type?: true
    status?: true
    labels?: true
    args?: true
    meta_fields?: true
    _all?: true
  }

  export type Wp_jet_taxonomiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_jet_taxonomies to aggregate.
     */
    where?: wp_jet_taxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_taxonomies to fetch.
     */
    orderBy?: wp_jet_taxonomiesOrderByWithRelationInput | wp_jet_taxonomiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_jet_taxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_jet_taxonomies
    **/
    _count?: true | Wp_jet_taxonomiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_jet_taxonomiesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_jet_taxonomiesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_jet_taxonomiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_jet_taxonomiesMaxAggregateInputType
  }

  export type GetWp_jet_taxonomiesAggregateType<T extends Wp_jet_taxonomiesAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_jet_taxonomies]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_jet_taxonomies[P]>
      : GetScalarType<T[P], AggregateWp_jet_taxonomies[P]>
  }




  export type wp_jet_taxonomiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_jet_taxonomiesWhereInput
    orderBy?: wp_jet_taxonomiesOrderByWithAggregationInput | wp_jet_taxonomiesOrderByWithAggregationInput[]
    by: Wp_jet_taxonomiesScalarFieldEnum[] | Wp_jet_taxonomiesScalarFieldEnum
    having?: wp_jet_taxonomiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_jet_taxonomiesCountAggregateInputType | true
    _avg?: Wp_jet_taxonomiesAvgAggregateInputType
    _sum?: Wp_jet_taxonomiesSumAggregateInputType
    _min?: Wp_jet_taxonomiesMinAggregateInputType
    _max?: Wp_jet_taxonomiesMaxAggregateInputType
  }

  export type Wp_jet_taxonomiesGroupByOutputType = {
    id: bigint
    slug: string | null
    object_type: string | null
    status: string | null
    labels: string | null
    args: string | null
    meta_fields: string | null
    _count: Wp_jet_taxonomiesCountAggregateOutputType | null
    _avg: Wp_jet_taxonomiesAvgAggregateOutputType | null
    _sum: Wp_jet_taxonomiesSumAggregateOutputType | null
    _min: Wp_jet_taxonomiesMinAggregateOutputType | null
    _max: Wp_jet_taxonomiesMaxAggregateOutputType | null
  }

  type GetWp_jet_taxonomiesGroupByPayload<T extends wp_jet_taxonomiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_jet_taxonomiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_jet_taxonomiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_jet_taxonomiesGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_jet_taxonomiesGroupByOutputType[P]>
        }
      >
    >


  export type wp_jet_taxonomiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    slug?: boolean
    object_type?: boolean
    status?: boolean
    labels?: boolean
    args?: boolean
    meta_fields?: boolean
  }, ExtArgs["result"]["wp_jet_taxonomies"]>



  export type wp_jet_taxonomiesSelectScalar = {
    id?: boolean
    slug?: boolean
    object_type?: boolean
    status?: boolean
    labels?: boolean
    args?: boolean
    meta_fields?: boolean
  }

  export type wp_jet_taxonomiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "slug" | "object_type" | "status" | "labels" | "args" | "meta_fields", ExtArgs["result"]["wp_jet_taxonomies"]>

  export type $wp_jet_taxonomiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_jet_taxonomies"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      slug: string | null
      object_type: string | null
      status: string | null
      labels: string | null
      args: string | null
      meta_fields: string | null
    }, ExtArgs["result"]["wp_jet_taxonomies"]>
    composites: {}
  }

  type wp_jet_taxonomiesGetPayload<S extends boolean | null | undefined | wp_jet_taxonomiesDefaultArgs> = $Result.GetResult<Prisma.$wp_jet_taxonomiesPayload, S>

  type wp_jet_taxonomiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_jet_taxonomiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_jet_taxonomiesCountAggregateInputType | true
    }

  export interface wp_jet_taxonomiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_jet_taxonomies'], meta: { name: 'wp_jet_taxonomies' } }
    /**
     * Find zero or one Wp_jet_taxonomies that matches the filter.
     * @param {wp_jet_taxonomiesFindUniqueArgs} args - Arguments to find a Wp_jet_taxonomies
     * @example
     * // Get one Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_jet_taxonomiesFindUniqueArgs>(args: SelectSubset<T, wp_jet_taxonomiesFindUniqueArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_jet_taxonomies that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_jet_taxonomiesFindUniqueOrThrowArgs} args - Arguments to find a Wp_jet_taxonomies
     * @example
     * // Get one Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_jet_taxonomiesFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_jet_taxonomiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_jet_taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_taxonomiesFindFirstArgs} args - Arguments to find a Wp_jet_taxonomies
     * @example
     * // Get one Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_jet_taxonomiesFindFirstArgs>(args?: SelectSubset<T, wp_jet_taxonomiesFindFirstArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_jet_taxonomies that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_taxonomiesFindFirstOrThrowArgs} args - Arguments to find a Wp_jet_taxonomies
     * @example
     * // Get one Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_jet_taxonomiesFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_jet_taxonomiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_jet_taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_taxonomiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.findMany()
     * 
     * // Get first 10 Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_jet_taxonomiesWithIdOnly = await prisma.wp_jet_taxonomies.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_jet_taxonomiesFindManyArgs>(args?: SelectSubset<T, wp_jet_taxonomiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_jet_taxonomies.
     * @param {wp_jet_taxonomiesCreateArgs} args - Arguments to create a Wp_jet_taxonomies.
     * @example
     * // Create one Wp_jet_taxonomies
     * const Wp_jet_taxonomies = await prisma.wp_jet_taxonomies.create({
     *   data: {
     *     // ... data to create a Wp_jet_taxonomies
     *   }
     * })
     * 
     */
    create<T extends wp_jet_taxonomiesCreateArgs>(args: SelectSubset<T, wp_jet_taxonomiesCreateArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_jet_taxonomies.
     * @param {wp_jet_taxonomiesCreateManyArgs} args - Arguments to create many Wp_jet_taxonomies.
     * @example
     * // Create many Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_jet_taxonomiesCreateManyArgs>(args?: SelectSubset<T, wp_jet_taxonomiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_jet_taxonomies.
     * @param {wp_jet_taxonomiesDeleteArgs} args - Arguments to delete one Wp_jet_taxonomies.
     * @example
     * // Delete one Wp_jet_taxonomies
     * const Wp_jet_taxonomies = await prisma.wp_jet_taxonomies.delete({
     *   where: {
     *     // ... filter to delete one Wp_jet_taxonomies
     *   }
     * })
     * 
     */
    delete<T extends wp_jet_taxonomiesDeleteArgs>(args: SelectSubset<T, wp_jet_taxonomiesDeleteArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_jet_taxonomies.
     * @param {wp_jet_taxonomiesUpdateArgs} args - Arguments to update one Wp_jet_taxonomies.
     * @example
     * // Update one Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_jet_taxonomiesUpdateArgs>(args: SelectSubset<T, wp_jet_taxonomiesUpdateArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_jet_taxonomies.
     * @param {wp_jet_taxonomiesDeleteManyArgs} args - Arguments to filter Wp_jet_taxonomies to delete.
     * @example
     * // Delete a few Wp_jet_taxonomies
     * const { count } = await prisma.wp_jet_taxonomies.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_jet_taxonomiesDeleteManyArgs>(args?: SelectSubset<T, wp_jet_taxonomiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_jet_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_taxonomiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_jet_taxonomiesUpdateManyArgs>(args: SelectSubset<T, wp_jet_taxonomiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_jet_taxonomies.
     * @param {wp_jet_taxonomiesUpsertArgs} args - Arguments to update or create a Wp_jet_taxonomies.
     * @example
     * // Update or create a Wp_jet_taxonomies
     * const wp_jet_taxonomies = await prisma.wp_jet_taxonomies.upsert({
     *   create: {
     *     // ... data to create a Wp_jet_taxonomies
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_jet_taxonomies we want to update
     *   }
     * })
     */
    upsert<T extends wp_jet_taxonomiesUpsertArgs>(args: SelectSubset<T, wp_jet_taxonomiesUpsertArgs<ExtArgs>>): Prisma__wp_jet_taxonomiesClient<$Result.GetResult<Prisma.$wp_jet_taxonomiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_jet_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_taxonomiesCountArgs} args - Arguments to filter Wp_jet_taxonomies to count.
     * @example
     * // Count the number of Wp_jet_taxonomies
     * const count = await prisma.wp_jet_taxonomies.count({
     *   where: {
     *     // ... the filter for the Wp_jet_taxonomies we want to count
     *   }
     * })
    **/
    count<T extends wp_jet_taxonomiesCountArgs>(
      args?: Subset<T, wp_jet_taxonomiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_jet_taxonomiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_jet_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_jet_taxonomiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_jet_taxonomiesAggregateArgs>(args: Subset<T, Wp_jet_taxonomiesAggregateArgs>): Prisma.PrismaPromise<GetWp_jet_taxonomiesAggregateType<T>>

    /**
     * Group by Wp_jet_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_jet_taxonomiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_jet_taxonomiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_jet_taxonomiesGroupByArgs['orderBy'] }
        : { orderBy?: wp_jet_taxonomiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_jet_taxonomiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_jet_taxonomiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_jet_taxonomies model
   */
  readonly fields: wp_jet_taxonomiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_jet_taxonomies.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_jet_taxonomiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_jet_taxonomies model
   */
  interface wp_jet_taxonomiesFieldRefs {
    readonly id: FieldRef<"wp_jet_taxonomies", 'BigInt'>
    readonly slug: FieldRef<"wp_jet_taxonomies", 'String'>
    readonly object_type: FieldRef<"wp_jet_taxonomies", 'String'>
    readonly status: FieldRef<"wp_jet_taxonomies", 'String'>
    readonly labels: FieldRef<"wp_jet_taxonomies", 'String'>
    readonly args: FieldRef<"wp_jet_taxonomies", 'String'>
    readonly meta_fields: FieldRef<"wp_jet_taxonomies", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_jet_taxonomies findUnique
   */
  export type wp_jet_taxonomiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_taxonomies to fetch.
     */
    where: wp_jet_taxonomiesWhereUniqueInput
  }

  /**
   * wp_jet_taxonomies findUniqueOrThrow
   */
  export type wp_jet_taxonomiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_taxonomies to fetch.
     */
    where: wp_jet_taxonomiesWhereUniqueInput
  }

  /**
   * wp_jet_taxonomies findFirst
   */
  export type wp_jet_taxonomiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_taxonomies to fetch.
     */
    where?: wp_jet_taxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_taxonomies to fetch.
     */
    orderBy?: wp_jet_taxonomiesOrderByWithRelationInput | wp_jet_taxonomiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_jet_taxonomies.
     */
    cursor?: wp_jet_taxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_jet_taxonomies.
     */
    distinct?: Wp_jet_taxonomiesScalarFieldEnum | Wp_jet_taxonomiesScalarFieldEnum[]
  }

  /**
   * wp_jet_taxonomies findFirstOrThrow
   */
  export type wp_jet_taxonomiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_taxonomies to fetch.
     */
    where?: wp_jet_taxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_taxonomies to fetch.
     */
    orderBy?: wp_jet_taxonomiesOrderByWithRelationInput | wp_jet_taxonomiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_jet_taxonomies.
     */
    cursor?: wp_jet_taxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_jet_taxonomies.
     */
    distinct?: Wp_jet_taxonomiesScalarFieldEnum | Wp_jet_taxonomiesScalarFieldEnum[]
  }

  /**
   * wp_jet_taxonomies findMany
   */
  export type wp_jet_taxonomiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * Filter, which wp_jet_taxonomies to fetch.
     */
    where?: wp_jet_taxonomiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_jet_taxonomies to fetch.
     */
    orderBy?: wp_jet_taxonomiesOrderByWithRelationInput | wp_jet_taxonomiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_jet_taxonomies.
     */
    cursor?: wp_jet_taxonomiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_jet_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_jet_taxonomies.
     */
    skip?: number
    distinct?: Wp_jet_taxonomiesScalarFieldEnum | Wp_jet_taxonomiesScalarFieldEnum[]
  }

  /**
   * wp_jet_taxonomies create
   */
  export type wp_jet_taxonomiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_jet_taxonomies.
     */
    data?: XOR<wp_jet_taxonomiesCreateInput, wp_jet_taxonomiesUncheckedCreateInput>
  }

  /**
   * wp_jet_taxonomies createMany
   */
  export type wp_jet_taxonomiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_jet_taxonomies.
     */
    data: wp_jet_taxonomiesCreateManyInput | wp_jet_taxonomiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_jet_taxonomies update
   */
  export type wp_jet_taxonomiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_jet_taxonomies.
     */
    data: XOR<wp_jet_taxonomiesUpdateInput, wp_jet_taxonomiesUncheckedUpdateInput>
    /**
     * Choose, which wp_jet_taxonomies to update.
     */
    where: wp_jet_taxonomiesWhereUniqueInput
  }

  /**
   * wp_jet_taxonomies updateMany
   */
  export type wp_jet_taxonomiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_jet_taxonomies.
     */
    data: XOR<wp_jet_taxonomiesUpdateManyMutationInput, wp_jet_taxonomiesUncheckedUpdateManyInput>
    /**
     * Filter which wp_jet_taxonomies to update
     */
    where?: wp_jet_taxonomiesWhereInput
    /**
     * Limit how many wp_jet_taxonomies to update.
     */
    limit?: number
  }

  /**
   * wp_jet_taxonomies upsert
   */
  export type wp_jet_taxonomiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_jet_taxonomies to update in case it exists.
     */
    where: wp_jet_taxonomiesWhereUniqueInput
    /**
     * In case the wp_jet_taxonomies found by the `where` argument doesn't exist, create a new wp_jet_taxonomies with this data.
     */
    create: XOR<wp_jet_taxonomiesCreateInput, wp_jet_taxonomiesUncheckedCreateInput>
    /**
     * In case the wp_jet_taxonomies was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_jet_taxonomiesUpdateInput, wp_jet_taxonomiesUncheckedUpdateInput>
  }

  /**
   * wp_jet_taxonomies delete
   */
  export type wp_jet_taxonomiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
    /**
     * Filter which wp_jet_taxonomies to delete.
     */
    where: wp_jet_taxonomiesWhereUniqueInput
  }

  /**
   * wp_jet_taxonomies deleteMany
   */
  export type wp_jet_taxonomiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_jet_taxonomies to delete
     */
    where?: wp_jet_taxonomiesWhereInput
    /**
     * Limit how many wp_jet_taxonomies to delete.
     */
    limit?: number
  }

  /**
   * wp_jet_taxonomies without action
   */
  export type wp_jet_taxonomiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_jet_taxonomies
     */
    select?: wp_jet_taxonomiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_jet_taxonomies
     */
    omit?: wp_jet_taxonomiesOmit<ExtArgs> | null
  }


  /**
   * Model wp_links
   */

  export type AggregateWp_links = {
    _count: Wp_linksCountAggregateOutputType | null
    _avg: Wp_linksAvgAggregateOutputType | null
    _sum: Wp_linksSumAggregateOutputType | null
    _min: Wp_linksMinAggregateOutputType | null
    _max: Wp_linksMaxAggregateOutputType | null
  }

  export type Wp_linksAvgAggregateOutputType = {
    link_id: number | null
    link_owner: number | null
    link_rating: number | null
  }

  export type Wp_linksSumAggregateOutputType = {
    link_id: bigint | null
    link_owner: bigint | null
    link_rating: number | null
  }

  export type Wp_linksMinAggregateOutputType = {
    link_id: bigint | null
    link_url: string | null
    link_name: string | null
    link_image: string | null
    link_target: string | null
    link_description: string | null
    link_visible: string | null
    link_owner: bigint | null
    link_rating: number | null
    link_updated: Date | null
    link_rel: string | null
    link_notes: string | null
    link_rss: string | null
  }

  export type Wp_linksMaxAggregateOutputType = {
    link_id: bigint | null
    link_url: string | null
    link_name: string | null
    link_image: string | null
    link_target: string | null
    link_description: string | null
    link_visible: string | null
    link_owner: bigint | null
    link_rating: number | null
    link_updated: Date | null
    link_rel: string | null
    link_notes: string | null
    link_rss: string | null
  }

  export type Wp_linksCountAggregateOutputType = {
    link_id: number
    link_url: number
    link_name: number
    link_image: number
    link_target: number
    link_description: number
    link_visible: number
    link_owner: number
    link_rating: number
    link_updated: number
    link_rel: number
    link_notes: number
    link_rss: number
    _all: number
  }


  export type Wp_linksAvgAggregateInputType = {
    link_id?: true
    link_owner?: true
    link_rating?: true
  }

  export type Wp_linksSumAggregateInputType = {
    link_id?: true
    link_owner?: true
    link_rating?: true
  }

  export type Wp_linksMinAggregateInputType = {
    link_id?: true
    link_url?: true
    link_name?: true
    link_image?: true
    link_target?: true
    link_description?: true
    link_visible?: true
    link_owner?: true
    link_rating?: true
    link_updated?: true
    link_rel?: true
    link_notes?: true
    link_rss?: true
  }

  export type Wp_linksMaxAggregateInputType = {
    link_id?: true
    link_url?: true
    link_name?: true
    link_image?: true
    link_target?: true
    link_description?: true
    link_visible?: true
    link_owner?: true
    link_rating?: true
    link_updated?: true
    link_rel?: true
    link_notes?: true
    link_rss?: true
  }

  export type Wp_linksCountAggregateInputType = {
    link_id?: true
    link_url?: true
    link_name?: true
    link_image?: true
    link_target?: true
    link_description?: true
    link_visible?: true
    link_owner?: true
    link_rating?: true
    link_updated?: true
    link_rel?: true
    link_notes?: true
    link_rss?: true
    _all?: true
  }

  export type Wp_linksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_links to aggregate.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_links
    **/
    _count?: true | Wp_linksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_linksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_linksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_linksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_linksMaxAggregateInputType
  }

  export type GetWp_linksAggregateType<T extends Wp_linksAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_links]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_links[P]>
      : GetScalarType<T[P], AggregateWp_links[P]>
  }




  export type wp_linksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_linksWhereInput
    orderBy?: wp_linksOrderByWithAggregationInput | wp_linksOrderByWithAggregationInput[]
    by: Wp_linksScalarFieldEnum[] | Wp_linksScalarFieldEnum
    having?: wp_linksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_linksCountAggregateInputType | true
    _avg?: Wp_linksAvgAggregateInputType
    _sum?: Wp_linksSumAggregateInputType
    _min?: Wp_linksMinAggregateInputType
    _max?: Wp_linksMaxAggregateInputType
  }

  export type Wp_linksGroupByOutputType = {
    link_id: bigint
    link_url: string
    link_name: string
    link_image: string
    link_target: string
    link_description: string
    link_visible: string
    link_owner: bigint
    link_rating: number
    link_updated: Date
    link_rel: string
    link_notes: string
    link_rss: string
    _count: Wp_linksCountAggregateOutputType | null
    _avg: Wp_linksAvgAggregateOutputType | null
    _sum: Wp_linksSumAggregateOutputType | null
    _min: Wp_linksMinAggregateOutputType | null
    _max: Wp_linksMaxAggregateOutputType | null
  }

  type GetWp_linksGroupByPayload<T extends wp_linksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_linksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_linksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_linksGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_linksGroupByOutputType[P]>
        }
      >
    >


  export type wp_linksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    link_id?: boolean
    link_url?: boolean
    link_name?: boolean
    link_image?: boolean
    link_target?: boolean
    link_description?: boolean
    link_visible?: boolean
    link_owner?: boolean
    link_rating?: boolean
    link_updated?: boolean
    link_rel?: boolean
    link_notes?: boolean
    link_rss?: boolean
  }, ExtArgs["result"]["wp_links"]>



  export type wp_linksSelectScalar = {
    link_id?: boolean
    link_url?: boolean
    link_name?: boolean
    link_image?: boolean
    link_target?: boolean
    link_description?: boolean
    link_visible?: boolean
    link_owner?: boolean
    link_rating?: boolean
    link_updated?: boolean
    link_rel?: boolean
    link_notes?: boolean
    link_rss?: boolean
  }

  export type wp_linksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"link_id" | "link_url" | "link_name" | "link_image" | "link_target" | "link_description" | "link_visible" | "link_owner" | "link_rating" | "link_updated" | "link_rel" | "link_notes" | "link_rss", ExtArgs["result"]["wp_links"]>

  export type $wp_linksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_links"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      link_id: bigint
      link_url: string
      link_name: string
      link_image: string
      link_target: string
      link_description: string
      link_visible: string
      link_owner: bigint
      link_rating: number
      link_updated: Date
      link_rel: string
      link_notes: string
      link_rss: string
    }, ExtArgs["result"]["wp_links"]>
    composites: {}
  }

  type wp_linksGetPayload<S extends boolean | null | undefined | wp_linksDefaultArgs> = $Result.GetResult<Prisma.$wp_linksPayload, S>

  type wp_linksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_linksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_linksCountAggregateInputType | true
    }

  export interface wp_linksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_links'], meta: { name: 'wp_links' } }
    /**
     * Find zero or one Wp_links that matches the filter.
     * @param {wp_linksFindUniqueArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_linksFindUniqueArgs>(args: SelectSubset<T, wp_linksFindUniqueArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_links that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_linksFindUniqueOrThrowArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_linksFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_linksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_links that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksFindFirstArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_linksFindFirstArgs>(args?: SelectSubset<T, wp_linksFindFirstArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_links that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksFindFirstOrThrowArgs} args - Arguments to find a Wp_links
     * @example
     * // Get one Wp_links
     * const wp_links = await prisma.wp_links.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_linksFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_linksFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_links that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_links
     * const wp_links = await prisma.wp_links.findMany()
     * 
     * // Get first 10 Wp_links
     * const wp_links = await prisma.wp_links.findMany({ take: 10 })
     * 
     * // Only select the `link_id`
     * const wp_linksWithLink_idOnly = await prisma.wp_links.findMany({ select: { link_id: true } })
     * 
     */
    findMany<T extends wp_linksFindManyArgs>(args?: SelectSubset<T, wp_linksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_links.
     * @param {wp_linksCreateArgs} args - Arguments to create a Wp_links.
     * @example
     * // Create one Wp_links
     * const Wp_links = await prisma.wp_links.create({
     *   data: {
     *     // ... data to create a Wp_links
     *   }
     * })
     * 
     */
    create<T extends wp_linksCreateArgs>(args: SelectSubset<T, wp_linksCreateArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_links.
     * @param {wp_linksCreateManyArgs} args - Arguments to create many Wp_links.
     * @example
     * // Create many Wp_links
     * const wp_links = await prisma.wp_links.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_linksCreateManyArgs>(args?: SelectSubset<T, wp_linksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_links.
     * @param {wp_linksDeleteArgs} args - Arguments to delete one Wp_links.
     * @example
     * // Delete one Wp_links
     * const Wp_links = await prisma.wp_links.delete({
     *   where: {
     *     // ... filter to delete one Wp_links
     *   }
     * })
     * 
     */
    delete<T extends wp_linksDeleteArgs>(args: SelectSubset<T, wp_linksDeleteArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_links.
     * @param {wp_linksUpdateArgs} args - Arguments to update one Wp_links.
     * @example
     * // Update one Wp_links
     * const wp_links = await prisma.wp_links.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_linksUpdateArgs>(args: SelectSubset<T, wp_linksUpdateArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_links.
     * @param {wp_linksDeleteManyArgs} args - Arguments to filter Wp_links to delete.
     * @example
     * // Delete a few Wp_links
     * const { count } = await prisma.wp_links.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_linksDeleteManyArgs>(args?: SelectSubset<T, wp_linksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_links
     * const wp_links = await prisma.wp_links.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_linksUpdateManyArgs>(args: SelectSubset<T, wp_linksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_links.
     * @param {wp_linksUpsertArgs} args - Arguments to update or create a Wp_links.
     * @example
     * // Update or create a Wp_links
     * const wp_links = await prisma.wp_links.upsert({
     *   create: {
     *     // ... data to create a Wp_links
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_links we want to update
     *   }
     * })
     */
    upsert<T extends wp_linksUpsertArgs>(args: SelectSubset<T, wp_linksUpsertArgs<ExtArgs>>): Prisma__wp_linksClient<$Result.GetResult<Prisma.$wp_linksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksCountArgs} args - Arguments to filter Wp_links to count.
     * @example
     * // Count the number of Wp_links
     * const count = await prisma.wp_links.count({
     *   where: {
     *     // ... the filter for the Wp_links we want to count
     *   }
     * })
    **/
    count<T extends wp_linksCountArgs>(
      args?: Subset<T, wp_linksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_linksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_linksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_linksAggregateArgs>(args: Subset<T, Wp_linksAggregateArgs>): Prisma.PrismaPromise<GetWp_linksAggregateType<T>>

    /**
     * Group by Wp_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_linksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_linksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_linksGroupByArgs['orderBy'] }
        : { orderBy?: wp_linksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_linksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_linksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_links model
   */
  readonly fields: wp_linksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_links.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_linksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_links model
   */
  interface wp_linksFieldRefs {
    readonly link_id: FieldRef<"wp_links", 'BigInt'>
    readonly link_url: FieldRef<"wp_links", 'String'>
    readonly link_name: FieldRef<"wp_links", 'String'>
    readonly link_image: FieldRef<"wp_links", 'String'>
    readonly link_target: FieldRef<"wp_links", 'String'>
    readonly link_description: FieldRef<"wp_links", 'String'>
    readonly link_visible: FieldRef<"wp_links", 'String'>
    readonly link_owner: FieldRef<"wp_links", 'BigInt'>
    readonly link_rating: FieldRef<"wp_links", 'Int'>
    readonly link_updated: FieldRef<"wp_links", 'DateTime'>
    readonly link_rel: FieldRef<"wp_links", 'String'>
    readonly link_notes: FieldRef<"wp_links", 'String'>
    readonly link_rss: FieldRef<"wp_links", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_links findUnique
   */
  export type wp_linksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links findUniqueOrThrow
   */
  export type wp_linksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links findFirst
   */
  export type wp_linksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_links.
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_links.
     */
    distinct?: Wp_linksScalarFieldEnum | Wp_linksScalarFieldEnum[]
  }

  /**
   * wp_links findFirstOrThrow
   */
  export type wp_linksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_links.
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_links.
     */
    distinct?: Wp_linksScalarFieldEnum | Wp_linksScalarFieldEnum[]
  }

  /**
   * wp_links findMany
   */
  export type wp_linksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_links to fetch.
     */
    where?: wp_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_links to fetch.
     */
    orderBy?: wp_linksOrderByWithRelationInput | wp_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_links.
     */
    cursor?: wp_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_links.
     */
    skip?: number
    distinct?: Wp_linksScalarFieldEnum | Wp_linksScalarFieldEnum[]
  }

  /**
   * wp_links create
   */
  export type wp_linksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_links.
     */
    data: XOR<wp_linksCreateInput, wp_linksUncheckedCreateInput>
  }

  /**
   * wp_links createMany
   */
  export type wp_linksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_links.
     */
    data: wp_linksCreateManyInput | wp_linksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_links update
   */
  export type wp_linksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_links.
     */
    data: XOR<wp_linksUpdateInput, wp_linksUncheckedUpdateInput>
    /**
     * Choose, which wp_links to update.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links updateMany
   */
  export type wp_linksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_links.
     */
    data: XOR<wp_linksUpdateManyMutationInput, wp_linksUncheckedUpdateManyInput>
    /**
     * Filter which wp_links to update
     */
    where?: wp_linksWhereInput
    /**
     * Limit how many wp_links to update.
     */
    limit?: number
  }

  /**
   * wp_links upsert
   */
  export type wp_linksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_links to update in case it exists.
     */
    where: wp_linksWhereUniqueInput
    /**
     * In case the wp_links found by the `where` argument doesn't exist, create a new wp_links with this data.
     */
    create: XOR<wp_linksCreateInput, wp_linksUncheckedCreateInput>
    /**
     * In case the wp_links was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_linksUpdateInput, wp_linksUncheckedUpdateInput>
  }

  /**
   * wp_links delete
   */
  export type wp_linksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
    /**
     * Filter which wp_links to delete.
     */
    where: wp_linksWhereUniqueInput
  }

  /**
   * wp_links deleteMany
   */
  export type wp_linksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_links to delete
     */
    where?: wp_linksWhereInput
    /**
     * Limit how many wp_links to delete.
     */
    limit?: number
  }

  /**
   * wp_links without action
   */
  export type wp_linksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_links
     */
    select?: wp_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_links
     */
    omit?: wp_linksOmit<ExtArgs> | null
  }


  /**
   * Model wp_options
   */

  export type AggregateWp_options = {
    _count: Wp_optionsCountAggregateOutputType | null
    _avg: Wp_optionsAvgAggregateOutputType | null
    _sum: Wp_optionsSumAggregateOutputType | null
    _min: Wp_optionsMinAggregateOutputType | null
    _max: Wp_optionsMaxAggregateOutputType | null
  }

  export type Wp_optionsAvgAggregateOutputType = {
    option_id: number | null
  }

  export type Wp_optionsSumAggregateOutputType = {
    option_id: bigint | null
  }

  export type Wp_optionsMinAggregateOutputType = {
    option_id: bigint | null
    option_name: string | null
    option_value: string | null
    autoload: string | null
  }

  export type Wp_optionsMaxAggregateOutputType = {
    option_id: bigint | null
    option_name: string | null
    option_value: string | null
    autoload: string | null
  }

  export type Wp_optionsCountAggregateOutputType = {
    option_id: number
    option_name: number
    option_value: number
    autoload: number
    _all: number
  }


  export type Wp_optionsAvgAggregateInputType = {
    option_id?: true
  }

  export type Wp_optionsSumAggregateInputType = {
    option_id?: true
  }

  export type Wp_optionsMinAggregateInputType = {
    option_id?: true
    option_name?: true
    option_value?: true
    autoload?: true
  }

  export type Wp_optionsMaxAggregateInputType = {
    option_id?: true
    option_name?: true
    option_value?: true
    autoload?: true
  }

  export type Wp_optionsCountAggregateInputType = {
    option_id?: true
    option_name?: true
    option_value?: true
    autoload?: true
    _all?: true
  }

  export type Wp_optionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_options to aggregate.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_options
    **/
    _count?: true | Wp_optionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_optionsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_optionsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_optionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_optionsMaxAggregateInputType
  }

  export type GetWp_optionsAggregateType<T extends Wp_optionsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_options]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_options[P]>
      : GetScalarType<T[P], AggregateWp_options[P]>
  }




  export type wp_optionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_optionsWhereInput
    orderBy?: wp_optionsOrderByWithAggregationInput | wp_optionsOrderByWithAggregationInput[]
    by: Wp_optionsScalarFieldEnum[] | Wp_optionsScalarFieldEnum
    having?: wp_optionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_optionsCountAggregateInputType | true
    _avg?: Wp_optionsAvgAggregateInputType
    _sum?: Wp_optionsSumAggregateInputType
    _min?: Wp_optionsMinAggregateInputType
    _max?: Wp_optionsMaxAggregateInputType
  }

  export type Wp_optionsGroupByOutputType = {
    option_id: bigint
    option_name: string
    option_value: string
    autoload: string
    _count: Wp_optionsCountAggregateOutputType | null
    _avg: Wp_optionsAvgAggregateOutputType | null
    _sum: Wp_optionsSumAggregateOutputType | null
    _min: Wp_optionsMinAggregateOutputType | null
    _max: Wp_optionsMaxAggregateOutputType | null
  }

  type GetWp_optionsGroupByPayload<T extends wp_optionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_optionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_optionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_optionsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_optionsGroupByOutputType[P]>
        }
      >
    >


  export type wp_optionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    option_id?: boolean
    option_name?: boolean
    option_value?: boolean
    autoload?: boolean
  }, ExtArgs["result"]["wp_options"]>



  export type wp_optionsSelectScalar = {
    option_id?: boolean
    option_name?: boolean
    option_value?: boolean
    autoload?: boolean
  }

  export type wp_optionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"option_id" | "option_name" | "option_value" | "autoload", ExtArgs["result"]["wp_options"]>

  export type $wp_optionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_options"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      option_id: bigint
      option_name: string
      option_value: string
      autoload: string
    }, ExtArgs["result"]["wp_options"]>
    composites: {}
  }

  type wp_optionsGetPayload<S extends boolean | null | undefined | wp_optionsDefaultArgs> = $Result.GetResult<Prisma.$wp_optionsPayload, S>

  type wp_optionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_optionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_optionsCountAggregateInputType | true
    }

  export interface wp_optionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_options'], meta: { name: 'wp_options' } }
    /**
     * Find zero or one Wp_options that matches the filter.
     * @param {wp_optionsFindUniqueArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_optionsFindUniqueArgs>(args: SelectSubset<T, wp_optionsFindUniqueArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_options that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_optionsFindUniqueOrThrowArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_optionsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_optionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsFindFirstArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_optionsFindFirstArgs>(args?: SelectSubset<T, wp_optionsFindFirstArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_options that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsFindFirstOrThrowArgs} args - Arguments to find a Wp_options
     * @example
     * // Get one Wp_options
     * const wp_options = await prisma.wp_options.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_optionsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_optionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_options that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_options
     * const wp_options = await prisma.wp_options.findMany()
     * 
     * // Get first 10 Wp_options
     * const wp_options = await prisma.wp_options.findMany({ take: 10 })
     * 
     * // Only select the `option_id`
     * const wp_optionsWithOption_idOnly = await prisma.wp_options.findMany({ select: { option_id: true } })
     * 
     */
    findMany<T extends wp_optionsFindManyArgs>(args?: SelectSubset<T, wp_optionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_options.
     * @param {wp_optionsCreateArgs} args - Arguments to create a Wp_options.
     * @example
     * // Create one Wp_options
     * const Wp_options = await prisma.wp_options.create({
     *   data: {
     *     // ... data to create a Wp_options
     *   }
     * })
     * 
     */
    create<T extends wp_optionsCreateArgs>(args: SelectSubset<T, wp_optionsCreateArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_options.
     * @param {wp_optionsCreateManyArgs} args - Arguments to create many Wp_options.
     * @example
     * // Create many Wp_options
     * const wp_options = await prisma.wp_options.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_optionsCreateManyArgs>(args?: SelectSubset<T, wp_optionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_options.
     * @param {wp_optionsDeleteArgs} args - Arguments to delete one Wp_options.
     * @example
     * // Delete one Wp_options
     * const Wp_options = await prisma.wp_options.delete({
     *   where: {
     *     // ... filter to delete one Wp_options
     *   }
     * })
     * 
     */
    delete<T extends wp_optionsDeleteArgs>(args: SelectSubset<T, wp_optionsDeleteArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_options.
     * @param {wp_optionsUpdateArgs} args - Arguments to update one Wp_options.
     * @example
     * // Update one Wp_options
     * const wp_options = await prisma.wp_options.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_optionsUpdateArgs>(args: SelectSubset<T, wp_optionsUpdateArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_options.
     * @param {wp_optionsDeleteManyArgs} args - Arguments to filter Wp_options to delete.
     * @example
     * // Delete a few Wp_options
     * const { count } = await prisma.wp_options.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_optionsDeleteManyArgs>(args?: SelectSubset<T, wp_optionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_options
     * const wp_options = await prisma.wp_options.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_optionsUpdateManyArgs>(args: SelectSubset<T, wp_optionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_options.
     * @param {wp_optionsUpsertArgs} args - Arguments to update or create a Wp_options.
     * @example
     * // Update or create a Wp_options
     * const wp_options = await prisma.wp_options.upsert({
     *   create: {
     *     // ... data to create a Wp_options
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_options we want to update
     *   }
     * })
     */
    upsert<T extends wp_optionsUpsertArgs>(args: SelectSubset<T, wp_optionsUpsertArgs<ExtArgs>>): Prisma__wp_optionsClient<$Result.GetResult<Prisma.$wp_optionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsCountArgs} args - Arguments to filter Wp_options to count.
     * @example
     * // Count the number of Wp_options
     * const count = await prisma.wp_options.count({
     *   where: {
     *     // ... the filter for the Wp_options we want to count
     *   }
     * })
    **/
    count<T extends wp_optionsCountArgs>(
      args?: Subset<T, wp_optionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_optionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_optionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_optionsAggregateArgs>(args: Subset<T, Wp_optionsAggregateArgs>): Prisma.PrismaPromise<GetWp_optionsAggregateType<T>>

    /**
     * Group by Wp_options.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_optionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_optionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_optionsGroupByArgs['orderBy'] }
        : { orderBy?: wp_optionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_optionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_optionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_options model
   */
  readonly fields: wp_optionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_options.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_optionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_options model
   */
  interface wp_optionsFieldRefs {
    readonly option_id: FieldRef<"wp_options", 'BigInt'>
    readonly option_name: FieldRef<"wp_options", 'String'>
    readonly option_value: FieldRef<"wp_options", 'String'>
    readonly autoload: FieldRef<"wp_options", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_options findUnique
   */
  export type wp_optionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options findUniqueOrThrow
   */
  export type wp_optionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options findFirst
   */
  export type wp_optionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_options.
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_options.
     */
    distinct?: Wp_optionsScalarFieldEnum | Wp_optionsScalarFieldEnum[]
  }

  /**
   * wp_options findFirstOrThrow
   */
  export type wp_optionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_options.
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_options.
     */
    distinct?: Wp_optionsScalarFieldEnum | Wp_optionsScalarFieldEnum[]
  }

  /**
   * wp_options findMany
   */
  export type wp_optionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter, which wp_options to fetch.
     */
    where?: wp_optionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_options to fetch.
     */
    orderBy?: wp_optionsOrderByWithRelationInput | wp_optionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_options.
     */
    cursor?: wp_optionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_options from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_options.
     */
    skip?: number
    distinct?: Wp_optionsScalarFieldEnum | Wp_optionsScalarFieldEnum[]
  }

  /**
   * wp_options create
   */
  export type wp_optionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_options.
     */
    data: XOR<wp_optionsCreateInput, wp_optionsUncheckedCreateInput>
  }

  /**
   * wp_options createMany
   */
  export type wp_optionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_options.
     */
    data: wp_optionsCreateManyInput | wp_optionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_options update
   */
  export type wp_optionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_options.
     */
    data: XOR<wp_optionsUpdateInput, wp_optionsUncheckedUpdateInput>
    /**
     * Choose, which wp_options to update.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options updateMany
   */
  export type wp_optionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_options.
     */
    data: XOR<wp_optionsUpdateManyMutationInput, wp_optionsUncheckedUpdateManyInput>
    /**
     * Filter which wp_options to update
     */
    where?: wp_optionsWhereInput
    /**
     * Limit how many wp_options to update.
     */
    limit?: number
  }

  /**
   * wp_options upsert
   */
  export type wp_optionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_options to update in case it exists.
     */
    where: wp_optionsWhereUniqueInput
    /**
     * In case the wp_options found by the `where` argument doesn't exist, create a new wp_options with this data.
     */
    create: XOR<wp_optionsCreateInput, wp_optionsUncheckedCreateInput>
    /**
     * In case the wp_options was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_optionsUpdateInput, wp_optionsUncheckedUpdateInput>
  }

  /**
   * wp_options delete
   */
  export type wp_optionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
    /**
     * Filter which wp_options to delete.
     */
    where: wp_optionsWhereUniqueInput
  }

  /**
   * wp_options deleteMany
   */
  export type wp_optionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_options to delete
     */
    where?: wp_optionsWhereInput
    /**
     * Limit how many wp_options to delete.
     */
    limit?: number
  }

  /**
   * wp_options without action
   */
  export type wp_optionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_options
     */
    select?: wp_optionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_options
     */
    omit?: wp_optionsOmit<ExtArgs> | null
  }


  /**
   * Model wp_postmeta
   */

  export type AggregateWp_postmeta = {
    _count: Wp_postmetaCountAggregateOutputType | null
    _avg: Wp_postmetaAvgAggregateOutputType | null
    _sum: Wp_postmetaSumAggregateOutputType | null
    _min: Wp_postmetaMinAggregateOutputType | null
    _max: Wp_postmetaMaxAggregateOutputType | null
  }

  export type Wp_postmetaAvgAggregateOutputType = {
    meta_id: number | null
    post_id: number | null
  }

  export type Wp_postmetaSumAggregateOutputType = {
    meta_id: bigint | null
    post_id: bigint | null
  }

  export type Wp_postmetaMinAggregateOutputType = {
    meta_id: bigint | null
    post_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_postmetaMaxAggregateOutputType = {
    meta_id: bigint | null
    post_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_postmetaCountAggregateOutputType = {
    meta_id: number
    post_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_postmetaAvgAggregateInputType = {
    meta_id?: true
    post_id?: true
  }

  export type Wp_postmetaSumAggregateInputType = {
    meta_id?: true
    post_id?: true
  }

  export type Wp_postmetaMinAggregateInputType = {
    meta_id?: true
    post_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_postmetaMaxAggregateInputType = {
    meta_id?: true
    post_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_postmetaCountAggregateInputType = {
    meta_id?: true
    post_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_postmetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_postmeta to aggregate.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_postmetas
    **/
    _count?: true | Wp_postmetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_postmetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_postmetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_postmetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_postmetaMaxAggregateInputType
  }

  export type GetWp_postmetaAggregateType<T extends Wp_postmetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_postmeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_postmeta[P]>
      : GetScalarType<T[P], AggregateWp_postmeta[P]>
  }




  export type wp_postmetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_postmetaWhereInput
    orderBy?: wp_postmetaOrderByWithAggregationInput | wp_postmetaOrderByWithAggregationInput[]
    by: Wp_postmetaScalarFieldEnum[] | Wp_postmetaScalarFieldEnum
    having?: wp_postmetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_postmetaCountAggregateInputType | true
    _avg?: Wp_postmetaAvgAggregateInputType
    _sum?: Wp_postmetaSumAggregateInputType
    _min?: Wp_postmetaMinAggregateInputType
    _max?: Wp_postmetaMaxAggregateInputType
  }

  export type Wp_postmetaGroupByOutputType = {
    meta_id: bigint
    post_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_postmetaCountAggregateOutputType | null
    _avg: Wp_postmetaAvgAggregateOutputType | null
    _sum: Wp_postmetaSumAggregateOutputType | null
    _min: Wp_postmetaMinAggregateOutputType | null
    _max: Wp_postmetaMaxAggregateOutputType | null
  }

  type GetWp_postmetaGroupByPayload<T extends wp_postmetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_postmetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_postmetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_postmetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_postmetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_postmetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    meta_id?: boolean
    post_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_postmeta"]>



  export type wp_postmetaSelectScalar = {
    meta_id?: boolean
    post_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_postmetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"meta_id" | "post_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_postmeta"]>

  export type $wp_postmetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_postmeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      meta_id: bigint
      post_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_postmeta"]>
    composites: {}
  }

  type wp_postmetaGetPayload<S extends boolean | null | undefined | wp_postmetaDefaultArgs> = $Result.GetResult<Prisma.$wp_postmetaPayload, S>

  type wp_postmetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_postmetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_postmetaCountAggregateInputType | true
    }

  export interface wp_postmetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_postmeta'], meta: { name: 'wp_postmeta' } }
    /**
     * Find zero or one Wp_postmeta that matches the filter.
     * @param {wp_postmetaFindUniqueArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_postmetaFindUniqueArgs>(args: SelectSubset<T, wp_postmetaFindUniqueArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_postmeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_postmetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_postmetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_postmetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_postmeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaFindFirstArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_postmetaFindFirstArgs>(args?: SelectSubset<T, wp_postmetaFindFirstArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_postmeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaFindFirstOrThrowArgs} args - Arguments to find a Wp_postmeta
     * @example
     * // Get one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_postmetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_postmetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_postmetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_postmetas
     * const wp_postmetas = await prisma.wp_postmeta.findMany()
     * 
     * // Get first 10 Wp_postmetas
     * const wp_postmetas = await prisma.wp_postmeta.findMany({ take: 10 })
     * 
     * // Only select the `meta_id`
     * const wp_postmetaWithMeta_idOnly = await prisma.wp_postmeta.findMany({ select: { meta_id: true } })
     * 
     */
    findMany<T extends wp_postmetaFindManyArgs>(args?: SelectSubset<T, wp_postmetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_postmeta.
     * @param {wp_postmetaCreateArgs} args - Arguments to create a Wp_postmeta.
     * @example
     * // Create one Wp_postmeta
     * const Wp_postmeta = await prisma.wp_postmeta.create({
     *   data: {
     *     // ... data to create a Wp_postmeta
     *   }
     * })
     * 
     */
    create<T extends wp_postmetaCreateArgs>(args: SelectSubset<T, wp_postmetaCreateArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_postmetas.
     * @param {wp_postmetaCreateManyArgs} args - Arguments to create many Wp_postmetas.
     * @example
     * // Create many Wp_postmetas
     * const wp_postmeta = await prisma.wp_postmeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_postmetaCreateManyArgs>(args?: SelectSubset<T, wp_postmetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_postmeta.
     * @param {wp_postmetaDeleteArgs} args - Arguments to delete one Wp_postmeta.
     * @example
     * // Delete one Wp_postmeta
     * const Wp_postmeta = await prisma.wp_postmeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_postmeta
     *   }
     * })
     * 
     */
    delete<T extends wp_postmetaDeleteArgs>(args: SelectSubset<T, wp_postmetaDeleteArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_postmeta.
     * @param {wp_postmetaUpdateArgs} args - Arguments to update one Wp_postmeta.
     * @example
     * // Update one Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_postmetaUpdateArgs>(args: SelectSubset<T, wp_postmetaUpdateArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_postmetas.
     * @param {wp_postmetaDeleteManyArgs} args - Arguments to filter Wp_postmetas to delete.
     * @example
     * // Delete a few Wp_postmetas
     * const { count } = await prisma.wp_postmeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_postmetaDeleteManyArgs>(args?: SelectSubset<T, wp_postmetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_postmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_postmetas
     * const wp_postmeta = await prisma.wp_postmeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_postmetaUpdateManyArgs>(args: SelectSubset<T, wp_postmetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_postmeta.
     * @param {wp_postmetaUpsertArgs} args - Arguments to update or create a Wp_postmeta.
     * @example
     * // Update or create a Wp_postmeta
     * const wp_postmeta = await prisma.wp_postmeta.upsert({
     *   create: {
     *     // ... data to create a Wp_postmeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_postmeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_postmetaUpsertArgs>(args: SelectSubset<T, wp_postmetaUpsertArgs<ExtArgs>>): Prisma__wp_postmetaClient<$Result.GetResult<Prisma.$wp_postmetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_postmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaCountArgs} args - Arguments to filter Wp_postmetas to count.
     * @example
     * // Count the number of Wp_postmetas
     * const count = await prisma.wp_postmeta.count({
     *   where: {
     *     // ... the filter for the Wp_postmetas we want to count
     *   }
     * })
    **/
    count<T extends wp_postmetaCountArgs>(
      args?: Subset<T, wp_postmetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_postmetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_postmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_postmetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_postmetaAggregateArgs>(args: Subset<T, Wp_postmetaAggregateArgs>): Prisma.PrismaPromise<GetWp_postmetaAggregateType<T>>

    /**
     * Group by Wp_postmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postmetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_postmetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_postmetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_postmetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_postmetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_postmetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_postmeta model
   */
  readonly fields: wp_postmetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_postmeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_postmetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_postmeta model
   */
  interface wp_postmetaFieldRefs {
    readonly meta_id: FieldRef<"wp_postmeta", 'BigInt'>
    readonly post_id: FieldRef<"wp_postmeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_postmeta", 'String'>
    readonly meta_value: FieldRef<"wp_postmeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_postmeta findUnique
   */
  export type wp_postmetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta findUniqueOrThrow
   */
  export type wp_postmetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta findFirst
   */
  export type wp_postmetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_postmetas.
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_postmetas.
     */
    distinct?: Wp_postmetaScalarFieldEnum | Wp_postmetaScalarFieldEnum[]
  }

  /**
   * wp_postmeta findFirstOrThrow
   */
  export type wp_postmetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmeta to fetch.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_postmetas.
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_postmetas.
     */
    distinct?: Wp_postmetaScalarFieldEnum | Wp_postmetaScalarFieldEnum[]
  }

  /**
   * wp_postmeta findMany
   */
  export type wp_postmetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_postmetas to fetch.
     */
    where?: wp_postmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_postmetas to fetch.
     */
    orderBy?: wp_postmetaOrderByWithRelationInput | wp_postmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_postmetas.
     */
    cursor?: wp_postmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_postmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_postmetas.
     */
    skip?: number
    distinct?: Wp_postmetaScalarFieldEnum | Wp_postmetaScalarFieldEnum[]
  }

  /**
   * wp_postmeta create
   */
  export type wp_postmetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_postmeta.
     */
    data?: XOR<wp_postmetaCreateInput, wp_postmetaUncheckedCreateInput>
  }

  /**
   * wp_postmeta createMany
   */
  export type wp_postmetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_postmetas.
     */
    data: wp_postmetaCreateManyInput | wp_postmetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_postmeta update
   */
  export type wp_postmetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_postmeta.
     */
    data: XOR<wp_postmetaUpdateInput, wp_postmetaUncheckedUpdateInput>
    /**
     * Choose, which wp_postmeta to update.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta updateMany
   */
  export type wp_postmetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_postmetas.
     */
    data: XOR<wp_postmetaUpdateManyMutationInput, wp_postmetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_postmetas to update
     */
    where?: wp_postmetaWhereInput
    /**
     * Limit how many wp_postmetas to update.
     */
    limit?: number
  }

  /**
   * wp_postmeta upsert
   */
  export type wp_postmetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_postmeta to update in case it exists.
     */
    where: wp_postmetaWhereUniqueInput
    /**
     * In case the wp_postmeta found by the `where` argument doesn't exist, create a new wp_postmeta with this data.
     */
    create: XOR<wp_postmetaCreateInput, wp_postmetaUncheckedCreateInput>
    /**
     * In case the wp_postmeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_postmetaUpdateInput, wp_postmetaUncheckedUpdateInput>
  }

  /**
   * wp_postmeta delete
   */
  export type wp_postmetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
    /**
     * Filter which wp_postmeta to delete.
     */
    where: wp_postmetaWhereUniqueInput
  }

  /**
   * wp_postmeta deleteMany
   */
  export type wp_postmetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_postmetas to delete
     */
    where?: wp_postmetaWhereInput
    /**
     * Limit how many wp_postmetas to delete.
     */
    limit?: number
  }

  /**
   * wp_postmeta without action
   */
  export type wp_postmetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_postmeta
     */
    select?: wp_postmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_postmeta
     */
    omit?: wp_postmetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_posts
   */

  export type AggregateWp_posts = {
    _count: Wp_postsCountAggregateOutputType | null
    _avg: Wp_postsAvgAggregateOutputType | null
    _sum: Wp_postsSumAggregateOutputType | null
    _min: Wp_postsMinAggregateOutputType | null
    _max: Wp_postsMaxAggregateOutputType | null
  }

  export type Wp_postsAvgAggregateOutputType = {
    ID: number | null
    post_author: number | null
    post_parent: number | null
    menu_order: number | null
    comment_count: number | null
  }

  export type Wp_postsSumAggregateOutputType = {
    ID: bigint | null
    post_author: bigint | null
    post_parent: bigint | null
    menu_order: number | null
    comment_count: bigint | null
  }

  export type Wp_postsMinAggregateOutputType = {
    ID: bigint | null
    post_author: bigint | null
    post_date: Date | null
    post_date_gmt: Date | null
    post_content: string | null
    post_title: string | null
    post_excerpt: string | null
    post_status: string | null
    comment_status: string | null
    ping_status: string | null
    post_password: string | null
    post_name: string | null
    to_ping: string | null
    pinged: string | null
    post_modified: Date | null
    post_modified_gmt: Date | null
    post_content_filtered: string | null
    post_parent: bigint | null
    guid: string | null
    menu_order: number | null
    post_type: string | null
    post_mime_type: string | null
    comment_count: bigint | null
  }

  export type Wp_postsMaxAggregateOutputType = {
    ID: bigint | null
    post_author: bigint | null
    post_date: Date | null
    post_date_gmt: Date | null
    post_content: string | null
    post_title: string | null
    post_excerpt: string | null
    post_status: string | null
    comment_status: string | null
    ping_status: string | null
    post_password: string | null
    post_name: string | null
    to_ping: string | null
    pinged: string | null
    post_modified: Date | null
    post_modified_gmt: Date | null
    post_content_filtered: string | null
    post_parent: bigint | null
    guid: string | null
    menu_order: number | null
    post_type: string | null
    post_mime_type: string | null
    comment_count: bigint | null
  }

  export type Wp_postsCountAggregateOutputType = {
    ID: number
    post_author: number
    post_date: number
    post_date_gmt: number
    post_content: number
    post_title: number
    post_excerpt: number
    post_status: number
    comment_status: number
    ping_status: number
    post_password: number
    post_name: number
    to_ping: number
    pinged: number
    post_modified: number
    post_modified_gmt: number
    post_content_filtered: number
    post_parent: number
    guid: number
    menu_order: number
    post_type: number
    post_mime_type: number
    comment_count: number
    _all: number
  }


  export type Wp_postsAvgAggregateInputType = {
    ID?: true
    post_author?: true
    post_parent?: true
    menu_order?: true
    comment_count?: true
  }

  export type Wp_postsSumAggregateInputType = {
    ID?: true
    post_author?: true
    post_parent?: true
    menu_order?: true
    comment_count?: true
  }

  export type Wp_postsMinAggregateInputType = {
    ID?: true
    post_author?: true
    post_date?: true
    post_date_gmt?: true
    post_content?: true
    post_title?: true
    post_excerpt?: true
    post_status?: true
    comment_status?: true
    ping_status?: true
    post_password?: true
    post_name?: true
    to_ping?: true
    pinged?: true
    post_modified?: true
    post_modified_gmt?: true
    post_content_filtered?: true
    post_parent?: true
    guid?: true
    menu_order?: true
    post_type?: true
    post_mime_type?: true
    comment_count?: true
  }

  export type Wp_postsMaxAggregateInputType = {
    ID?: true
    post_author?: true
    post_date?: true
    post_date_gmt?: true
    post_content?: true
    post_title?: true
    post_excerpt?: true
    post_status?: true
    comment_status?: true
    ping_status?: true
    post_password?: true
    post_name?: true
    to_ping?: true
    pinged?: true
    post_modified?: true
    post_modified_gmt?: true
    post_content_filtered?: true
    post_parent?: true
    guid?: true
    menu_order?: true
    post_type?: true
    post_mime_type?: true
    comment_count?: true
  }

  export type Wp_postsCountAggregateInputType = {
    ID?: true
    post_author?: true
    post_date?: true
    post_date_gmt?: true
    post_content?: true
    post_title?: true
    post_excerpt?: true
    post_status?: true
    comment_status?: true
    ping_status?: true
    post_password?: true
    post_name?: true
    to_ping?: true
    pinged?: true
    post_modified?: true
    post_modified_gmt?: true
    post_content_filtered?: true
    post_parent?: true
    guid?: true
    menu_order?: true
    post_type?: true
    post_mime_type?: true
    comment_count?: true
    _all?: true
  }

  export type Wp_postsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_posts to aggregate.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_posts
    **/
    _count?: true | Wp_postsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_postsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_postsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_postsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_postsMaxAggregateInputType
  }

  export type GetWp_postsAggregateType<T extends Wp_postsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_posts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_posts[P]>
      : GetScalarType<T[P], AggregateWp_posts[P]>
  }




  export type wp_postsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_postsWhereInput
    orderBy?: wp_postsOrderByWithAggregationInput | wp_postsOrderByWithAggregationInput[]
    by: Wp_postsScalarFieldEnum[] | Wp_postsScalarFieldEnum
    having?: wp_postsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_postsCountAggregateInputType | true
    _avg?: Wp_postsAvgAggregateInputType
    _sum?: Wp_postsSumAggregateInputType
    _min?: Wp_postsMinAggregateInputType
    _max?: Wp_postsMaxAggregateInputType
  }

  export type Wp_postsGroupByOutputType = {
    ID: bigint
    post_author: bigint
    post_date: Date
    post_date_gmt: Date
    post_content: string
    post_title: string
    post_excerpt: string
    post_status: string
    comment_status: string
    ping_status: string
    post_password: string
    post_name: string
    to_ping: string
    pinged: string
    post_modified: Date
    post_modified_gmt: Date
    post_content_filtered: string
    post_parent: bigint
    guid: string
    menu_order: number
    post_type: string
    post_mime_type: string
    comment_count: bigint
    _count: Wp_postsCountAggregateOutputType | null
    _avg: Wp_postsAvgAggregateOutputType | null
    _sum: Wp_postsSumAggregateOutputType | null
    _min: Wp_postsMinAggregateOutputType | null
    _max: Wp_postsMaxAggregateOutputType | null
  }

  type GetWp_postsGroupByPayload<T extends wp_postsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_postsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_postsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_postsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_postsGroupByOutputType[P]>
        }
      >
    >


  export type wp_postsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID?: boolean
    post_author?: boolean
    post_date?: boolean
    post_date_gmt?: boolean
    post_content?: boolean
    post_title?: boolean
    post_excerpt?: boolean
    post_status?: boolean
    comment_status?: boolean
    ping_status?: boolean
    post_password?: boolean
    post_name?: boolean
    to_ping?: boolean
    pinged?: boolean
    post_modified?: boolean
    post_modified_gmt?: boolean
    post_content_filtered?: boolean
    post_parent?: boolean
    guid?: boolean
    menu_order?: boolean
    post_type?: boolean
    post_mime_type?: boolean
    comment_count?: boolean
  }, ExtArgs["result"]["wp_posts"]>



  export type wp_postsSelectScalar = {
    ID?: boolean
    post_author?: boolean
    post_date?: boolean
    post_date_gmt?: boolean
    post_content?: boolean
    post_title?: boolean
    post_excerpt?: boolean
    post_status?: boolean
    comment_status?: boolean
    ping_status?: boolean
    post_password?: boolean
    post_name?: boolean
    to_ping?: boolean
    pinged?: boolean
    post_modified?: boolean
    post_modified_gmt?: boolean
    post_content_filtered?: boolean
    post_parent?: boolean
    guid?: boolean
    menu_order?: boolean
    post_type?: boolean
    post_mime_type?: boolean
    comment_count?: boolean
  }

  export type wp_postsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ID" | "post_author" | "post_date" | "post_date_gmt" | "post_content" | "post_title" | "post_excerpt" | "post_status" | "comment_status" | "ping_status" | "post_password" | "post_name" | "to_ping" | "pinged" | "post_modified" | "post_modified_gmt" | "post_content_filtered" | "post_parent" | "guid" | "menu_order" | "post_type" | "post_mime_type" | "comment_count", ExtArgs["result"]["wp_posts"]>

  export type $wp_postsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_posts"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID: bigint
      post_author: bigint
      post_date: Date
      post_date_gmt: Date
      post_content: string
      post_title: string
      post_excerpt: string
      post_status: string
      comment_status: string
      ping_status: string
      post_password: string
      post_name: string
      to_ping: string
      pinged: string
      post_modified: Date
      post_modified_gmt: Date
      post_content_filtered: string
      post_parent: bigint
      guid: string
      menu_order: number
      post_type: string
      post_mime_type: string
      comment_count: bigint
    }, ExtArgs["result"]["wp_posts"]>
    composites: {}
  }

  type wp_postsGetPayload<S extends boolean | null | undefined | wp_postsDefaultArgs> = $Result.GetResult<Prisma.$wp_postsPayload, S>

  type wp_postsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_postsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_postsCountAggregateInputType | true
    }

  export interface wp_postsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_posts'], meta: { name: 'wp_posts' } }
    /**
     * Find zero or one Wp_posts that matches the filter.
     * @param {wp_postsFindUniqueArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_postsFindUniqueArgs>(args: SelectSubset<T, wp_postsFindUniqueArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_posts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_postsFindUniqueOrThrowArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_postsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_postsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsFindFirstArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_postsFindFirstArgs>(args?: SelectSubset<T, wp_postsFindFirstArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_posts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsFindFirstOrThrowArgs} args - Arguments to find a Wp_posts
     * @example
     * // Get one Wp_posts
     * const wp_posts = await prisma.wp_posts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_postsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_postsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_posts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_posts
     * const wp_posts = await prisma.wp_posts.findMany()
     * 
     * // Get first 10 Wp_posts
     * const wp_posts = await prisma.wp_posts.findMany({ take: 10 })
     * 
     * // Only select the `ID`
     * const wp_postsWithIDOnly = await prisma.wp_posts.findMany({ select: { ID: true } })
     * 
     */
    findMany<T extends wp_postsFindManyArgs>(args?: SelectSubset<T, wp_postsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_posts.
     * @param {wp_postsCreateArgs} args - Arguments to create a Wp_posts.
     * @example
     * // Create one Wp_posts
     * const Wp_posts = await prisma.wp_posts.create({
     *   data: {
     *     // ... data to create a Wp_posts
     *   }
     * })
     * 
     */
    create<T extends wp_postsCreateArgs>(args: SelectSubset<T, wp_postsCreateArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_posts.
     * @param {wp_postsCreateManyArgs} args - Arguments to create many Wp_posts.
     * @example
     * // Create many Wp_posts
     * const wp_posts = await prisma.wp_posts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_postsCreateManyArgs>(args?: SelectSubset<T, wp_postsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_posts.
     * @param {wp_postsDeleteArgs} args - Arguments to delete one Wp_posts.
     * @example
     * // Delete one Wp_posts
     * const Wp_posts = await prisma.wp_posts.delete({
     *   where: {
     *     // ... filter to delete one Wp_posts
     *   }
     * })
     * 
     */
    delete<T extends wp_postsDeleteArgs>(args: SelectSubset<T, wp_postsDeleteArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_posts.
     * @param {wp_postsUpdateArgs} args - Arguments to update one Wp_posts.
     * @example
     * // Update one Wp_posts
     * const wp_posts = await prisma.wp_posts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_postsUpdateArgs>(args: SelectSubset<T, wp_postsUpdateArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_posts.
     * @param {wp_postsDeleteManyArgs} args - Arguments to filter Wp_posts to delete.
     * @example
     * // Delete a few Wp_posts
     * const { count } = await prisma.wp_posts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_postsDeleteManyArgs>(args?: SelectSubset<T, wp_postsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_posts
     * const wp_posts = await prisma.wp_posts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_postsUpdateManyArgs>(args: SelectSubset<T, wp_postsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_posts.
     * @param {wp_postsUpsertArgs} args - Arguments to update or create a Wp_posts.
     * @example
     * // Update or create a Wp_posts
     * const wp_posts = await prisma.wp_posts.upsert({
     *   create: {
     *     // ... data to create a Wp_posts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_posts we want to update
     *   }
     * })
     */
    upsert<T extends wp_postsUpsertArgs>(args: SelectSubset<T, wp_postsUpsertArgs<ExtArgs>>): Prisma__wp_postsClient<$Result.GetResult<Prisma.$wp_postsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsCountArgs} args - Arguments to filter Wp_posts to count.
     * @example
     * // Count the number of Wp_posts
     * const count = await prisma.wp_posts.count({
     *   where: {
     *     // ... the filter for the Wp_posts we want to count
     *   }
     * })
    **/
    count<T extends wp_postsCountArgs>(
      args?: Subset<T, wp_postsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_postsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_postsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_postsAggregateArgs>(args: Subset<T, Wp_postsAggregateArgs>): Prisma.PrismaPromise<GetWp_postsAggregateType<T>>

    /**
     * Group by Wp_posts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_postsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_postsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_postsGroupByArgs['orderBy'] }
        : { orderBy?: wp_postsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_postsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_postsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_posts model
   */
  readonly fields: wp_postsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_posts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_postsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_posts model
   */
  interface wp_postsFieldRefs {
    readonly ID: FieldRef<"wp_posts", 'BigInt'>
    readonly post_author: FieldRef<"wp_posts", 'BigInt'>
    readonly post_date: FieldRef<"wp_posts", 'DateTime'>
    readonly post_date_gmt: FieldRef<"wp_posts", 'DateTime'>
    readonly post_content: FieldRef<"wp_posts", 'String'>
    readonly post_title: FieldRef<"wp_posts", 'String'>
    readonly post_excerpt: FieldRef<"wp_posts", 'String'>
    readonly post_status: FieldRef<"wp_posts", 'String'>
    readonly comment_status: FieldRef<"wp_posts", 'String'>
    readonly ping_status: FieldRef<"wp_posts", 'String'>
    readonly post_password: FieldRef<"wp_posts", 'String'>
    readonly post_name: FieldRef<"wp_posts", 'String'>
    readonly to_ping: FieldRef<"wp_posts", 'String'>
    readonly pinged: FieldRef<"wp_posts", 'String'>
    readonly post_modified: FieldRef<"wp_posts", 'DateTime'>
    readonly post_modified_gmt: FieldRef<"wp_posts", 'DateTime'>
    readonly post_content_filtered: FieldRef<"wp_posts", 'String'>
    readonly post_parent: FieldRef<"wp_posts", 'BigInt'>
    readonly guid: FieldRef<"wp_posts", 'String'>
    readonly menu_order: FieldRef<"wp_posts", 'Int'>
    readonly post_type: FieldRef<"wp_posts", 'String'>
    readonly post_mime_type: FieldRef<"wp_posts", 'String'>
    readonly comment_count: FieldRef<"wp_posts", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_posts findUnique
   */
  export type wp_postsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts findUniqueOrThrow
   */
  export type wp_postsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts findFirst
   */
  export type wp_postsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_posts.
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_posts.
     */
    distinct?: Wp_postsScalarFieldEnum | Wp_postsScalarFieldEnum[]
  }

  /**
   * wp_posts findFirstOrThrow
   */
  export type wp_postsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_posts.
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_posts.
     */
    distinct?: Wp_postsScalarFieldEnum | Wp_postsScalarFieldEnum[]
  }

  /**
   * wp_posts findMany
   */
  export type wp_postsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter, which wp_posts to fetch.
     */
    where?: wp_postsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_posts to fetch.
     */
    orderBy?: wp_postsOrderByWithRelationInput | wp_postsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_posts.
     */
    cursor?: wp_postsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_posts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_posts.
     */
    skip?: number
    distinct?: Wp_postsScalarFieldEnum | Wp_postsScalarFieldEnum[]
  }

  /**
   * wp_posts create
   */
  export type wp_postsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_posts.
     */
    data: XOR<wp_postsCreateInput, wp_postsUncheckedCreateInput>
  }

  /**
   * wp_posts createMany
   */
  export type wp_postsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_posts.
     */
    data: wp_postsCreateManyInput | wp_postsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_posts update
   */
  export type wp_postsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_posts.
     */
    data: XOR<wp_postsUpdateInput, wp_postsUncheckedUpdateInput>
    /**
     * Choose, which wp_posts to update.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts updateMany
   */
  export type wp_postsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_posts.
     */
    data: XOR<wp_postsUpdateManyMutationInput, wp_postsUncheckedUpdateManyInput>
    /**
     * Filter which wp_posts to update
     */
    where?: wp_postsWhereInput
    /**
     * Limit how many wp_posts to update.
     */
    limit?: number
  }

  /**
   * wp_posts upsert
   */
  export type wp_postsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_posts to update in case it exists.
     */
    where: wp_postsWhereUniqueInput
    /**
     * In case the wp_posts found by the `where` argument doesn't exist, create a new wp_posts with this data.
     */
    create: XOR<wp_postsCreateInput, wp_postsUncheckedCreateInput>
    /**
     * In case the wp_posts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_postsUpdateInput, wp_postsUncheckedUpdateInput>
  }

  /**
   * wp_posts delete
   */
  export type wp_postsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
    /**
     * Filter which wp_posts to delete.
     */
    where: wp_postsWhereUniqueInput
  }

  /**
   * wp_posts deleteMany
   */
  export type wp_postsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_posts to delete
     */
    where?: wp_postsWhereInput
    /**
     * Limit how many wp_posts to delete.
     */
    limit?: number
  }

  /**
   * wp_posts without action
   */
  export type wp_postsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_posts
     */
    select?: wp_postsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_posts
     */
    omit?: wp_postsOmit<ExtArgs> | null
  }


  /**
   * Model wp_rank_math_internal_links
   */

  export type AggregateWp_rank_math_internal_links = {
    _count: Wp_rank_math_internal_linksCountAggregateOutputType | null
    _avg: Wp_rank_math_internal_linksAvgAggregateOutputType | null
    _sum: Wp_rank_math_internal_linksSumAggregateOutputType | null
    _min: Wp_rank_math_internal_linksMinAggregateOutputType | null
    _max: Wp_rank_math_internal_linksMaxAggregateOutputType | null
  }

  export type Wp_rank_math_internal_linksAvgAggregateOutputType = {
    id: number | null
    post_id: number | null
    target_post_id: number | null
  }

  export type Wp_rank_math_internal_linksSumAggregateOutputType = {
    id: bigint | null
    post_id: bigint | null
    target_post_id: bigint | null
  }

  export type Wp_rank_math_internal_linksMinAggregateOutputType = {
    id: bigint | null
    url: string | null
    post_id: bigint | null
    target_post_id: bigint | null
    type: string | null
  }

  export type Wp_rank_math_internal_linksMaxAggregateOutputType = {
    id: bigint | null
    url: string | null
    post_id: bigint | null
    target_post_id: bigint | null
    type: string | null
  }

  export type Wp_rank_math_internal_linksCountAggregateOutputType = {
    id: number
    url: number
    post_id: number
    target_post_id: number
    type: number
    _all: number
  }


  export type Wp_rank_math_internal_linksAvgAggregateInputType = {
    id?: true
    post_id?: true
    target_post_id?: true
  }

  export type Wp_rank_math_internal_linksSumAggregateInputType = {
    id?: true
    post_id?: true
    target_post_id?: true
  }

  export type Wp_rank_math_internal_linksMinAggregateInputType = {
    id?: true
    url?: true
    post_id?: true
    target_post_id?: true
    type?: true
  }

  export type Wp_rank_math_internal_linksMaxAggregateInputType = {
    id?: true
    url?: true
    post_id?: true
    target_post_id?: true
    type?: true
  }

  export type Wp_rank_math_internal_linksCountAggregateInputType = {
    id?: true
    url?: true
    post_id?: true
    target_post_id?: true
    type?: true
    _all?: true
  }

  export type Wp_rank_math_internal_linksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_rank_math_internal_links to aggregate.
     */
    where?: wp_rank_math_internal_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_links to fetch.
     */
    orderBy?: wp_rank_math_internal_linksOrderByWithRelationInput | wp_rank_math_internal_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_rank_math_internal_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_rank_math_internal_links
    **/
    _count?: true | Wp_rank_math_internal_linksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_rank_math_internal_linksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_rank_math_internal_linksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_rank_math_internal_linksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_rank_math_internal_linksMaxAggregateInputType
  }

  export type GetWp_rank_math_internal_linksAggregateType<T extends Wp_rank_math_internal_linksAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_rank_math_internal_links]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_rank_math_internal_links[P]>
      : GetScalarType<T[P], AggregateWp_rank_math_internal_links[P]>
  }




  export type wp_rank_math_internal_linksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_rank_math_internal_linksWhereInput
    orderBy?: wp_rank_math_internal_linksOrderByWithAggregationInput | wp_rank_math_internal_linksOrderByWithAggregationInput[]
    by: Wp_rank_math_internal_linksScalarFieldEnum[] | Wp_rank_math_internal_linksScalarFieldEnum
    having?: wp_rank_math_internal_linksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_rank_math_internal_linksCountAggregateInputType | true
    _avg?: Wp_rank_math_internal_linksAvgAggregateInputType
    _sum?: Wp_rank_math_internal_linksSumAggregateInputType
    _min?: Wp_rank_math_internal_linksMinAggregateInputType
    _max?: Wp_rank_math_internal_linksMaxAggregateInputType
  }

  export type Wp_rank_math_internal_linksGroupByOutputType = {
    id: bigint
    url: string
    post_id: bigint
    target_post_id: bigint
    type: string
    _count: Wp_rank_math_internal_linksCountAggregateOutputType | null
    _avg: Wp_rank_math_internal_linksAvgAggregateOutputType | null
    _sum: Wp_rank_math_internal_linksSumAggregateOutputType | null
    _min: Wp_rank_math_internal_linksMinAggregateOutputType | null
    _max: Wp_rank_math_internal_linksMaxAggregateOutputType | null
  }

  type GetWp_rank_math_internal_linksGroupByPayload<T extends wp_rank_math_internal_linksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_rank_math_internal_linksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_rank_math_internal_linksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_rank_math_internal_linksGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_rank_math_internal_linksGroupByOutputType[P]>
        }
      >
    >


  export type wp_rank_math_internal_linksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    post_id?: boolean
    target_post_id?: boolean
    type?: boolean
  }, ExtArgs["result"]["wp_rank_math_internal_links"]>



  export type wp_rank_math_internal_linksSelectScalar = {
    id?: boolean
    url?: boolean
    post_id?: boolean
    target_post_id?: boolean
    type?: boolean
  }

  export type wp_rank_math_internal_linksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "post_id" | "target_post_id" | "type", ExtArgs["result"]["wp_rank_math_internal_links"]>

  export type $wp_rank_math_internal_linksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_rank_math_internal_links"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      url: string
      post_id: bigint
      target_post_id: bigint
      type: string
    }, ExtArgs["result"]["wp_rank_math_internal_links"]>
    composites: {}
  }

  type wp_rank_math_internal_linksGetPayload<S extends boolean | null | undefined | wp_rank_math_internal_linksDefaultArgs> = $Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload, S>

  type wp_rank_math_internal_linksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_rank_math_internal_linksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_rank_math_internal_linksCountAggregateInputType | true
    }

  export interface wp_rank_math_internal_linksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_rank_math_internal_links'], meta: { name: 'wp_rank_math_internal_links' } }
    /**
     * Find zero or one Wp_rank_math_internal_links that matches the filter.
     * @param {wp_rank_math_internal_linksFindUniqueArgs} args - Arguments to find a Wp_rank_math_internal_links
     * @example
     * // Get one Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_rank_math_internal_linksFindUniqueArgs>(args: SelectSubset<T, wp_rank_math_internal_linksFindUniqueArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_rank_math_internal_links that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_rank_math_internal_linksFindUniqueOrThrowArgs} args - Arguments to find a Wp_rank_math_internal_links
     * @example
     * // Get one Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_rank_math_internal_linksFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_rank_math_internal_linksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_rank_math_internal_links that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_linksFindFirstArgs} args - Arguments to find a Wp_rank_math_internal_links
     * @example
     * // Get one Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_rank_math_internal_linksFindFirstArgs>(args?: SelectSubset<T, wp_rank_math_internal_linksFindFirstArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_rank_math_internal_links that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_linksFindFirstOrThrowArgs} args - Arguments to find a Wp_rank_math_internal_links
     * @example
     * // Get one Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_rank_math_internal_linksFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_rank_math_internal_linksFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_rank_math_internal_links that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_linksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.findMany()
     * 
     * // Get first 10 Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_rank_math_internal_linksWithIdOnly = await prisma.wp_rank_math_internal_links.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_rank_math_internal_linksFindManyArgs>(args?: SelectSubset<T, wp_rank_math_internal_linksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_rank_math_internal_links.
     * @param {wp_rank_math_internal_linksCreateArgs} args - Arguments to create a Wp_rank_math_internal_links.
     * @example
     * // Create one Wp_rank_math_internal_links
     * const Wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.create({
     *   data: {
     *     // ... data to create a Wp_rank_math_internal_links
     *   }
     * })
     * 
     */
    create<T extends wp_rank_math_internal_linksCreateArgs>(args: SelectSubset<T, wp_rank_math_internal_linksCreateArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_rank_math_internal_links.
     * @param {wp_rank_math_internal_linksCreateManyArgs} args - Arguments to create many Wp_rank_math_internal_links.
     * @example
     * // Create many Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_rank_math_internal_linksCreateManyArgs>(args?: SelectSubset<T, wp_rank_math_internal_linksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_rank_math_internal_links.
     * @param {wp_rank_math_internal_linksDeleteArgs} args - Arguments to delete one Wp_rank_math_internal_links.
     * @example
     * // Delete one Wp_rank_math_internal_links
     * const Wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.delete({
     *   where: {
     *     // ... filter to delete one Wp_rank_math_internal_links
     *   }
     * })
     * 
     */
    delete<T extends wp_rank_math_internal_linksDeleteArgs>(args: SelectSubset<T, wp_rank_math_internal_linksDeleteArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_rank_math_internal_links.
     * @param {wp_rank_math_internal_linksUpdateArgs} args - Arguments to update one Wp_rank_math_internal_links.
     * @example
     * // Update one Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_rank_math_internal_linksUpdateArgs>(args: SelectSubset<T, wp_rank_math_internal_linksUpdateArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_rank_math_internal_links.
     * @param {wp_rank_math_internal_linksDeleteManyArgs} args - Arguments to filter Wp_rank_math_internal_links to delete.
     * @example
     * // Delete a few Wp_rank_math_internal_links
     * const { count } = await prisma.wp_rank_math_internal_links.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_rank_math_internal_linksDeleteManyArgs>(args?: SelectSubset<T, wp_rank_math_internal_linksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_rank_math_internal_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_linksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_rank_math_internal_linksUpdateManyArgs>(args: SelectSubset<T, wp_rank_math_internal_linksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_rank_math_internal_links.
     * @param {wp_rank_math_internal_linksUpsertArgs} args - Arguments to update or create a Wp_rank_math_internal_links.
     * @example
     * // Update or create a Wp_rank_math_internal_links
     * const wp_rank_math_internal_links = await prisma.wp_rank_math_internal_links.upsert({
     *   create: {
     *     // ... data to create a Wp_rank_math_internal_links
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_rank_math_internal_links we want to update
     *   }
     * })
     */
    upsert<T extends wp_rank_math_internal_linksUpsertArgs>(args: SelectSubset<T, wp_rank_math_internal_linksUpsertArgs<ExtArgs>>): Prisma__wp_rank_math_internal_linksClient<$Result.GetResult<Prisma.$wp_rank_math_internal_linksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_rank_math_internal_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_linksCountArgs} args - Arguments to filter Wp_rank_math_internal_links to count.
     * @example
     * // Count the number of Wp_rank_math_internal_links
     * const count = await prisma.wp_rank_math_internal_links.count({
     *   where: {
     *     // ... the filter for the Wp_rank_math_internal_links we want to count
     *   }
     * })
    **/
    count<T extends wp_rank_math_internal_linksCountArgs>(
      args?: Subset<T, wp_rank_math_internal_linksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_rank_math_internal_linksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_rank_math_internal_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_rank_math_internal_linksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_rank_math_internal_linksAggregateArgs>(args: Subset<T, Wp_rank_math_internal_linksAggregateArgs>): Prisma.PrismaPromise<GetWp_rank_math_internal_linksAggregateType<T>>

    /**
     * Group by Wp_rank_math_internal_links.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_linksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_rank_math_internal_linksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_rank_math_internal_linksGroupByArgs['orderBy'] }
        : { orderBy?: wp_rank_math_internal_linksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_rank_math_internal_linksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_rank_math_internal_linksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_rank_math_internal_links model
   */
  readonly fields: wp_rank_math_internal_linksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_rank_math_internal_links.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_rank_math_internal_linksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_rank_math_internal_links model
   */
  interface wp_rank_math_internal_linksFieldRefs {
    readonly id: FieldRef<"wp_rank_math_internal_links", 'BigInt'>
    readonly url: FieldRef<"wp_rank_math_internal_links", 'String'>
    readonly post_id: FieldRef<"wp_rank_math_internal_links", 'BigInt'>
    readonly target_post_id: FieldRef<"wp_rank_math_internal_links", 'BigInt'>
    readonly type: FieldRef<"wp_rank_math_internal_links", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_rank_math_internal_links findUnique
   */
  export type wp_rank_math_internal_linksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_links to fetch.
     */
    where: wp_rank_math_internal_linksWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_links findUniqueOrThrow
   */
  export type wp_rank_math_internal_linksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_links to fetch.
     */
    where: wp_rank_math_internal_linksWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_links findFirst
   */
  export type wp_rank_math_internal_linksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_links to fetch.
     */
    where?: wp_rank_math_internal_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_links to fetch.
     */
    orderBy?: wp_rank_math_internal_linksOrderByWithRelationInput | wp_rank_math_internal_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_rank_math_internal_links.
     */
    cursor?: wp_rank_math_internal_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_rank_math_internal_links.
     */
    distinct?: Wp_rank_math_internal_linksScalarFieldEnum | Wp_rank_math_internal_linksScalarFieldEnum[]
  }

  /**
   * wp_rank_math_internal_links findFirstOrThrow
   */
  export type wp_rank_math_internal_linksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_links to fetch.
     */
    where?: wp_rank_math_internal_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_links to fetch.
     */
    orderBy?: wp_rank_math_internal_linksOrderByWithRelationInput | wp_rank_math_internal_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_rank_math_internal_links.
     */
    cursor?: wp_rank_math_internal_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_links.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_rank_math_internal_links.
     */
    distinct?: Wp_rank_math_internal_linksScalarFieldEnum | Wp_rank_math_internal_linksScalarFieldEnum[]
  }

  /**
   * wp_rank_math_internal_links findMany
   */
  export type wp_rank_math_internal_linksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_links to fetch.
     */
    where?: wp_rank_math_internal_linksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_links to fetch.
     */
    orderBy?: wp_rank_math_internal_linksOrderByWithRelationInput | wp_rank_math_internal_linksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_rank_math_internal_links.
     */
    cursor?: wp_rank_math_internal_linksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_links from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_links.
     */
    skip?: number
    distinct?: Wp_rank_math_internal_linksScalarFieldEnum | Wp_rank_math_internal_linksScalarFieldEnum[]
  }

  /**
   * wp_rank_math_internal_links create
   */
  export type wp_rank_math_internal_linksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_rank_math_internal_links.
     */
    data: XOR<wp_rank_math_internal_linksCreateInput, wp_rank_math_internal_linksUncheckedCreateInput>
  }

  /**
   * wp_rank_math_internal_links createMany
   */
  export type wp_rank_math_internal_linksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_rank_math_internal_links.
     */
    data: wp_rank_math_internal_linksCreateManyInput | wp_rank_math_internal_linksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_rank_math_internal_links update
   */
  export type wp_rank_math_internal_linksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_rank_math_internal_links.
     */
    data: XOR<wp_rank_math_internal_linksUpdateInput, wp_rank_math_internal_linksUncheckedUpdateInput>
    /**
     * Choose, which wp_rank_math_internal_links to update.
     */
    where: wp_rank_math_internal_linksWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_links updateMany
   */
  export type wp_rank_math_internal_linksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_rank_math_internal_links.
     */
    data: XOR<wp_rank_math_internal_linksUpdateManyMutationInput, wp_rank_math_internal_linksUncheckedUpdateManyInput>
    /**
     * Filter which wp_rank_math_internal_links to update
     */
    where?: wp_rank_math_internal_linksWhereInput
    /**
     * Limit how many wp_rank_math_internal_links to update.
     */
    limit?: number
  }

  /**
   * wp_rank_math_internal_links upsert
   */
  export type wp_rank_math_internal_linksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_rank_math_internal_links to update in case it exists.
     */
    where: wp_rank_math_internal_linksWhereUniqueInput
    /**
     * In case the wp_rank_math_internal_links found by the `where` argument doesn't exist, create a new wp_rank_math_internal_links with this data.
     */
    create: XOR<wp_rank_math_internal_linksCreateInput, wp_rank_math_internal_linksUncheckedCreateInput>
    /**
     * In case the wp_rank_math_internal_links was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_rank_math_internal_linksUpdateInput, wp_rank_math_internal_linksUncheckedUpdateInput>
  }

  /**
   * wp_rank_math_internal_links delete
   */
  export type wp_rank_math_internal_linksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
    /**
     * Filter which wp_rank_math_internal_links to delete.
     */
    where: wp_rank_math_internal_linksWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_links deleteMany
   */
  export type wp_rank_math_internal_linksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_rank_math_internal_links to delete
     */
    where?: wp_rank_math_internal_linksWhereInput
    /**
     * Limit how many wp_rank_math_internal_links to delete.
     */
    limit?: number
  }

  /**
   * wp_rank_math_internal_links without action
   */
  export type wp_rank_math_internal_linksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_links
     */
    select?: wp_rank_math_internal_linksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_links
     */
    omit?: wp_rank_math_internal_linksOmit<ExtArgs> | null
  }


  /**
   * Model wp_rank_math_internal_meta
   */

  export type AggregateWp_rank_math_internal_meta = {
    _count: Wp_rank_math_internal_metaCountAggregateOutputType | null
    _avg: Wp_rank_math_internal_metaAvgAggregateOutputType | null
    _sum: Wp_rank_math_internal_metaSumAggregateOutputType | null
    _min: Wp_rank_math_internal_metaMinAggregateOutputType | null
    _max: Wp_rank_math_internal_metaMaxAggregateOutputType | null
  }

  export type Wp_rank_math_internal_metaAvgAggregateOutputType = {
    object_id: number | null
    internal_link_count: number | null
    external_link_count: number | null
    incoming_link_count: number | null
  }

  export type Wp_rank_math_internal_metaSumAggregateOutputType = {
    object_id: bigint | null
    internal_link_count: number | null
    external_link_count: number | null
    incoming_link_count: number | null
  }

  export type Wp_rank_math_internal_metaMinAggregateOutputType = {
    object_id: bigint | null
    internal_link_count: number | null
    external_link_count: number | null
    incoming_link_count: number | null
  }

  export type Wp_rank_math_internal_metaMaxAggregateOutputType = {
    object_id: bigint | null
    internal_link_count: number | null
    external_link_count: number | null
    incoming_link_count: number | null
  }

  export type Wp_rank_math_internal_metaCountAggregateOutputType = {
    object_id: number
    internal_link_count: number
    external_link_count: number
    incoming_link_count: number
    _all: number
  }


  export type Wp_rank_math_internal_metaAvgAggregateInputType = {
    object_id?: true
    internal_link_count?: true
    external_link_count?: true
    incoming_link_count?: true
  }

  export type Wp_rank_math_internal_metaSumAggregateInputType = {
    object_id?: true
    internal_link_count?: true
    external_link_count?: true
    incoming_link_count?: true
  }

  export type Wp_rank_math_internal_metaMinAggregateInputType = {
    object_id?: true
    internal_link_count?: true
    external_link_count?: true
    incoming_link_count?: true
  }

  export type Wp_rank_math_internal_metaMaxAggregateInputType = {
    object_id?: true
    internal_link_count?: true
    external_link_count?: true
    incoming_link_count?: true
  }

  export type Wp_rank_math_internal_metaCountAggregateInputType = {
    object_id?: true
    internal_link_count?: true
    external_link_count?: true
    incoming_link_count?: true
    _all?: true
  }

  export type Wp_rank_math_internal_metaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_rank_math_internal_meta to aggregate.
     */
    where?: wp_rank_math_internal_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_metas to fetch.
     */
    orderBy?: wp_rank_math_internal_metaOrderByWithRelationInput | wp_rank_math_internal_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_rank_math_internal_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_rank_math_internal_metas
    **/
    _count?: true | Wp_rank_math_internal_metaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_rank_math_internal_metaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_rank_math_internal_metaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_rank_math_internal_metaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_rank_math_internal_metaMaxAggregateInputType
  }

  export type GetWp_rank_math_internal_metaAggregateType<T extends Wp_rank_math_internal_metaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_rank_math_internal_meta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_rank_math_internal_meta[P]>
      : GetScalarType<T[P], AggregateWp_rank_math_internal_meta[P]>
  }




  export type wp_rank_math_internal_metaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_rank_math_internal_metaWhereInput
    orderBy?: wp_rank_math_internal_metaOrderByWithAggregationInput | wp_rank_math_internal_metaOrderByWithAggregationInput[]
    by: Wp_rank_math_internal_metaScalarFieldEnum[] | Wp_rank_math_internal_metaScalarFieldEnum
    having?: wp_rank_math_internal_metaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_rank_math_internal_metaCountAggregateInputType | true
    _avg?: Wp_rank_math_internal_metaAvgAggregateInputType
    _sum?: Wp_rank_math_internal_metaSumAggregateInputType
    _min?: Wp_rank_math_internal_metaMinAggregateInputType
    _max?: Wp_rank_math_internal_metaMaxAggregateInputType
  }

  export type Wp_rank_math_internal_metaGroupByOutputType = {
    object_id: bigint
    internal_link_count: number | null
    external_link_count: number | null
    incoming_link_count: number | null
    _count: Wp_rank_math_internal_metaCountAggregateOutputType | null
    _avg: Wp_rank_math_internal_metaAvgAggregateOutputType | null
    _sum: Wp_rank_math_internal_metaSumAggregateOutputType | null
    _min: Wp_rank_math_internal_metaMinAggregateOutputType | null
    _max: Wp_rank_math_internal_metaMaxAggregateOutputType | null
  }

  type GetWp_rank_math_internal_metaGroupByPayload<T extends wp_rank_math_internal_metaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_rank_math_internal_metaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_rank_math_internal_metaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_rank_math_internal_metaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_rank_math_internal_metaGroupByOutputType[P]>
        }
      >
    >


  export type wp_rank_math_internal_metaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    object_id?: boolean
    internal_link_count?: boolean
    external_link_count?: boolean
    incoming_link_count?: boolean
  }, ExtArgs["result"]["wp_rank_math_internal_meta"]>



  export type wp_rank_math_internal_metaSelectScalar = {
    object_id?: boolean
    internal_link_count?: boolean
    external_link_count?: boolean
    incoming_link_count?: boolean
  }

  export type wp_rank_math_internal_metaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"object_id" | "internal_link_count" | "external_link_count" | "incoming_link_count", ExtArgs["result"]["wp_rank_math_internal_meta"]>

  export type $wp_rank_math_internal_metaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_rank_math_internal_meta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      object_id: bigint
      internal_link_count: number | null
      external_link_count: number | null
      incoming_link_count: number | null
    }, ExtArgs["result"]["wp_rank_math_internal_meta"]>
    composites: {}
  }

  type wp_rank_math_internal_metaGetPayload<S extends boolean | null | undefined | wp_rank_math_internal_metaDefaultArgs> = $Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload, S>

  type wp_rank_math_internal_metaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_rank_math_internal_metaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_rank_math_internal_metaCountAggregateInputType | true
    }

  export interface wp_rank_math_internal_metaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_rank_math_internal_meta'], meta: { name: 'wp_rank_math_internal_meta' } }
    /**
     * Find zero or one Wp_rank_math_internal_meta that matches the filter.
     * @param {wp_rank_math_internal_metaFindUniqueArgs} args - Arguments to find a Wp_rank_math_internal_meta
     * @example
     * // Get one Wp_rank_math_internal_meta
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_rank_math_internal_metaFindUniqueArgs>(args: SelectSubset<T, wp_rank_math_internal_metaFindUniqueArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_rank_math_internal_meta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_rank_math_internal_metaFindUniqueOrThrowArgs} args - Arguments to find a Wp_rank_math_internal_meta
     * @example
     * // Get one Wp_rank_math_internal_meta
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_rank_math_internal_metaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_rank_math_internal_metaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_rank_math_internal_meta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_metaFindFirstArgs} args - Arguments to find a Wp_rank_math_internal_meta
     * @example
     * // Get one Wp_rank_math_internal_meta
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_rank_math_internal_metaFindFirstArgs>(args?: SelectSubset<T, wp_rank_math_internal_metaFindFirstArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_rank_math_internal_meta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_metaFindFirstOrThrowArgs} args - Arguments to find a Wp_rank_math_internal_meta
     * @example
     * // Get one Wp_rank_math_internal_meta
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_rank_math_internal_metaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_rank_math_internal_metaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_rank_math_internal_metas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_metaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_rank_math_internal_metas
     * const wp_rank_math_internal_metas = await prisma.wp_rank_math_internal_meta.findMany()
     * 
     * // Get first 10 Wp_rank_math_internal_metas
     * const wp_rank_math_internal_metas = await prisma.wp_rank_math_internal_meta.findMany({ take: 10 })
     * 
     * // Only select the `object_id`
     * const wp_rank_math_internal_metaWithObject_idOnly = await prisma.wp_rank_math_internal_meta.findMany({ select: { object_id: true } })
     * 
     */
    findMany<T extends wp_rank_math_internal_metaFindManyArgs>(args?: SelectSubset<T, wp_rank_math_internal_metaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_rank_math_internal_meta.
     * @param {wp_rank_math_internal_metaCreateArgs} args - Arguments to create a Wp_rank_math_internal_meta.
     * @example
     * // Create one Wp_rank_math_internal_meta
     * const Wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.create({
     *   data: {
     *     // ... data to create a Wp_rank_math_internal_meta
     *   }
     * })
     * 
     */
    create<T extends wp_rank_math_internal_metaCreateArgs>(args: SelectSubset<T, wp_rank_math_internal_metaCreateArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_rank_math_internal_metas.
     * @param {wp_rank_math_internal_metaCreateManyArgs} args - Arguments to create many Wp_rank_math_internal_metas.
     * @example
     * // Create many Wp_rank_math_internal_metas
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_rank_math_internal_metaCreateManyArgs>(args?: SelectSubset<T, wp_rank_math_internal_metaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_rank_math_internal_meta.
     * @param {wp_rank_math_internal_metaDeleteArgs} args - Arguments to delete one Wp_rank_math_internal_meta.
     * @example
     * // Delete one Wp_rank_math_internal_meta
     * const Wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.delete({
     *   where: {
     *     // ... filter to delete one Wp_rank_math_internal_meta
     *   }
     * })
     * 
     */
    delete<T extends wp_rank_math_internal_metaDeleteArgs>(args: SelectSubset<T, wp_rank_math_internal_metaDeleteArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_rank_math_internal_meta.
     * @param {wp_rank_math_internal_metaUpdateArgs} args - Arguments to update one Wp_rank_math_internal_meta.
     * @example
     * // Update one Wp_rank_math_internal_meta
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_rank_math_internal_metaUpdateArgs>(args: SelectSubset<T, wp_rank_math_internal_metaUpdateArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_rank_math_internal_metas.
     * @param {wp_rank_math_internal_metaDeleteManyArgs} args - Arguments to filter Wp_rank_math_internal_metas to delete.
     * @example
     * // Delete a few Wp_rank_math_internal_metas
     * const { count } = await prisma.wp_rank_math_internal_meta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_rank_math_internal_metaDeleteManyArgs>(args?: SelectSubset<T, wp_rank_math_internal_metaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_rank_math_internal_metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_metaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_rank_math_internal_metas
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_rank_math_internal_metaUpdateManyArgs>(args: SelectSubset<T, wp_rank_math_internal_metaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_rank_math_internal_meta.
     * @param {wp_rank_math_internal_metaUpsertArgs} args - Arguments to update or create a Wp_rank_math_internal_meta.
     * @example
     * // Update or create a Wp_rank_math_internal_meta
     * const wp_rank_math_internal_meta = await prisma.wp_rank_math_internal_meta.upsert({
     *   create: {
     *     // ... data to create a Wp_rank_math_internal_meta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_rank_math_internal_meta we want to update
     *   }
     * })
     */
    upsert<T extends wp_rank_math_internal_metaUpsertArgs>(args: SelectSubset<T, wp_rank_math_internal_metaUpsertArgs<ExtArgs>>): Prisma__wp_rank_math_internal_metaClient<$Result.GetResult<Prisma.$wp_rank_math_internal_metaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_rank_math_internal_metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_metaCountArgs} args - Arguments to filter Wp_rank_math_internal_metas to count.
     * @example
     * // Count the number of Wp_rank_math_internal_metas
     * const count = await prisma.wp_rank_math_internal_meta.count({
     *   where: {
     *     // ... the filter for the Wp_rank_math_internal_metas we want to count
     *   }
     * })
    **/
    count<T extends wp_rank_math_internal_metaCountArgs>(
      args?: Subset<T, wp_rank_math_internal_metaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_rank_math_internal_metaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_rank_math_internal_meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_rank_math_internal_metaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_rank_math_internal_metaAggregateArgs>(args: Subset<T, Wp_rank_math_internal_metaAggregateArgs>): Prisma.PrismaPromise<GetWp_rank_math_internal_metaAggregateType<T>>

    /**
     * Group by Wp_rank_math_internal_meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rank_math_internal_metaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_rank_math_internal_metaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_rank_math_internal_metaGroupByArgs['orderBy'] }
        : { orderBy?: wp_rank_math_internal_metaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_rank_math_internal_metaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_rank_math_internal_metaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_rank_math_internal_meta model
   */
  readonly fields: wp_rank_math_internal_metaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_rank_math_internal_meta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_rank_math_internal_metaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_rank_math_internal_meta model
   */
  interface wp_rank_math_internal_metaFieldRefs {
    readonly object_id: FieldRef<"wp_rank_math_internal_meta", 'BigInt'>
    readonly internal_link_count: FieldRef<"wp_rank_math_internal_meta", 'Int'>
    readonly external_link_count: FieldRef<"wp_rank_math_internal_meta", 'Int'>
    readonly incoming_link_count: FieldRef<"wp_rank_math_internal_meta", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_rank_math_internal_meta findUnique
   */
  export type wp_rank_math_internal_metaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_meta to fetch.
     */
    where: wp_rank_math_internal_metaWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_meta findUniqueOrThrow
   */
  export type wp_rank_math_internal_metaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_meta to fetch.
     */
    where: wp_rank_math_internal_metaWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_meta findFirst
   */
  export type wp_rank_math_internal_metaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_meta to fetch.
     */
    where?: wp_rank_math_internal_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_metas to fetch.
     */
    orderBy?: wp_rank_math_internal_metaOrderByWithRelationInput | wp_rank_math_internal_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_rank_math_internal_metas.
     */
    cursor?: wp_rank_math_internal_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_rank_math_internal_metas.
     */
    distinct?: Wp_rank_math_internal_metaScalarFieldEnum | Wp_rank_math_internal_metaScalarFieldEnum[]
  }

  /**
   * wp_rank_math_internal_meta findFirstOrThrow
   */
  export type wp_rank_math_internal_metaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_meta to fetch.
     */
    where?: wp_rank_math_internal_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_metas to fetch.
     */
    orderBy?: wp_rank_math_internal_metaOrderByWithRelationInput | wp_rank_math_internal_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_rank_math_internal_metas.
     */
    cursor?: wp_rank_math_internal_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_rank_math_internal_metas.
     */
    distinct?: Wp_rank_math_internal_metaScalarFieldEnum | Wp_rank_math_internal_metaScalarFieldEnum[]
  }

  /**
   * wp_rank_math_internal_meta findMany
   */
  export type wp_rank_math_internal_metaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_rank_math_internal_metas to fetch.
     */
    where?: wp_rank_math_internal_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rank_math_internal_metas to fetch.
     */
    orderBy?: wp_rank_math_internal_metaOrderByWithRelationInput | wp_rank_math_internal_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_rank_math_internal_metas.
     */
    cursor?: wp_rank_math_internal_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rank_math_internal_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rank_math_internal_metas.
     */
    skip?: number
    distinct?: Wp_rank_math_internal_metaScalarFieldEnum | Wp_rank_math_internal_metaScalarFieldEnum[]
  }

  /**
   * wp_rank_math_internal_meta create
   */
  export type wp_rank_math_internal_metaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_rank_math_internal_meta.
     */
    data: XOR<wp_rank_math_internal_metaCreateInput, wp_rank_math_internal_metaUncheckedCreateInput>
  }

  /**
   * wp_rank_math_internal_meta createMany
   */
  export type wp_rank_math_internal_metaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_rank_math_internal_metas.
     */
    data: wp_rank_math_internal_metaCreateManyInput | wp_rank_math_internal_metaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_rank_math_internal_meta update
   */
  export type wp_rank_math_internal_metaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_rank_math_internal_meta.
     */
    data: XOR<wp_rank_math_internal_metaUpdateInput, wp_rank_math_internal_metaUncheckedUpdateInput>
    /**
     * Choose, which wp_rank_math_internal_meta to update.
     */
    where: wp_rank_math_internal_metaWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_meta updateMany
   */
  export type wp_rank_math_internal_metaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_rank_math_internal_metas.
     */
    data: XOR<wp_rank_math_internal_metaUpdateManyMutationInput, wp_rank_math_internal_metaUncheckedUpdateManyInput>
    /**
     * Filter which wp_rank_math_internal_metas to update
     */
    where?: wp_rank_math_internal_metaWhereInput
    /**
     * Limit how many wp_rank_math_internal_metas to update.
     */
    limit?: number
  }

  /**
   * wp_rank_math_internal_meta upsert
   */
  export type wp_rank_math_internal_metaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_rank_math_internal_meta to update in case it exists.
     */
    where: wp_rank_math_internal_metaWhereUniqueInput
    /**
     * In case the wp_rank_math_internal_meta found by the `where` argument doesn't exist, create a new wp_rank_math_internal_meta with this data.
     */
    create: XOR<wp_rank_math_internal_metaCreateInput, wp_rank_math_internal_metaUncheckedCreateInput>
    /**
     * In case the wp_rank_math_internal_meta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_rank_math_internal_metaUpdateInput, wp_rank_math_internal_metaUncheckedUpdateInput>
  }

  /**
   * wp_rank_math_internal_meta delete
   */
  export type wp_rank_math_internal_metaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
    /**
     * Filter which wp_rank_math_internal_meta to delete.
     */
    where: wp_rank_math_internal_metaWhereUniqueInput
  }

  /**
   * wp_rank_math_internal_meta deleteMany
   */
  export type wp_rank_math_internal_metaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_rank_math_internal_metas to delete
     */
    where?: wp_rank_math_internal_metaWhereInput
    /**
     * Limit how many wp_rank_math_internal_metas to delete.
     */
    limit?: number
  }

  /**
   * wp_rank_math_internal_meta without action
   */
  export type wp_rank_math_internal_metaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rank_math_internal_meta
     */
    select?: wp_rank_math_internal_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rank_math_internal_meta
     */
    omit?: wp_rank_math_internal_metaOmit<ExtArgs> | null
  }


  /**
   * Model wp_rtl_rsm_logs
   */

  export type AggregateWp_rtl_rsm_logs = {
    _count: Wp_rtl_rsm_logsCountAggregateOutputType | null
    _avg: Wp_rtl_rsm_logsAvgAggregateOutputType | null
    _sum: Wp_rtl_rsm_logsSumAggregateOutputType | null
    _min: Wp_rtl_rsm_logsMinAggregateOutputType | null
    _max: Wp_rtl_rsm_logsMaxAggregateOutputType | null
  }

  export type Wp_rtl_rsm_logsAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_rtl_rsm_logsSumAggregateOutputType = {
    id: number | null
  }

  export type Wp_rtl_rsm_logsMinAggregateOutputType = {
    id: number | null
    type: string | null
    section: string | null
    result: string | null
    date: Date | null
  }

  export type Wp_rtl_rsm_logsMaxAggregateOutputType = {
    id: number | null
    type: string | null
    section: string | null
    result: string | null
    date: Date | null
  }

  export type Wp_rtl_rsm_logsCountAggregateOutputType = {
    id: number
    type: number
    section: number
    result: number
    date: number
    _all: number
  }


  export type Wp_rtl_rsm_logsAvgAggregateInputType = {
    id?: true
  }

  export type Wp_rtl_rsm_logsSumAggregateInputType = {
    id?: true
  }

  export type Wp_rtl_rsm_logsMinAggregateInputType = {
    id?: true
    type?: true
    section?: true
    result?: true
    date?: true
  }

  export type Wp_rtl_rsm_logsMaxAggregateInputType = {
    id?: true
    type?: true
    section?: true
    result?: true
    date?: true
  }

  export type Wp_rtl_rsm_logsCountAggregateInputType = {
    id?: true
    type?: true
    section?: true
    result?: true
    date?: true
    _all?: true
  }

  export type Wp_rtl_rsm_logsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_rtl_rsm_logs to aggregate.
     */
    where?: wp_rtl_rsm_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rtl_rsm_logs to fetch.
     */
    orderBy?: wp_rtl_rsm_logsOrderByWithRelationInput | wp_rtl_rsm_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_rtl_rsm_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rtl_rsm_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rtl_rsm_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_rtl_rsm_logs
    **/
    _count?: true | Wp_rtl_rsm_logsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_rtl_rsm_logsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_rtl_rsm_logsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_rtl_rsm_logsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_rtl_rsm_logsMaxAggregateInputType
  }

  export type GetWp_rtl_rsm_logsAggregateType<T extends Wp_rtl_rsm_logsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_rtl_rsm_logs]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_rtl_rsm_logs[P]>
      : GetScalarType<T[P], AggregateWp_rtl_rsm_logs[P]>
  }




  export type wp_rtl_rsm_logsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_rtl_rsm_logsWhereInput
    orderBy?: wp_rtl_rsm_logsOrderByWithAggregationInput | wp_rtl_rsm_logsOrderByWithAggregationInput[]
    by: Wp_rtl_rsm_logsScalarFieldEnum[] | Wp_rtl_rsm_logsScalarFieldEnum
    having?: wp_rtl_rsm_logsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_rtl_rsm_logsCountAggregateInputType | true
    _avg?: Wp_rtl_rsm_logsAvgAggregateInputType
    _sum?: Wp_rtl_rsm_logsSumAggregateInputType
    _min?: Wp_rtl_rsm_logsMinAggregateInputType
    _max?: Wp_rtl_rsm_logsMaxAggregateInputType
  }

  export type Wp_rtl_rsm_logsGroupByOutputType = {
    id: number
    type: string
    section: string
    result: string
    date: Date
    _count: Wp_rtl_rsm_logsCountAggregateOutputType | null
    _avg: Wp_rtl_rsm_logsAvgAggregateOutputType | null
    _sum: Wp_rtl_rsm_logsSumAggregateOutputType | null
    _min: Wp_rtl_rsm_logsMinAggregateOutputType | null
    _max: Wp_rtl_rsm_logsMaxAggregateOutputType | null
  }

  type GetWp_rtl_rsm_logsGroupByPayload<T extends wp_rtl_rsm_logsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_rtl_rsm_logsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_rtl_rsm_logsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_rtl_rsm_logsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_rtl_rsm_logsGroupByOutputType[P]>
        }
      >
    >


  export type wp_rtl_rsm_logsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    type?: boolean
    section?: boolean
    result?: boolean
    date?: boolean
  }, ExtArgs["result"]["wp_rtl_rsm_logs"]>



  export type wp_rtl_rsm_logsSelectScalar = {
    id?: boolean
    type?: boolean
    section?: boolean
    result?: boolean
    date?: boolean
  }

  export type wp_rtl_rsm_logsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "type" | "section" | "result" | "date", ExtArgs["result"]["wp_rtl_rsm_logs"]>

  export type $wp_rtl_rsm_logsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_rtl_rsm_logs"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      type: string
      section: string
      result: string
      date: Date
    }, ExtArgs["result"]["wp_rtl_rsm_logs"]>
    composites: {}
  }

  type wp_rtl_rsm_logsGetPayload<S extends boolean | null | undefined | wp_rtl_rsm_logsDefaultArgs> = $Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload, S>

  type wp_rtl_rsm_logsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_rtl_rsm_logsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_rtl_rsm_logsCountAggregateInputType | true
    }

  export interface wp_rtl_rsm_logsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_rtl_rsm_logs'], meta: { name: 'wp_rtl_rsm_logs' } }
    /**
     * Find zero or one Wp_rtl_rsm_logs that matches the filter.
     * @param {wp_rtl_rsm_logsFindUniqueArgs} args - Arguments to find a Wp_rtl_rsm_logs
     * @example
     * // Get one Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_rtl_rsm_logsFindUniqueArgs>(args: SelectSubset<T, wp_rtl_rsm_logsFindUniqueArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_rtl_rsm_logs that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_rtl_rsm_logsFindUniqueOrThrowArgs} args - Arguments to find a Wp_rtl_rsm_logs
     * @example
     * // Get one Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_rtl_rsm_logsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_rtl_rsm_logsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_rtl_rsm_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rtl_rsm_logsFindFirstArgs} args - Arguments to find a Wp_rtl_rsm_logs
     * @example
     * // Get one Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_rtl_rsm_logsFindFirstArgs>(args?: SelectSubset<T, wp_rtl_rsm_logsFindFirstArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_rtl_rsm_logs that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rtl_rsm_logsFindFirstOrThrowArgs} args - Arguments to find a Wp_rtl_rsm_logs
     * @example
     * // Get one Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_rtl_rsm_logsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_rtl_rsm_logsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_rtl_rsm_logs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rtl_rsm_logsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.findMany()
     * 
     * // Get first 10 Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_rtl_rsm_logsWithIdOnly = await prisma.wp_rtl_rsm_logs.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_rtl_rsm_logsFindManyArgs>(args?: SelectSubset<T, wp_rtl_rsm_logsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_rtl_rsm_logs.
     * @param {wp_rtl_rsm_logsCreateArgs} args - Arguments to create a Wp_rtl_rsm_logs.
     * @example
     * // Create one Wp_rtl_rsm_logs
     * const Wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.create({
     *   data: {
     *     // ... data to create a Wp_rtl_rsm_logs
     *   }
     * })
     * 
     */
    create<T extends wp_rtl_rsm_logsCreateArgs>(args: SelectSubset<T, wp_rtl_rsm_logsCreateArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_rtl_rsm_logs.
     * @param {wp_rtl_rsm_logsCreateManyArgs} args - Arguments to create many Wp_rtl_rsm_logs.
     * @example
     * // Create many Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_rtl_rsm_logsCreateManyArgs>(args?: SelectSubset<T, wp_rtl_rsm_logsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_rtl_rsm_logs.
     * @param {wp_rtl_rsm_logsDeleteArgs} args - Arguments to delete one Wp_rtl_rsm_logs.
     * @example
     * // Delete one Wp_rtl_rsm_logs
     * const Wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.delete({
     *   where: {
     *     // ... filter to delete one Wp_rtl_rsm_logs
     *   }
     * })
     * 
     */
    delete<T extends wp_rtl_rsm_logsDeleteArgs>(args: SelectSubset<T, wp_rtl_rsm_logsDeleteArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_rtl_rsm_logs.
     * @param {wp_rtl_rsm_logsUpdateArgs} args - Arguments to update one Wp_rtl_rsm_logs.
     * @example
     * // Update one Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_rtl_rsm_logsUpdateArgs>(args: SelectSubset<T, wp_rtl_rsm_logsUpdateArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_rtl_rsm_logs.
     * @param {wp_rtl_rsm_logsDeleteManyArgs} args - Arguments to filter Wp_rtl_rsm_logs to delete.
     * @example
     * // Delete a few Wp_rtl_rsm_logs
     * const { count } = await prisma.wp_rtl_rsm_logs.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_rtl_rsm_logsDeleteManyArgs>(args?: SelectSubset<T, wp_rtl_rsm_logsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_rtl_rsm_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rtl_rsm_logsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_rtl_rsm_logsUpdateManyArgs>(args: SelectSubset<T, wp_rtl_rsm_logsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_rtl_rsm_logs.
     * @param {wp_rtl_rsm_logsUpsertArgs} args - Arguments to update or create a Wp_rtl_rsm_logs.
     * @example
     * // Update or create a Wp_rtl_rsm_logs
     * const wp_rtl_rsm_logs = await prisma.wp_rtl_rsm_logs.upsert({
     *   create: {
     *     // ... data to create a Wp_rtl_rsm_logs
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_rtl_rsm_logs we want to update
     *   }
     * })
     */
    upsert<T extends wp_rtl_rsm_logsUpsertArgs>(args: SelectSubset<T, wp_rtl_rsm_logsUpsertArgs<ExtArgs>>): Prisma__wp_rtl_rsm_logsClient<$Result.GetResult<Prisma.$wp_rtl_rsm_logsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_rtl_rsm_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rtl_rsm_logsCountArgs} args - Arguments to filter Wp_rtl_rsm_logs to count.
     * @example
     * // Count the number of Wp_rtl_rsm_logs
     * const count = await prisma.wp_rtl_rsm_logs.count({
     *   where: {
     *     // ... the filter for the Wp_rtl_rsm_logs we want to count
     *   }
     * })
    **/
    count<T extends wp_rtl_rsm_logsCountArgs>(
      args?: Subset<T, wp_rtl_rsm_logsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_rtl_rsm_logsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_rtl_rsm_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_rtl_rsm_logsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_rtl_rsm_logsAggregateArgs>(args: Subset<T, Wp_rtl_rsm_logsAggregateArgs>): Prisma.PrismaPromise<GetWp_rtl_rsm_logsAggregateType<T>>

    /**
     * Group by Wp_rtl_rsm_logs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_rtl_rsm_logsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_rtl_rsm_logsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_rtl_rsm_logsGroupByArgs['orderBy'] }
        : { orderBy?: wp_rtl_rsm_logsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_rtl_rsm_logsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_rtl_rsm_logsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_rtl_rsm_logs model
   */
  readonly fields: wp_rtl_rsm_logsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_rtl_rsm_logs.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_rtl_rsm_logsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_rtl_rsm_logs model
   */
  interface wp_rtl_rsm_logsFieldRefs {
    readonly id: FieldRef<"wp_rtl_rsm_logs", 'Int'>
    readonly type: FieldRef<"wp_rtl_rsm_logs", 'String'>
    readonly section: FieldRef<"wp_rtl_rsm_logs", 'String'>
    readonly result: FieldRef<"wp_rtl_rsm_logs", 'String'>
    readonly date: FieldRef<"wp_rtl_rsm_logs", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_rtl_rsm_logs findUnique
   */
  export type wp_rtl_rsm_logsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_rtl_rsm_logs to fetch.
     */
    where: wp_rtl_rsm_logsWhereUniqueInput
  }

  /**
   * wp_rtl_rsm_logs findUniqueOrThrow
   */
  export type wp_rtl_rsm_logsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_rtl_rsm_logs to fetch.
     */
    where: wp_rtl_rsm_logsWhereUniqueInput
  }

  /**
   * wp_rtl_rsm_logs findFirst
   */
  export type wp_rtl_rsm_logsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_rtl_rsm_logs to fetch.
     */
    where?: wp_rtl_rsm_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rtl_rsm_logs to fetch.
     */
    orderBy?: wp_rtl_rsm_logsOrderByWithRelationInput | wp_rtl_rsm_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_rtl_rsm_logs.
     */
    cursor?: wp_rtl_rsm_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rtl_rsm_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rtl_rsm_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_rtl_rsm_logs.
     */
    distinct?: Wp_rtl_rsm_logsScalarFieldEnum | Wp_rtl_rsm_logsScalarFieldEnum[]
  }

  /**
   * wp_rtl_rsm_logs findFirstOrThrow
   */
  export type wp_rtl_rsm_logsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_rtl_rsm_logs to fetch.
     */
    where?: wp_rtl_rsm_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rtl_rsm_logs to fetch.
     */
    orderBy?: wp_rtl_rsm_logsOrderByWithRelationInput | wp_rtl_rsm_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_rtl_rsm_logs.
     */
    cursor?: wp_rtl_rsm_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rtl_rsm_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rtl_rsm_logs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_rtl_rsm_logs.
     */
    distinct?: Wp_rtl_rsm_logsScalarFieldEnum | Wp_rtl_rsm_logsScalarFieldEnum[]
  }

  /**
   * wp_rtl_rsm_logs findMany
   */
  export type wp_rtl_rsm_logsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * Filter, which wp_rtl_rsm_logs to fetch.
     */
    where?: wp_rtl_rsm_logsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_rtl_rsm_logs to fetch.
     */
    orderBy?: wp_rtl_rsm_logsOrderByWithRelationInput | wp_rtl_rsm_logsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_rtl_rsm_logs.
     */
    cursor?: wp_rtl_rsm_logsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_rtl_rsm_logs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_rtl_rsm_logs.
     */
    skip?: number
    distinct?: Wp_rtl_rsm_logsScalarFieldEnum | Wp_rtl_rsm_logsScalarFieldEnum[]
  }

  /**
   * wp_rtl_rsm_logs create
   */
  export type wp_rtl_rsm_logsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_rtl_rsm_logs.
     */
    data: XOR<wp_rtl_rsm_logsCreateInput, wp_rtl_rsm_logsUncheckedCreateInput>
  }

  /**
   * wp_rtl_rsm_logs createMany
   */
  export type wp_rtl_rsm_logsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_rtl_rsm_logs.
     */
    data: wp_rtl_rsm_logsCreateManyInput | wp_rtl_rsm_logsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_rtl_rsm_logs update
   */
  export type wp_rtl_rsm_logsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_rtl_rsm_logs.
     */
    data: XOR<wp_rtl_rsm_logsUpdateInput, wp_rtl_rsm_logsUncheckedUpdateInput>
    /**
     * Choose, which wp_rtl_rsm_logs to update.
     */
    where: wp_rtl_rsm_logsWhereUniqueInput
  }

  /**
   * wp_rtl_rsm_logs updateMany
   */
  export type wp_rtl_rsm_logsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_rtl_rsm_logs.
     */
    data: XOR<wp_rtl_rsm_logsUpdateManyMutationInput, wp_rtl_rsm_logsUncheckedUpdateManyInput>
    /**
     * Filter which wp_rtl_rsm_logs to update
     */
    where?: wp_rtl_rsm_logsWhereInput
    /**
     * Limit how many wp_rtl_rsm_logs to update.
     */
    limit?: number
  }

  /**
   * wp_rtl_rsm_logs upsert
   */
  export type wp_rtl_rsm_logsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_rtl_rsm_logs to update in case it exists.
     */
    where: wp_rtl_rsm_logsWhereUniqueInput
    /**
     * In case the wp_rtl_rsm_logs found by the `where` argument doesn't exist, create a new wp_rtl_rsm_logs with this data.
     */
    create: XOR<wp_rtl_rsm_logsCreateInput, wp_rtl_rsm_logsUncheckedCreateInput>
    /**
     * In case the wp_rtl_rsm_logs was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_rtl_rsm_logsUpdateInput, wp_rtl_rsm_logsUncheckedUpdateInput>
  }

  /**
   * wp_rtl_rsm_logs delete
   */
  export type wp_rtl_rsm_logsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
    /**
     * Filter which wp_rtl_rsm_logs to delete.
     */
    where: wp_rtl_rsm_logsWhereUniqueInput
  }

  /**
   * wp_rtl_rsm_logs deleteMany
   */
  export type wp_rtl_rsm_logsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_rtl_rsm_logs to delete
     */
    where?: wp_rtl_rsm_logsWhereInput
    /**
     * Limit how many wp_rtl_rsm_logs to delete.
     */
    limit?: number
  }

  /**
   * wp_rtl_rsm_logs without action
   */
  export type wp_rtl_rsm_logsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_rtl_rsm_logs
     */
    select?: wp_rtl_rsm_logsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_rtl_rsm_logs
     */
    omit?: wp_rtl_rsm_logsOmit<ExtArgs> | null
  }


  /**
   * Model wp_soogname_meta
   */

  export type AggregateWp_soogname_meta = {
    _count: Wp_soogname_metaCountAggregateOutputType | null
    _avg: Wp_soogname_metaAvgAggregateOutputType | null
    _sum: Wp_soogname_metaSumAggregateOutputType | null
    _min: Wp_soogname_metaMinAggregateOutputType | null
    _max: Wp_soogname_metaMaxAggregateOutputType | null
  }

  export type Wp_soogname_metaAvgAggregateOutputType = {
    meta_ID: number | null
    object_ID: number | null
  }

  export type Wp_soogname_metaSumAggregateOutputType = {
    meta_ID: bigint | null
    object_ID: bigint | null
  }

  export type Wp_soogname_metaMinAggregateOutputType = {
    meta_ID: bigint | null
    object_ID: bigint | null
  }

  export type Wp_soogname_metaMaxAggregateOutputType = {
    meta_ID: bigint | null
    object_ID: bigint | null
  }

  export type Wp_soogname_metaCountAggregateOutputType = {
    meta_ID: number
    object_ID: number
    _all: number
  }


  export type Wp_soogname_metaAvgAggregateInputType = {
    meta_ID?: true
    object_ID?: true
  }

  export type Wp_soogname_metaSumAggregateInputType = {
    meta_ID?: true
    object_ID?: true
  }

  export type Wp_soogname_metaMinAggregateInputType = {
    meta_ID?: true
    object_ID?: true
  }

  export type Wp_soogname_metaMaxAggregateInputType = {
    meta_ID?: true
    object_ID?: true
  }

  export type Wp_soogname_metaCountAggregateInputType = {
    meta_ID?: true
    object_ID?: true
    _all?: true
  }

  export type Wp_soogname_metaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_soogname_meta to aggregate.
     */
    where?: wp_soogname_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_soogname_metas to fetch.
     */
    orderBy?: wp_soogname_metaOrderByWithRelationInput | wp_soogname_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_soogname_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_soogname_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_soogname_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_soogname_metas
    **/
    _count?: true | Wp_soogname_metaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_soogname_metaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_soogname_metaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_soogname_metaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_soogname_metaMaxAggregateInputType
  }

  export type GetWp_soogname_metaAggregateType<T extends Wp_soogname_metaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_soogname_meta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_soogname_meta[P]>
      : GetScalarType<T[P], AggregateWp_soogname_meta[P]>
  }




  export type wp_soogname_metaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_soogname_metaWhereInput
    orderBy?: wp_soogname_metaOrderByWithAggregationInput | wp_soogname_metaOrderByWithAggregationInput[]
    by: Wp_soogname_metaScalarFieldEnum[] | Wp_soogname_metaScalarFieldEnum
    having?: wp_soogname_metaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_soogname_metaCountAggregateInputType | true
    _avg?: Wp_soogname_metaAvgAggregateInputType
    _sum?: Wp_soogname_metaSumAggregateInputType
    _min?: Wp_soogname_metaMinAggregateInputType
    _max?: Wp_soogname_metaMaxAggregateInputType
  }

  export type Wp_soogname_metaGroupByOutputType = {
    meta_ID: bigint
    object_ID: bigint
    _count: Wp_soogname_metaCountAggregateOutputType | null
    _avg: Wp_soogname_metaAvgAggregateOutputType | null
    _sum: Wp_soogname_metaSumAggregateOutputType | null
    _min: Wp_soogname_metaMinAggregateOutputType | null
    _max: Wp_soogname_metaMaxAggregateOutputType | null
  }

  type GetWp_soogname_metaGroupByPayload<T extends wp_soogname_metaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_soogname_metaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_soogname_metaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_soogname_metaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_soogname_metaGroupByOutputType[P]>
        }
      >
    >


  export type wp_soogname_metaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    meta_ID?: boolean
    object_ID?: boolean
  }, ExtArgs["result"]["wp_soogname_meta"]>



  export type wp_soogname_metaSelectScalar = {
    meta_ID?: boolean
    object_ID?: boolean
  }

  export type wp_soogname_metaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"meta_ID" | "object_ID", ExtArgs["result"]["wp_soogname_meta"]>

  export type $wp_soogname_metaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_soogname_meta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      meta_ID: bigint
      object_ID: bigint
    }, ExtArgs["result"]["wp_soogname_meta"]>
    composites: {}
  }

  type wp_soogname_metaGetPayload<S extends boolean | null | undefined | wp_soogname_metaDefaultArgs> = $Result.GetResult<Prisma.$wp_soogname_metaPayload, S>

  type wp_soogname_metaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_soogname_metaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_soogname_metaCountAggregateInputType | true
    }

  export interface wp_soogname_metaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_soogname_meta'], meta: { name: 'wp_soogname_meta' } }
    /**
     * Find zero or one Wp_soogname_meta that matches the filter.
     * @param {wp_soogname_metaFindUniqueArgs} args - Arguments to find a Wp_soogname_meta
     * @example
     * // Get one Wp_soogname_meta
     * const wp_soogname_meta = await prisma.wp_soogname_meta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_soogname_metaFindUniqueArgs>(args: SelectSubset<T, wp_soogname_metaFindUniqueArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_soogname_meta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_soogname_metaFindUniqueOrThrowArgs} args - Arguments to find a Wp_soogname_meta
     * @example
     * // Get one Wp_soogname_meta
     * const wp_soogname_meta = await prisma.wp_soogname_meta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_soogname_metaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_soogname_metaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_soogname_meta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_soogname_metaFindFirstArgs} args - Arguments to find a Wp_soogname_meta
     * @example
     * // Get one Wp_soogname_meta
     * const wp_soogname_meta = await prisma.wp_soogname_meta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_soogname_metaFindFirstArgs>(args?: SelectSubset<T, wp_soogname_metaFindFirstArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_soogname_meta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_soogname_metaFindFirstOrThrowArgs} args - Arguments to find a Wp_soogname_meta
     * @example
     * // Get one Wp_soogname_meta
     * const wp_soogname_meta = await prisma.wp_soogname_meta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_soogname_metaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_soogname_metaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_soogname_metas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_soogname_metaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_soogname_metas
     * const wp_soogname_metas = await prisma.wp_soogname_meta.findMany()
     * 
     * // Get first 10 Wp_soogname_metas
     * const wp_soogname_metas = await prisma.wp_soogname_meta.findMany({ take: 10 })
     * 
     * // Only select the `meta_ID`
     * const wp_soogname_metaWithMeta_IDOnly = await prisma.wp_soogname_meta.findMany({ select: { meta_ID: true } })
     * 
     */
    findMany<T extends wp_soogname_metaFindManyArgs>(args?: SelectSubset<T, wp_soogname_metaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_soogname_meta.
     * @param {wp_soogname_metaCreateArgs} args - Arguments to create a Wp_soogname_meta.
     * @example
     * // Create one Wp_soogname_meta
     * const Wp_soogname_meta = await prisma.wp_soogname_meta.create({
     *   data: {
     *     // ... data to create a Wp_soogname_meta
     *   }
     * })
     * 
     */
    create<T extends wp_soogname_metaCreateArgs>(args: SelectSubset<T, wp_soogname_metaCreateArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_soogname_metas.
     * @param {wp_soogname_metaCreateManyArgs} args - Arguments to create many Wp_soogname_metas.
     * @example
     * // Create many Wp_soogname_metas
     * const wp_soogname_meta = await prisma.wp_soogname_meta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_soogname_metaCreateManyArgs>(args?: SelectSubset<T, wp_soogname_metaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_soogname_meta.
     * @param {wp_soogname_metaDeleteArgs} args - Arguments to delete one Wp_soogname_meta.
     * @example
     * // Delete one Wp_soogname_meta
     * const Wp_soogname_meta = await prisma.wp_soogname_meta.delete({
     *   where: {
     *     // ... filter to delete one Wp_soogname_meta
     *   }
     * })
     * 
     */
    delete<T extends wp_soogname_metaDeleteArgs>(args: SelectSubset<T, wp_soogname_metaDeleteArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_soogname_meta.
     * @param {wp_soogname_metaUpdateArgs} args - Arguments to update one Wp_soogname_meta.
     * @example
     * // Update one Wp_soogname_meta
     * const wp_soogname_meta = await prisma.wp_soogname_meta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_soogname_metaUpdateArgs>(args: SelectSubset<T, wp_soogname_metaUpdateArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_soogname_metas.
     * @param {wp_soogname_metaDeleteManyArgs} args - Arguments to filter Wp_soogname_metas to delete.
     * @example
     * // Delete a few Wp_soogname_metas
     * const { count } = await prisma.wp_soogname_meta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_soogname_metaDeleteManyArgs>(args?: SelectSubset<T, wp_soogname_metaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_soogname_metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_soogname_metaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_soogname_metas
     * const wp_soogname_meta = await prisma.wp_soogname_meta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_soogname_metaUpdateManyArgs>(args: SelectSubset<T, wp_soogname_metaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_soogname_meta.
     * @param {wp_soogname_metaUpsertArgs} args - Arguments to update or create a Wp_soogname_meta.
     * @example
     * // Update or create a Wp_soogname_meta
     * const wp_soogname_meta = await prisma.wp_soogname_meta.upsert({
     *   create: {
     *     // ... data to create a Wp_soogname_meta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_soogname_meta we want to update
     *   }
     * })
     */
    upsert<T extends wp_soogname_metaUpsertArgs>(args: SelectSubset<T, wp_soogname_metaUpsertArgs<ExtArgs>>): Prisma__wp_soogname_metaClient<$Result.GetResult<Prisma.$wp_soogname_metaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_soogname_metas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_soogname_metaCountArgs} args - Arguments to filter Wp_soogname_metas to count.
     * @example
     * // Count the number of Wp_soogname_metas
     * const count = await prisma.wp_soogname_meta.count({
     *   where: {
     *     // ... the filter for the Wp_soogname_metas we want to count
     *   }
     * })
    **/
    count<T extends wp_soogname_metaCountArgs>(
      args?: Subset<T, wp_soogname_metaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_soogname_metaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_soogname_meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_soogname_metaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_soogname_metaAggregateArgs>(args: Subset<T, Wp_soogname_metaAggregateArgs>): Prisma.PrismaPromise<GetWp_soogname_metaAggregateType<T>>

    /**
     * Group by Wp_soogname_meta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_soogname_metaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_soogname_metaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_soogname_metaGroupByArgs['orderBy'] }
        : { orderBy?: wp_soogname_metaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_soogname_metaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_soogname_metaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_soogname_meta model
   */
  readonly fields: wp_soogname_metaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_soogname_meta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_soogname_metaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_soogname_meta model
   */
  interface wp_soogname_metaFieldRefs {
    readonly meta_ID: FieldRef<"wp_soogname_meta", 'BigInt'>
    readonly object_ID: FieldRef<"wp_soogname_meta", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_soogname_meta findUnique
   */
  export type wp_soogname_metaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_soogname_meta to fetch.
     */
    where: wp_soogname_metaWhereUniqueInput
  }

  /**
   * wp_soogname_meta findUniqueOrThrow
   */
  export type wp_soogname_metaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_soogname_meta to fetch.
     */
    where: wp_soogname_metaWhereUniqueInput
  }

  /**
   * wp_soogname_meta findFirst
   */
  export type wp_soogname_metaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_soogname_meta to fetch.
     */
    where?: wp_soogname_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_soogname_metas to fetch.
     */
    orderBy?: wp_soogname_metaOrderByWithRelationInput | wp_soogname_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_soogname_metas.
     */
    cursor?: wp_soogname_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_soogname_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_soogname_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_soogname_metas.
     */
    distinct?: Wp_soogname_metaScalarFieldEnum | Wp_soogname_metaScalarFieldEnum[]
  }

  /**
   * wp_soogname_meta findFirstOrThrow
   */
  export type wp_soogname_metaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_soogname_meta to fetch.
     */
    where?: wp_soogname_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_soogname_metas to fetch.
     */
    orderBy?: wp_soogname_metaOrderByWithRelationInput | wp_soogname_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_soogname_metas.
     */
    cursor?: wp_soogname_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_soogname_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_soogname_metas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_soogname_metas.
     */
    distinct?: Wp_soogname_metaScalarFieldEnum | Wp_soogname_metaScalarFieldEnum[]
  }

  /**
   * wp_soogname_meta findMany
   */
  export type wp_soogname_metaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * Filter, which wp_soogname_metas to fetch.
     */
    where?: wp_soogname_metaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_soogname_metas to fetch.
     */
    orderBy?: wp_soogname_metaOrderByWithRelationInput | wp_soogname_metaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_soogname_metas.
     */
    cursor?: wp_soogname_metaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_soogname_metas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_soogname_metas.
     */
    skip?: number
    distinct?: Wp_soogname_metaScalarFieldEnum | Wp_soogname_metaScalarFieldEnum[]
  }

  /**
   * wp_soogname_meta create
   */
  export type wp_soogname_metaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_soogname_meta.
     */
    data: XOR<wp_soogname_metaCreateInput, wp_soogname_metaUncheckedCreateInput>
  }

  /**
   * wp_soogname_meta createMany
   */
  export type wp_soogname_metaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_soogname_metas.
     */
    data: wp_soogname_metaCreateManyInput | wp_soogname_metaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_soogname_meta update
   */
  export type wp_soogname_metaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_soogname_meta.
     */
    data: XOR<wp_soogname_metaUpdateInput, wp_soogname_metaUncheckedUpdateInput>
    /**
     * Choose, which wp_soogname_meta to update.
     */
    where: wp_soogname_metaWhereUniqueInput
  }

  /**
   * wp_soogname_meta updateMany
   */
  export type wp_soogname_metaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_soogname_metas.
     */
    data: XOR<wp_soogname_metaUpdateManyMutationInput, wp_soogname_metaUncheckedUpdateManyInput>
    /**
     * Filter which wp_soogname_metas to update
     */
    where?: wp_soogname_metaWhereInput
    /**
     * Limit how many wp_soogname_metas to update.
     */
    limit?: number
  }

  /**
   * wp_soogname_meta upsert
   */
  export type wp_soogname_metaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_soogname_meta to update in case it exists.
     */
    where: wp_soogname_metaWhereUniqueInput
    /**
     * In case the wp_soogname_meta found by the `where` argument doesn't exist, create a new wp_soogname_meta with this data.
     */
    create: XOR<wp_soogname_metaCreateInput, wp_soogname_metaUncheckedCreateInput>
    /**
     * In case the wp_soogname_meta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_soogname_metaUpdateInput, wp_soogname_metaUncheckedUpdateInput>
  }

  /**
   * wp_soogname_meta delete
   */
  export type wp_soogname_metaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
    /**
     * Filter which wp_soogname_meta to delete.
     */
    where: wp_soogname_metaWhereUniqueInput
  }

  /**
   * wp_soogname_meta deleteMany
   */
  export type wp_soogname_metaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_soogname_metas to delete
     */
    where?: wp_soogname_metaWhereInput
    /**
     * Limit how many wp_soogname_metas to delete.
     */
    limit?: number
  }

  /**
   * wp_soogname_meta without action
   */
  export type wp_soogname_metaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_soogname_meta
     */
    select?: wp_soogname_metaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_soogname_meta
     */
    omit?: wp_soogname_metaOmit<ExtArgs> | null
  }


  /**
   * Model wp_term_relationships
   */

  export type AggregateWp_term_relationships = {
    _count: Wp_term_relationshipsCountAggregateOutputType | null
    _avg: Wp_term_relationshipsAvgAggregateOutputType | null
    _sum: Wp_term_relationshipsSumAggregateOutputType | null
    _min: Wp_term_relationshipsMinAggregateOutputType | null
    _max: Wp_term_relationshipsMaxAggregateOutputType | null
  }

  export type Wp_term_relationshipsAvgAggregateOutputType = {
    object_id: number | null
    term_taxonomy_id: number | null
    term_order: number | null
  }

  export type Wp_term_relationshipsSumAggregateOutputType = {
    object_id: bigint | null
    term_taxonomy_id: bigint | null
    term_order: number | null
  }

  export type Wp_term_relationshipsMinAggregateOutputType = {
    object_id: bigint | null
    term_taxonomy_id: bigint | null
    term_order: number | null
  }

  export type Wp_term_relationshipsMaxAggregateOutputType = {
    object_id: bigint | null
    term_taxonomy_id: bigint | null
    term_order: number | null
  }

  export type Wp_term_relationshipsCountAggregateOutputType = {
    object_id: number
    term_taxonomy_id: number
    term_order: number
    _all: number
  }


  export type Wp_term_relationshipsAvgAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsSumAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsMinAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsMaxAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
  }

  export type Wp_term_relationshipsCountAggregateInputType = {
    object_id?: true
    term_taxonomy_id?: true
    term_order?: true
    _all?: true
  }

  export type Wp_term_relationshipsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_relationships to aggregate.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_term_relationships
    **/
    _count?: true | Wp_term_relationshipsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_term_relationshipsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_term_relationshipsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_term_relationshipsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_term_relationshipsMaxAggregateInputType
  }

  export type GetWp_term_relationshipsAggregateType<T extends Wp_term_relationshipsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_term_relationships]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_term_relationships[P]>
      : GetScalarType<T[P], AggregateWp_term_relationships[P]>
  }




  export type wp_term_relationshipsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_term_relationshipsWhereInput
    orderBy?: wp_term_relationshipsOrderByWithAggregationInput | wp_term_relationshipsOrderByWithAggregationInput[]
    by: Wp_term_relationshipsScalarFieldEnum[] | Wp_term_relationshipsScalarFieldEnum
    having?: wp_term_relationshipsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_term_relationshipsCountAggregateInputType | true
    _avg?: Wp_term_relationshipsAvgAggregateInputType
    _sum?: Wp_term_relationshipsSumAggregateInputType
    _min?: Wp_term_relationshipsMinAggregateInputType
    _max?: Wp_term_relationshipsMaxAggregateInputType
  }

  export type Wp_term_relationshipsGroupByOutputType = {
    object_id: bigint
    term_taxonomy_id: bigint
    term_order: number
    _count: Wp_term_relationshipsCountAggregateOutputType | null
    _avg: Wp_term_relationshipsAvgAggregateOutputType | null
    _sum: Wp_term_relationshipsSumAggregateOutputType | null
    _min: Wp_term_relationshipsMinAggregateOutputType | null
    _max: Wp_term_relationshipsMaxAggregateOutputType | null
  }

  type GetWp_term_relationshipsGroupByPayload<T extends wp_term_relationshipsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_term_relationshipsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_term_relationshipsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_term_relationshipsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_term_relationshipsGroupByOutputType[P]>
        }
      >
    >


  export type wp_term_relationshipsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    object_id?: boolean
    term_taxonomy_id?: boolean
    term_order?: boolean
  }, ExtArgs["result"]["wp_term_relationships"]>



  export type wp_term_relationshipsSelectScalar = {
    object_id?: boolean
    term_taxonomy_id?: boolean
    term_order?: boolean
  }

  export type wp_term_relationshipsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"object_id" | "term_taxonomy_id" | "term_order", ExtArgs["result"]["wp_term_relationships"]>

  export type $wp_term_relationshipsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_term_relationships"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      object_id: bigint
      term_taxonomy_id: bigint
      term_order: number
    }, ExtArgs["result"]["wp_term_relationships"]>
    composites: {}
  }

  type wp_term_relationshipsGetPayload<S extends boolean | null | undefined | wp_term_relationshipsDefaultArgs> = $Result.GetResult<Prisma.$wp_term_relationshipsPayload, S>

  type wp_term_relationshipsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_term_relationshipsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_term_relationshipsCountAggregateInputType | true
    }

  export interface wp_term_relationshipsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_term_relationships'], meta: { name: 'wp_term_relationships' } }
    /**
     * Find zero or one Wp_term_relationships that matches the filter.
     * @param {wp_term_relationshipsFindUniqueArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_term_relationshipsFindUniqueArgs>(args: SelectSubset<T, wp_term_relationshipsFindUniqueArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_term_relationships that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_term_relationshipsFindUniqueOrThrowArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_term_relationshipsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_term_relationshipsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_relationships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsFindFirstArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_term_relationshipsFindFirstArgs>(args?: SelectSubset<T, wp_term_relationshipsFindFirstArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_relationships that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsFindFirstOrThrowArgs} args - Arguments to find a Wp_term_relationships
     * @example
     * // Get one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_term_relationshipsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_term_relationshipsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_term_relationships that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findMany()
     * 
     * // Get first 10 Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.findMany({ take: 10 })
     * 
     * // Only select the `object_id`
     * const wp_term_relationshipsWithObject_idOnly = await prisma.wp_term_relationships.findMany({ select: { object_id: true } })
     * 
     */
    findMany<T extends wp_term_relationshipsFindManyArgs>(args?: SelectSubset<T, wp_term_relationshipsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_term_relationships.
     * @param {wp_term_relationshipsCreateArgs} args - Arguments to create a Wp_term_relationships.
     * @example
     * // Create one Wp_term_relationships
     * const Wp_term_relationships = await prisma.wp_term_relationships.create({
     *   data: {
     *     // ... data to create a Wp_term_relationships
     *   }
     * })
     * 
     */
    create<T extends wp_term_relationshipsCreateArgs>(args: SelectSubset<T, wp_term_relationshipsCreateArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_term_relationships.
     * @param {wp_term_relationshipsCreateManyArgs} args - Arguments to create many Wp_term_relationships.
     * @example
     * // Create many Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_term_relationshipsCreateManyArgs>(args?: SelectSubset<T, wp_term_relationshipsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_term_relationships.
     * @param {wp_term_relationshipsDeleteArgs} args - Arguments to delete one Wp_term_relationships.
     * @example
     * // Delete one Wp_term_relationships
     * const Wp_term_relationships = await prisma.wp_term_relationships.delete({
     *   where: {
     *     // ... filter to delete one Wp_term_relationships
     *   }
     * })
     * 
     */
    delete<T extends wp_term_relationshipsDeleteArgs>(args: SelectSubset<T, wp_term_relationshipsDeleteArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_term_relationships.
     * @param {wp_term_relationshipsUpdateArgs} args - Arguments to update one Wp_term_relationships.
     * @example
     * // Update one Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_term_relationshipsUpdateArgs>(args: SelectSubset<T, wp_term_relationshipsUpdateArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_term_relationships.
     * @param {wp_term_relationshipsDeleteManyArgs} args - Arguments to filter Wp_term_relationships to delete.
     * @example
     * // Delete a few Wp_term_relationships
     * const { count } = await prisma.wp_term_relationships.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_term_relationshipsDeleteManyArgs>(args?: SelectSubset<T, wp_term_relationshipsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_term_relationshipsUpdateManyArgs>(args: SelectSubset<T, wp_term_relationshipsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_term_relationships.
     * @param {wp_term_relationshipsUpsertArgs} args - Arguments to update or create a Wp_term_relationships.
     * @example
     * // Update or create a Wp_term_relationships
     * const wp_term_relationships = await prisma.wp_term_relationships.upsert({
     *   create: {
     *     // ... data to create a Wp_term_relationships
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_term_relationships we want to update
     *   }
     * })
     */
    upsert<T extends wp_term_relationshipsUpsertArgs>(args: SelectSubset<T, wp_term_relationshipsUpsertArgs<ExtArgs>>): Prisma__wp_term_relationshipsClient<$Result.GetResult<Prisma.$wp_term_relationshipsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsCountArgs} args - Arguments to filter Wp_term_relationships to count.
     * @example
     * // Count the number of Wp_term_relationships
     * const count = await prisma.wp_term_relationships.count({
     *   where: {
     *     // ... the filter for the Wp_term_relationships we want to count
     *   }
     * })
    **/
    count<T extends wp_term_relationshipsCountArgs>(
      args?: Subset<T, wp_term_relationshipsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_term_relationshipsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_term_relationshipsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_term_relationshipsAggregateArgs>(args: Subset<T, Wp_term_relationshipsAggregateArgs>): Prisma.PrismaPromise<GetWp_term_relationshipsAggregateType<T>>

    /**
     * Group by Wp_term_relationships.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_relationshipsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_term_relationshipsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_term_relationshipsGroupByArgs['orderBy'] }
        : { orderBy?: wp_term_relationshipsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_term_relationshipsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_term_relationshipsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_term_relationships model
   */
  readonly fields: wp_term_relationshipsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_term_relationships.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_term_relationshipsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_term_relationships model
   */
  interface wp_term_relationshipsFieldRefs {
    readonly object_id: FieldRef<"wp_term_relationships", 'BigInt'>
    readonly term_taxonomy_id: FieldRef<"wp_term_relationships", 'BigInt'>
    readonly term_order: FieldRef<"wp_term_relationships", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * wp_term_relationships findUnique
   */
  export type wp_term_relationshipsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships findUniqueOrThrow
   */
  export type wp_term_relationshipsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships findFirst
   */
  export type wp_term_relationshipsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_relationships.
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_relationships.
     */
    distinct?: Wp_term_relationshipsScalarFieldEnum | Wp_term_relationshipsScalarFieldEnum[]
  }

  /**
   * wp_term_relationships findFirstOrThrow
   */
  export type wp_term_relationshipsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_relationships.
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_relationships.
     */
    distinct?: Wp_term_relationshipsScalarFieldEnum | Wp_term_relationshipsScalarFieldEnum[]
  }

  /**
   * wp_term_relationships findMany
   */
  export type wp_term_relationshipsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_relationships to fetch.
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_relationships to fetch.
     */
    orderBy?: wp_term_relationshipsOrderByWithRelationInput | wp_term_relationshipsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_term_relationships.
     */
    cursor?: wp_term_relationshipsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_relationships from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_relationships.
     */
    skip?: number
    distinct?: Wp_term_relationshipsScalarFieldEnum | Wp_term_relationshipsScalarFieldEnum[]
  }

  /**
   * wp_term_relationships create
   */
  export type wp_term_relationshipsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_term_relationships.
     */
    data?: XOR<wp_term_relationshipsCreateInput, wp_term_relationshipsUncheckedCreateInput>
  }

  /**
   * wp_term_relationships createMany
   */
  export type wp_term_relationshipsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_term_relationships.
     */
    data: wp_term_relationshipsCreateManyInput | wp_term_relationshipsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_term_relationships update
   */
  export type wp_term_relationshipsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_term_relationships.
     */
    data: XOR<wp_term_relationshipsUpdateInput, wp_term_relationshipsUncheckedUpdateInput>
    /**
     * Choose, which wp_term_relationships to update.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships updateMany
   */
  export type wp_term_relationshipsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_term_relationships.
     */
    data: XOR<wp_term_relationshipsUpdateManyMutationInput, wp_term_relationshipsUncheckedUpdateManyInput>
    /**
     * Filter which wp_term_relationships to update
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * Limit how many wp_term_relationships to update.
     */
    limit?: number
  }

  /**
   * wp_term_relationships upsert
   */
  export type wp_term_relationshipsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_term_relationships to update in case it exists.
     */
    where: wp_term_relationshipsWhereUniqueInput
    /**
     * In case the wp_term_relationships found by the `where` argument doesn't exist, create a new wp_term_relationships with this data.
     */
    create: XOR<wp_term_relationshipsCreateInput, wp_term_relationshipsUncheckedCreateInput>
    /**
     * In case the wp_term_relationships was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_term_relationshipsUpdateInput, wp_term_relationshipsUncheckedUpdateInput>
  }

  /**
   * wp_term_relationships delete
   */
  export type wp_term_relationshipsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
    /**
     * Filter which wp_term_relationships to delete.
     */
    where: wp_term_relationshipsWhereUniqueInput
  }

  /**
   * wp_term_relationships deleteMany
   */
  export type wp_term_relationshipsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_relationships to delete
     */
    where?: wp_term_relationshipsWhereInput
    /**
     * Limit how many wp_term_relationships to delete.
     */
    limit?: number
  }

  /**
   * wp_term_relationships without action
   */
  export type wp_term_relationshipsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_relationships
     */
    select?: wp_term_relationshipsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_relationships
     */
    omit?: wp_term_relationshipsOmit<ExtArgs> | null
  }


  /**
   * Model wp_term_taxonomy
   */

  export type AggregateWp_term_taxonomy = {
    _count: Wp_term_taxonomyCountAggregateOutputType | null
    _avg: Wp_term_taxonomyAvgAggregateOutputType | null
    _sum: Wp_term_taxonomySumAggregateOutputType | null
    _min: Wp_term_taxonomyMinAggregateOutputType | null
    _max: Wp_term_taxonomyMaxAggregateOutputType | null
  }

  export type Wp_term_taxonomyAvgAggregateOutputType = {
    term_taxonomy_id: number | null
    term_id: number | null
    parent: number | null
    count: number | null
  }

  export type Wp_term_taxonomySumAggregateOutputType = {
    term_taxonomy_id: bigint | null
    term_id: bigint | null
    parent: bigint | null
    count: bigint | null
  }

  export type Wp_term_taxonomyMinAggregateOutputType = {
    term_taxonomy_id: bigint | null
    term_id: bigint | null
    taxonomy: string | null
    description: string | null
    parent: bigint | null
    count: bigint | null
  }

  export type Wp_term_taxonomyMaxAggregateOutputType = {
    term_taxonomy_id: bigint | null
    term_id: bigint | null
    taxonomy: string | null
    description: string | null
    parent: bigint | null
    count: bigint | null
  }

  export type Wp_term_taxonomyCountAggregateOutputType = {
    term_taxonomy_id: number
    term_id: number
    taxonomy: number
    description: number
    parent: number
    count: number
    _all: number
  }


  export type Wp_term_taxonomyAvgAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomySumAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomyMinAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    taxonomy?: true
    description?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomyMaxAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    taxonomy?: true
    description?: true
    parent?: true
    count?: true
  }

  export type Wp_term_taxonomyCountAggregateInputType = {
    term_taxonomy_id?: true
    term_id?: true
    taxonomy?: true
    description?: true
    parent?: true
    count?: true
    _all?: true
  }

  export type Wp_term_taxonomyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_taxonomy to aggregate.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_term_taxonomies
    **/
    _count?: true | Wp_term_taxonomyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_term_taxonomyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_term_taxonomySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_term_taxonomyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_term_taxonomyMaxAggregateInputType
  }

  export type GetWp_term_taxonomyAggregateType<T extends Wp_term_taxonomyAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_term_taxonomy]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_term_taxonomy[P]>
      : GetScalarType<T[P], AggregateWp_term_taxonomy[P]>
  }




  export type wp_term_taxonomyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_term_taxonomyWhereInput
    orderBy?: wp_term_taxonomyOrderByWithAggregationInput | wp_term_taxonomyOrderByWithAggregationInput[]
    by: Wp_term_taxonomyScalarFieldEnum[] | Wp_term_taxonomyScalarFieldEnum
    having?: wp_term_taxonomyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_term_taxonomyCountAggregateInputType | true
    _avg?: Wp_term_taxonomyAvgAggregateInputType
    _sum?: Wp_term_taxonomySumAggregateInputType
    _min?: Wp_term_taxonomyMinAggregateInputType
    _max?: Wp_term_taxonomyMaxAggregateInputType
  }

  export type Wp_term_taxonomyGroupByOutputType = {
    term_taxonomy_id: bigint
    term_id: bigint
    taxonomy: string
    description: string
    parent: bigint
    count: bigint
    _count: Wp_term_taxonomyCountAggregateOutputType | null
    _avg: Wp_term_taxonomyAvgAggregateOutputType | null
    _sum: Wp_term_taxonomySumAggregateOutputType | null
    _min: Wp_term_taxonomyMinAggregateOutputType | null
    _max: Wp_term_taxonomyMaxAggregateOutputType | null
  }

  type GetWp_term_taxonomyGroupByPayload<T extends wp_term_taxonomyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_term_taxonomyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_term_taxonomyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_term_taxonomyGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_term_taxonomyGroupByOutputType[P]>
        }
      >
    >


  export type wp_term_taxonomySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    term_taxonomy_id?: boolean
    term_id?: boolean
    taxonomy?: boolean
    description?: boolean
    parent?: boolean
    count?: boolean
  }, ExtArgs["result"]["wp_term_taxonomy"]>



  export type wp_term_taxonomySelectScalar = {
    term_taxonomy_id?: boolean
    term_id?: boolean
    taxonomy?: boolean
    description?: boolean
    parent?: boolean
    count?: boolean
  }

  export type wp_term_taxonomyOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"term_taxonomy_id" | "term_id" | "taxonomy" | "description" | "parent" | "count", ExtArgs["result"]["wp_term_taxonomy"]>

  export type $wp_term_taxonomyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_term_taxonomy"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      term_taxonomy_id: bigint
      term_id: bigint
      taxonomy: string
      description: string
      parent: bigint
      count: bigint
    }, ExtArgs["result"]["wp_term_taxonomy"]>
    composites: {}
  }

  type wp_term_taxonomyGetPayload<S extends boolean | null | undefined | wp_term_taxonomyDefaultArgs> = $Result.GetResult<Prisma.$wp_term_taxonomyPayload, S>

  type wp_term_taxonomyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_term_taxonomyFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_term_taxonomyCountAggregateInputType | true
    }

  export interface wp_term_taxonomyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_term_taxonomy'], meta: { name: 'wp_term_taxonomy' } }
    /**
     * Find zero or one Wp_term_taxonomy that matches the filter.
     * @param {wp_term_taxonomyFindUniqueArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_term_taxonomyFindUniqueArgs>(args: SelectSubset<T, wp_term_taxonomyFindUniqueArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_term_taxonomy that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_term_taxonomyFindUniqueOrThrowArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_term_taxonomyFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_term_taxonomyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_taxonomy that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyFindFirstArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_term_taxonomyFindFirstArgs>(args?: SelectSubset<T, wp_term_taxonomyFindFirstArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_term_taxonomy that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyFindFirstOrThrowArgs} args - Arguments to find a Wp_term_taxonomy
     * @example
     * // Get one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_term_taxonomyFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_term_taxonomyFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_term_taxonomies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_term_taxonomies
     * const wp_term_taxonomies = await prisma.wp_term_taxonomy.findMany()
     * 
     * // Get first 10 Wp_term_taxonomies
     * const wp_term_taxonomies = await prisma.wp_term_taxonomy.findMany({ take: 10 })
     * 
     * // Only select the `term_taxonomy_id`
     * const wp_term_taxonomyWithTerm_taxonomy_idOnly = await prisma.wp_term_taxonomy.findMany({ select: { term_taxonomy_id: true } })
     * 
     */
    findMany<T extends wp_term_taxonomyFindManyArgs>(args?: SelectSubset<T, wp_term_taxonomyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_term_taxonomy.
     * @param {wp_term_taxonomyCreateArgs} args - Arguments to create a Wp_term_taxonomy.
     * @example
     * // Create one Wp_term_taxonomy
     * const Wp_term_taxonomy = await prisma.wp_term_taxonomy.create({
     *   data: {
     *     // ... data to create a Wp_term_taxonomy
     *   }
     * })
     * 
     */
    create<T extends wp_term_taxonomyCreateArgs>(args: SelectSubset<T, wp_term_taxonomyCreateArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_term_taxonomies.
     * @param {wp_term_taxonomyCreateManyArgs} args - Arguments to create many Wp_term_taxonomies.
     * @example
     * // Create many Wp_term_taxonomies
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_term_taxonomyCreateManyArgs>(args?: SelectSubset<T, wp_term_taxonomyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_term_taxonomy.
     * @param {wp_term_taxonomyDeleteArgs} args - Arguments to delete one Wp_term_taxonomy.
     * @example
     * // Delete one Wp_term_taxonomy
     * const Wp_term_taxonomy = await prisma.wp_term_taxonomy.delete({
     *   where: {
     *     // ... filter to delete one Wp_term_taxonomy
     *   }
     * })
     * 
     */
    delete<T extends wp_term_taxonomyDeleteArgs>(args: SelectSubset<T, wp_term_taxonomyDeleteArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_term_taxonomy.
     * @param {wp_term_taxonomyUpdateArgs} args - Arguments to update one Wp_term_taxonomy.
     * @example
     * // Update one Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_term_taxonomyUpdateArgs>(args: SelectSubset<T, wp_term_taxonomyUpdateArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_term_taxonomies.
     * @param {wp_term_taxonomyDeleteManyArgs} args - Arguments to filter Wp_term_taxonomies to delete.
     * @example
     * // Delete a few Wp_term_taxonomies
     * const { count } = await prisma.wp_term_taxonomy.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_term_taxonomyDeleteManyArgs>(args?: SelectSubset<T, wp_term_taxonomyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_term_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_term_taxonomies
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_term_taxonomyUpdateManyArgs>(args: SelectSubset<T, wp_term_taxonomyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_term_taxonomy.
     * @param {wp_term_taxonomyUpsertArgs} args - Arguments to update or create a Wp_term_taxonomy.
     * @example
     * // Update or create a Wp_term_taxonomy
     * const wp_term_taxonomy = await prisma.wp_term_taxonomy.upsert({
     *   create: {
     *     // ... data to create a Wp_term_taxonomy
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_term_taxonomy we want to update
     *   }
     * })
     */
    upsert<T extends wp_term_taxonomyUpsertArgs>(args: SelectSubset<T, wp_term_taxonomyUpsertArgs<ExtArgs>>): Prisma__wp_term_taxonomyClient<$Result.GetResult<Prisma.$wp_term_taxonomyPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_term_taxonomies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyCountArgs} args - Arguments to filter Wp_term_taxonomies to count.
     * @example
     * // Count the number of Wp_term_taxonomies
     * const count = await prisma.wp_term_taxonomy.count({
     *   where: {
     *     // ... the filter for the Wp_term_taxonomies we want to count
     *   }
     * })
    **/
    count<T extends wp_term_taxonomyCountArgs>(
      args?: Subset<T, wp_term_taxonomyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_term_taxonomyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_term_taxonomy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_term_taxonomyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_term_taxonomyAggregateArgs>(args: Subset<T, Wp_term_taxonomyAggregateArgs>): Prisma.PrismaPromise<GetWp_term_taxonomyAggregateType<T>>

    /**
     * Group by Wp_term_taxonomy.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_term_taxonomyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_term_taxonomyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_term_taxonomyGroupByArgs['orderBy'] }
        : { orderBy?: wp_term_taxonomyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_term_taxonomyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_term_taxonomyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_term_taxonomy model
   */
  readonly fields: wp_term_taxonomyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_term_taxonomy.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_term_taxonomyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_term_taxonomy model
   */
  interface wp_term_taxonomyFieldRefs {
    readonly term_taxonomy_id: FieldRef<"wp_term_taxonomy", 'BigInt'>
    readonly term_id: FieldRef<"wp_term_taxonomy", 'BigInt'>
    readonly taxonomy: FieldRef<"wp_term_taxonomy", 'String'>
    readonly description: FieldRef<"wp_term_taxonomy", 'String'>
    readonly parent: FieldRef<"wp_term_taxonomy", 'BigInt'>
    readonly count: FieldRef<"wp_term_taxonomy", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_term_taxonomy findUnique
   */
  export type wp_term_taxonomyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy findUniqueOrThrow
   */
  export type wp_term_taxonomyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy findFirst
   */
  export type wp_term_taxonomyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_taxonomies.
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_taxonomies.
     */
    distinct?: Wp_term_taxonomyScalarFieldEnum | Wp_term_taxonomyScalarFieldEnum[]
  }

  /**
   * wp_term_taxonomy findFirstOrThrow
   */
  export type wp_term_taxonomyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomy to fetch.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_term_taxonomies.
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_term_taxonomies.
     */
    distinct?: Wp_term_taxonomyScalarFieldEnum | Wp_term_taxonomyScalarFieldEnum[]
  }

  /**
   * wp_term_taxonomy findMany
   */
  export type wp_term_taxonomyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter, which wp_term_taxonomies to fetch.
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_term_taxonomies to fetch.
     */
    orderBy?: wp_term_taxonomyOrderByWithRelationInput | wp_term_taxonomyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_term_taxonomies.
     */
    cursor?: wp_term_taxonomyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_term_taxonomies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_term_taxonomies.
     */
    skip?: number
    distinct?: Wp_term_taxonomyScalarFieldEnum | Wp_term_taxonomyScalarFieldEnum[]
  }

  /**
   * wp_term_taxonomy create
   */
  export type wp_term_taxonomyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_term_taxonomy.
     */
    data: XOR<wp_term_taxonomyCreateInput, wp_term_taxonomyUncheckedCreateInput>
  }

  /**
   * wp_term_taxonomy createMany
   */
  export type wp_term_taxonomyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_term_taxonomies.
     */
    data: wp_term_taxonomyCreateManyInput | wp_term_taxonomyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_term_taxonomy update
   */
  export type wp_term_taxonomyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_term_taxonomy.
     */
    data: XOR<wp_term_taxonomyUpdateInput, wp_term_taxonomyUncheckedUpdateInput>
    /**
     * Choose, which wp_term_taxonomy to update.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy updateMany
   */
  export type wp_term_taxonomyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_term_taxonomies.
     */
    data: XOR<wp_term_taxonomyUpdateManyMutationInput, wp_term_taxonomyUncheckedUpdateManyInput>
    /**
     * Filter which wp_term_taxonomies to update
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * Limit how many wp_term_taxonomies to update.
     */
    limit?: number
  }

  /**
   * wp_term_taxonomy upsert
   */
  export type wp_term_taxonomyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_term_taxonomy to update in case it exists.
     */
    where: wp_term_taxonomyWhereUniqueInput
    /**
     * In case the wp_term_taxonomy found by the `where` argument doesn't exist, create a new wp_term_taxonomy with this data.
     */
    create: XOR<wp_term_taxonomyCreateInput, wp_term_taxonomyUncheckedCreateInput>
    /**
     * In case the wp_term_taxonomy was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_term_taxonomyUpdateInput, wp_term_taxonomyUncheckedUpdateInput>
  }

  /**
   * wp_term_taxonomy delete
   */
  export type wp_term_taxonomyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
    /**
     * Filter which wp_term_taxonomy to delete.
     */
    where: wp_term_taxonomyWhereUniqueInput
  }

  /**
   * wp_term_taxonomy deleteMany
   */
  export type wp_term_taxonomyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_term_taxonomies to delete
     */
    where?: wp_term_taxonomyWhereInput
    /**
     * Limit how many wp_term_taxonomies to delete.
     */
    limit?: number
  }

  /**
   * wp_term_taxonomy without action
   */
  export type wp_term_taxonomyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_term_taxonomy
     */
    select?: wp_term_taxonomySelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_term_taxonomy
     */
    omit?: wp_term_taxonomyOmit<ExtArgs> | null
  }


  /**
   * Model wp_termmeta
   */

  export type AggregateWp_termmeta = {
    _count: Wp_termmetaCountAggregateOutputType | null
    _avg: Wp_termmetaAvgAggregateOutputType | null
    _sum: Wp_termmetaSumAggregateOutputType | null
    _min: Wp_termmetaMinAggregateOutputType | null
    _max: Wp_termmetaMaxAggregateOutputType | null
  }

  export type Wp_termmetaAvgAggregateOutputType = {
    meta_id: number | null
    term_id: number | null
  }

  export type Wp_termmetaSumAggregateOutputType = {
    meta_id: bigint | null
    term_id: bigint | null
  }

  export type Wp_termmetaMinAggregateOutputType = {
    meta_id: bigint | null
    term_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_termmetaMaxAggregateOutputType = {
    meta_id: bigint | null
    term_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_termmetaCountAggregateOutputType = {
    meta_id: number
    term_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_termmetaAvgAggregateInputType = {
    meta_id?: true
    term_id?: true
  }

  export type Wp_termmetaSumAggregateInputType = {
    meta_id?: true
    term_id?: true
  }

  export type Wp_termmetaMinAggregateInputType = {
    meta_id?: true
    term_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_termmetaMaxAggregateInputType = {
    meta_id?: true
    term_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_termmetaCountAggregateInputType = {
    meta_id?: true
    term_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_termmetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_termmeta to aggregate.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_termmetas
    **/
    _count?: true | Wp_termmetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_termmetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_termmetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_termmetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_termmetaMaxAggregateInputType
  }

  export type GetWp_termmetaAggregateType<T extends Wp_termmetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_termmeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_termmeta[P]>
      : GetScalarType<T[P], AggregateWp_termmeta[P]>
  }




  export type wp_termmetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_termmetaWhereInput
    orderBy?: wp_termmetaOrderByWithAggregationInput | wp_termmetaOrderByWithAggregationInput[]
    by: Wp_termmetaScalarFieldEnum[] | Wp_termmetaScalarFieldEnum
    having?: wp_termmetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_termmetaCountAggregateInputType | true
    _avg?: Wp_termmetaAvgAggregateInputType
    _sum?: Wp_termmetaSumAggregateInputType
    _min?: Wp_termmetaMinAggregateInputType
    _max?: Wp_termmetaMaxAggregateInputType
  }

  export type Wp_termmetaGroupByOutputType = {
    meta_id: bigint
    term_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_termmetaCountAggregateOutputType | null
    _avg: Wp_termmetaAvgAggregateOutputType | null
    _sum: Wp_termmetaSumAggregateOutputType | null
    _min: Wp_termmetaMinAggregateOutputType | null
    _max: Wp_termmetaMaxAggregateOutputType | null
  }

  type GetWp_termmetaGroupByPayload<T extends wp_termmetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_termmetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_termmetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_termmetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_termmetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_termmetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    meta_id?: boolean
    term_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_termmeta"]>



  export type wp_termmetaSelectScalar = {
    meta_id?: boolean
    term_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_termmetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"meta_id" | "term_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_termmeta"]>

  export type $wp_termmetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_termmeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      meta_id: bigint
      term_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_termmeta"]>
    composites: {}
  }

  type wp_termmetaGetPayload<S extends boolean | null | undefined | wp_termmetaDefaultArgs> = $Result.GetResult<Prisma.$wp_termmetaPayload, S>

  type wp_termmetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_termmetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_termmetaCountAggregateInputType | true
    }

  export interface wp_termmetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_termmeta'], meta: { name: 'wp_termmeta' } }
    /**
     * Find zero or one Wp_termmeta that matches the filter.
     * @param {wp_termmetaFindUniqueArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_termmetaFindUniqueArgs>(args: SelectSubset<T, wp_termmetaFindUniqueArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_termmeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_termmetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_termmetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_termmetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_termmeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaFindFirstArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_termmetaFindFirstArgs>(args?: SelectSubset<T, wp_termmetaFindFirstArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_termmeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaFindFirstOrThrowArgs} args - Arguments to find a Wp_termmeta
     * @example
     * // Get one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_termmetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_termmetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_termmetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_termmetas
     * const wp_termmetas = await prisma.wp_termmeta.findMany()
     * 
     * // Get first 10 Wp_termmetas
     * const wp_termmetas = await prisma.wp_termmeta.findMany({ take: 10 })
     * 
     * // Only select the `meta_id`
     * const wp_termmetaWithMeta_idOnly = await prisma.wp_termmeta.findMany({ select: { meta_id: true } })
     * 
     */
    findMany<T extends wp_termmetaFindManyArgs>(args?: SelectSubset<T, wp_termmetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_termmeta.
     * @param {wp_termmetaCreateArgs} args - Arguments to create a Wp_termmeta.
     * @example
     * // Create one Wp_termmeta
     * const Wp_termmeta = await prisma.wp_termmeta.create({
     *   data: {
     *     // ... data to create a Wp_termmeta
     *   }
     * })
     * 
     */
    create<T extends wp_termmetaCreateArgs>(args: SelectSubset<T, wp_termmetaCreateArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_termmetas.
     * @param {wp_termmetaCreateManyArgs} args - Arguments to create many Wp_termmetas.
     * @example
     * // Create many Wp_termmetas
     * const wp_termmeta = await prisma.wp_termmeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_termmetaCreateManyArgs>(args?: SelectSubset<T, wp_termmetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_termmeta.
     * @param {wp_termmetaDeleteArgs} args - Arguments to delete one Wp_termmeta.
     * @example
     * // Delete one Wp_termmeta
     * const Wp_termmeta = await prisma.wp_termmeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_termmeta
     *   }
     * })
     * 
     */
    delete<T extends wp_termmetaDeleteArgs>(args: SelectSubset<T, wp_termmetaDeleteArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_termmeta.
     * @param {wp_termmetaUpdateArgs} args - Arguments to update one Wp_termmeta.
     * @example
     * // Update one Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_termmetaUpdateArgs>(args: SelectSubset<T, wp_termmetaUpdateArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_termmetas.
     * @param {wp_termmetaDeleteManyArgs} args - Arguments to filter Wp_termmetas to delete.
     * @example
     * // Delete a few Wp_termmetas
     * const { count } = await prisma.wp_termmeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_termmetaDeleteManyArgs>(args?: SelectSubset<T, wp_termmetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_termmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_termmetas
     * const wp_termmeta = await prisma.wp_termmeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_termmetaUpdateManyArgs>(args: SelectSubset<T, wp_termmetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_termmeta.
     * @param {wp_termmetaUpsertArgs} args - Arguments to update or create a Wp_termmeta.
     * @example
     * // Update or create a Wp_termmeta
     * const wp_termmeta = await prisma.wp_termmeta.upsert({
     *   create: {
     *     // ... data to create a Wp_termmeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_termmeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_termmetaUpsertArgs>(args: SelectSubset<T, wp_termmetaUpsertArgs<ExtArgs>>): Prisma__wp_termmetaClient<$Result.GetResult<Prisma.$wp_termmetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_termmetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaCountArgs} args - Arguments to filter Wp_termmetas to count.
     * @example
     * // Count the number of Wp_termmetas
     * const count = await prisma.wp_termmeta.count({
     *   where: {
     *     // ... the filter for the Wp_termmetas we want to count
     *   }
     * })
    **/
    count<T extends wp_termmetaCountArgs>(
      args?: Subset<T, wp_termmetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_termmetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_termmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_termmetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_termmetaAggregateArgs>(args: Subset<T, Wp_termmetaAggregateArgs>): Prisma.PrismaPromise<GetWp_termmetaAggregateType<T>>

    /**
     * Group by Wp_termmeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termmetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_termmetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_termmetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_termmetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_termmetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_termmetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_termmeta model
   */
  readonly fields: wp_termmetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_termmeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_termmetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_termmeta model
   */
  interface wp_termmetaFieldRefs {
    readonly meta_id: FieldRef<"wp_termmeta", 'BigInt'>
    readonly term_id: FieldRef<"wp_termmeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_termmeta", 'String'>
    readonly meta_value: FieldRef<"wp_termmeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_termmeta findUnique
   */
  export type wp_termmetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta findUniqueOrThrow
   */
  export type wp_termmetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta findFirst
   */
  export type wp_termmetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_termmetas.
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_termmetas.
     */
    distinct?: Wp_termmetaScalarFieldEnum | Wp_termmetaScalarFieldEnum[]
  }

  /**
   * wp_termmeta findFirstOrThrow
   */
  export type wp_termmetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmeta to fetch.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_termmetas.
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_termmetas.
     */
    distinct?: Wp_termmetaScalarFieldEnum | Wp_termmetaScalarFieldEnum[]
  }

  /**
   * wp_termmeta findMany
   */
  export type wp_termmetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_termmetas to fetch.
     */
    where?: wp_termmetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_termmetas to fetch.
     */
    orderBy?: wp_termmetaOrderByWithRelationInput | wp_termmetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_termmetas.
     */
    cursor?: wp_termmetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_termmetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_termmetas.
     */
    skip?: number
    distinct?: Wp_termmetaScalarFieldEnum | Wp_termmetaScalarFieldEnum[]
  }

  /**
   * wp_termmeta create
   */
  export type wp_termmetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_termmeta.
     */
    data?: XOR<wp_termmetaCreateInput, wp_termmetaUncheckedCreateInput>
  }

  /**
   * wp_termmeta createMany
   */
  export type wp_termmetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_termmetas.
     */
    data: wp_termmetaCreateManyInput | wp_termmetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_termmeta update
   */
  export type wp_termmetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_termmeta.
     */
    data: XOR<wp_termmetaUpdateInput, wp_termmetaUncheckedUpdateInput>
    /**
     * Choose, which wp_termmeta to update.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta updateMany
   */
  export type wp_termmetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_termmetas.
     */
    data: XOR<wp_termmetaUpdateManyMutationInput, wp_termmetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_termmetas to update
     */
    where?: wp_termmetaWhereInput
    /**
     * Limit how many wp_termmetas to update.
     */
    limit?: number
  }

  /**
   * wp_termmeta upsert
   */
  export type wp_termmetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_termmeta to update in case it exists.
     */
    where: wp_termmetaWhereUniqueInput
    /**
     * In case the wp_termmeta found by the `where` argument doesn't exist, create a new wp_termmeta with this data.
     */
    create: XOR<wp_termmetaCreateInput, wp_termmetaUncheckedCreateInput>
    /**
     * In case the wp_termmeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_termmetaUpdateInput, wp_termmetaUncheckedUpdateInput>
  }

  /**
   * wp_termmeta delete
   */
  export type wp_termmetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
    /**
     * Filter which wp_termmeta to delete.
     */
    where: wp_termmetaWhereUniqueInput
  }

  /**
   * wp_termmeta deleteMany
   */
  export type wp_termmetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_termmetas to delete
     */
    where?: wp_termmetaWhereInput
    /**
     * Limit how many wp_termmetas to delete.
     */
    limit?: number
  }

  /**
   * wp_termmeta without action
   */
  export type wp_termmetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_termmeta
     */
    select?: wp_termmetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_termmeta
     */
    omit?: wp_termmetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_terms
   */

  export type AggregateWp_terms = {
    _count: Wp_termsCountAggregateOutputType | null
    _avg: Wp_termsAvgAggregateOutputType | null
    _sum: Wp_termsSumAggregateOutputType | null
    _min: Wp_termsMinAggregateOutputType | null
    _max: Wp_termsMaxAggregateOutputType | null
  }

  export type Wp_termsAvgAggregateOutputType = {
    term_id: number | null
    term_group: number | null
  }

  export type Wp_termsSumAggregateOutputType = {
    term_id: bigint | null
    term_group: bigint | null
  }

  export type Wp_termsMinAggregateOutputType = {
    term_id: bigint | null
    name: string | null
    slug: string | null
    term_group: bigint | null
  }

  export type Wp_termsMaxAggregateOutputType = {
    term_id: bigint | null
    name: string | null
    slug: string | null
    term_group: bigint | null
  }

  export type Wp_termsCountAggregateOutputType = {
    term_id: number
    name: number
    slug: number
    term_group: number
    _all: number
  }


  export type Wp_termsAvgAggregateInputType = {
    term_id?: true
    term_group?: true
  }

  export type Wp_termsSumAggregateInputType = {
    term_id?: true
    term_group?: true
  }

  export type Wp_termsMinAggregateInputType = {
    term_id?: true
    name?: true
    slug?: true
    term_group?: true
  }

  export type Wp_termsMaxAggregateInputType = {
    term_id?: true
    name?: true
    slug?: true
    term_group?: true
  }

  export type Wp_termsCountAggregateInputType = {
    term_id?: true
    name?: true
    slug?: true
    term_group?: true
    _all?: true
  }

  export type Wp_termsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_terms to aggregate.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_terms
    **/
    _count?: true | Wp_termsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_termsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_termsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_termsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_termsMaxAggregateInputType
  }

  export type GetWp_termsAggregateType<T extends Wp_termsAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_terms]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_terms[P]>
      : GetScalarType<T[P], AggregateWp_terms[P]>
  }




  export type wp_termsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_termsWhereInput
    orderBy?: wp_termsOrderByWithAggregationInput | wp_termsOrderByWithAggregationInput[]
    by: Wp_termsScalarFieldEnum[] | Wp_termsScalarFieldEnum
    having?: wp_termsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_termsCountAggregateInputType | true
    _avg?: Wp_termsAvgAggregateInputType
    _sum?: Wp_termsSumAggregateInputType
    _min?: Wp_termsMinAggregateInputType
    _max?: Wp_termsMaxAggregateInputType
  }

  export type Wp_termsGroupByOutputType = {
    term_id: bigint
    name: string
    slug: string
    term_group: bigint
    _count: Wp_termsCountAggregateOutputType | null
    _avg: Wp_termsAvgAggregateOutputType | null
    _sum: Wp_termsSumAggregateOutputType | null
    _min: Wp_termsMinAggregateOutputType | null
    _max: Wp_termsMaxAggregateOutputType | null
  }

  type GetWp_termsGroupByPayload<T extends wp_termsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_termsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_termsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_termsGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_termsGroupByOutputType[P]>
        }
      >
    >


  export type wp_termsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    term_id?: boolean
    name?: boolean
    slug?: boolean
    term_group?: boolean
  }, ExtArgs["result"]["wp_terms"]>



  export type wp_termsSelectScalar = {
    term_id?: boolean
    name?: boolean
    slug?: boolean
    term_group?: boolean
  }

  export type wp_termsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"term_id" | "name" | "slug" | "term_group", ExtArgs["result"]["wp_terms"]>

  export type $wp_termsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_terms"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      term_id: bigint
      name: string
      slug: string
      term_group: bigint
    }, ExtArgs["result"]["wp_terms"]>
    composites: {}
  }

  type wp_termsGetPayload<S extends boolean | null | undefined | wp_termsDefaultArgs> = $Result.GetResult<Prisma.$wp_termsPayload, S>

  type wp_termsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_termsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_termsCountAggregateInputType | true
    }

  export interface wp_termsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_terms'], meta: { name: 'wp_terms' } }
    /**
     * Find zero or one Wp_terms that matches the filter.
     * @param {wp_termsFindUniqueArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_termsFindUniqueArgs>(args: SelectSubset<T, wp_termsFindUniqueArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_terms that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_termsFindUniqueOrThrowArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_termsFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_termsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_terms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsFindFirstArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_termsFindFirstArgs>(args?: SelectSubset<T, wp_termsFindFirstArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_terms that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsFindFirstOrThrowArgs} args - Arguments to find a Wp_terms
     * @example
     * // Get one Wp_terms
     * const wp_terms = await prisma.wp_terms.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_termsFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_termsFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_terms that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_terms
     * const wp_terms = await prisma.wp_terms.findMany()
     * 
     * // Get first 10 Wp_terms
     * const wp_terms = await prisma.wp_terms.findMany({ take: 10 })
     * 
     * // Only select the `term_id`
     * const wp_termsWithTerm_idOnly = await prisma.wp_terms.findMany({ select: { term_id: true } })
     * 
     */
    findMany<T extends wp_termsFindManyArgs>(args?: SelectSubset<T, wp_termsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_terms.
     * @param {wp_termsCreateArgs} args - Arguments to create a Wp_terms.
     * @example
     * // Create one Wp_terms
     * const Wp_terms = await prisma.wp_terms.create({
     *   data: {
     *     // ... data to create a Wp_terms
     *   }
     * })
     * 
     */
    create<T extends wp_termsCreateArgs>(args: SelectSubset<T, wp_termsCreateArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_terms.
     * @param {wp_termsCreateManyArgs} args - Arguments to create many Wp_terms.
     * @example
     * // Create many Wp_terms
     * const wp_terms = await prisma.wp_terms.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_termsCreateManyArgs>(args?: SelectSubset<T, wp_termsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_terms.
     * @param {wp_termsDeleteArgs} args - Arguments to delete one Wp_terms.
     * @example
     * // Delete one Wp_terms
     * const Wp_terms = await prisma.wp_terms.delete({
     *   where: {
     *     // ... filter to delete one Wp_terms
     *   }
     * })
     * 
     */
    delete<T extends wp_termsDeleteArgs>(args: SelectSubset<T, wp_termsDeleteArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_terms.
     * @param {wp_termsUpdateArgs} args - Arguments to update one Wp_terms.
     * @example
     * // Update one Wp_terms
     * const wp_terms = await prisma.wp_terms.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_termsUpdateArgs>(args: SelectSubset<T, wp_termsUpdateArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_terms.
     * @param {wp_termsDeleteManyArgs} args - Arguments to filter Wp_terms to delete.
     * @example
     * // Delete a few Wp_terms
     * const { count } = await prisma.wp_terms.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_termsDeleteManyArgs>(args?: SelectSubset<T, wp_termsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_terms
     * const wp_terms = await prisma.wp_terms.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_termsUpdateManyArgs>(args: SelectSubset<T, wp_termsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_terms.
     * @param {wp_termsUpsertArgs} args - Arguments to update or create a Wp_terms.
     * @example
     * // Update or create a Wp_terms
     * const wp_terms = await prisma.wp_terms.upsert({
     *   create: {
     *     // ... data to create a Wp_terms
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_terms we want to update
     *   }
     * })
     */
    upsert<T extends wp_termsUpsertArgs>(args: SelectSubset<T, wp_termsUpsertArgs<ExtArgs>>): Prisma__wp_termsClient<$Result.GetResult<Prisma.$wp_termsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsCountArgs} args - Arguments to filter Wp_terms to count.
     * @example
     * // Count the number of Wp_terms
     * const count = await prisma.wp_terms.count({
     *   where: {
     *     // ... the filter for the Wp_terms we want to count
     *   }
     * })
    **/
    count<T extends wp_termsCountArgs>(
      args?: Subset<T, wp_termsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_termsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_termsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_termsAggregateArgs>(args: Subset<T, Wp_termsAggregateArgs>): Prisma.PrismaPromise<GetWp_termsAggregateType<T>>

    /**
     * Group by Wp_terms.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_termsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_termsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_termsGroupByArgs['orderBy'] }
        : { orderBy?: wp_termsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_termsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_termsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_terms model
   */
  readonly fields: wp_termsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_terms.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_termsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_terms model
   */
  interface wp_termsFieldRefs {
    readonly term_id: FieldRef<"wp_terms", 'BigInt'>
    readonly name: FieldRef<"wp_terms", 'String'>
    readonly slug: FieldRef<"wp_terms", 'String'>
    readonly term_group: FieldRef<"wp_terms", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * wp_terms findUnique
   */
  export type wp_termsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms findUniqueOrThrow
   */
  export type wp_termsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms findFirst
   */
  export type wp_termsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_terms.
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_terms.
     */
    distinct?: Wp_termsScalarFieldEnum | Wp_termsScalarFieldEnum[]
  }

  /**
   * wp_terms findFirstOrThrow
   */
  export type wp_termsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_terms.
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_terms.
     */
    distinct?: Wp_termsScalarFieldEnum | Wp_termsScalarFieldEnum[]
  }

  /**
   * wp_terms findMany
   */
  export type wp_termsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter, which wp_terms to fetch.
     */
    where?: wp_termsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_terms to fetch.
     */
    orderBy?: wp_termsOrderByWithRelationInput | wp_termsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_terms.
     */
    cursor?: wp_termsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_terms from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_terms.
     */
    skip?: number
    distinct?: Wp_termsScalarFieldEnum | Wp_termsScalarFieldEnum[]
  }

  /**
   * wp_terms create
   */
  export type wp_termsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_terms.
     */
    data?: XOR<wp_termsCreateInput, wp_termsUncheckedCreateInput>
  }

  /**
   * wp_terms createMany
   */
  export type wp_termsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_terms.
     */
    data: wp_termsCreateManyInput | wp_termsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_terms update
   */
  export type wp_termsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_terms.
     */
    data: XOR<wp_termsUpdateInput, wp_termsUncheckedUpdateInput>
    /**
     * Choose, which wp_terms to update.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms updateMany
   */
  export type wp_termsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_terms.
     */
    data: XOR<wp_termsUpdateManyMutationInput, wp_termsUncheckedUpdateManyInput>
    /**
     * Filter which wp_terms to update
     */
    where?: wp_termsWhereInput
    /**
     * Limit how many wp_terms to update.
     */
    limit?: number
  }

  /**
   * wp_terms upsert
   */
  export type wp_termsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_terms to update in case it exists.
     */
    where: wp_termsWhereUniqueInput
    /**
     * In case the wp_terms found by the `where` argument doesn't exist, create a new wp_terms with this data.
     */
    create: XOR<wp_termsCreateInput, wp_termsUncheckedCreateInput>
    /**
     * In case the wp_terms was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_termsUpdateInput, wp_termsUncheckedUpdateInput>
  }

  /**
   * wp_terms delete
   */
  export type wp_termsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
    /**
     * Filter which wp_terms to delete.
     */
    where: wp_termsWhereUniqueInput
  }

  /**
   * wp_terms deleteMany
   */
  export type wp_termsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_terms to delete
     */
    where?: wp_termsWhereInput
    /**
     * Limit how many wp_terms to delete.
     */
    limit?: number
  }

  /**
   * wp_terms without action
   */
  export type wp_termsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_terms
     */
    select?: wp_termsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_terms
     */
    omit?: wp_termsOmit<ExtArgs> | null
  }


  /**
   * Model wp_usermeta
   */

  export type AggregateWp_usermeta = {
    _count: Wp_usermetaCountAggregateOutputType | null
    _avg: Wp_usermetaAvgAggregateOutputType | null
    _sum: Wp_usermetaSumAggregateOutputType | null
    _min: Wp_usermetaMinAggregateOutputType | null
    _max: Wp_usermetaMaxAggregateOutputType | null
  }

  export type Wp_usermetaAvgAggregateOutputType = {
    umeta_id: number | null
    user_id: number | null
  }

  export type Wp_usermetaSumAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
  }

  export type Wp_usermetaMinAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_usermetaMaxAggregateOutputType = {
    umeta_id: bigint | null
    user_id: bigint | null
    meta_key: string | null
    meta_value: string | null
  }

  export type Wp_usermetaCountAggregateOutputType = {
    umeta_id: number
    user_id: number
    meta_key: number
    meta_value: number
    _all: number
  }


  export type Wp_usermetaAvgAggregateInputType = {
    umeta_id?: true
    user_id?: true
  }

  export type Wp_usermetaSumAggregateInputType = {
    umeta_id?: true
    user_id?: true
  }

  export type Wp_usermetaMinAggregateInputType = {
    umeta_id?: true
    user_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_usermetaMaxAggregateInputType = {
    umeta_id?: true
    user_id?: true
    meta_key?: true
    meta_value?: true
  }

  export type Wp_usermetaCountAggregateInputType = {
    umeta_id?: true
    user_id?: true
    meta_key?: true
    meta_value?: true
    _all?: true
  }

  export type Wp_usermetaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_usermeta to aggregate.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_usermetas
    **/
    _count?: true | Wp_usermetaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_usermetaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_usermetaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_usermetaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_usermetaMaxAggregateInputType
  }

  export type GetWp_usermetaAggregateType<T extends Wp_usermetaAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_usermeta]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_usermeta[P]>
      : GetScalarType<T[P], AggregateWp_usermeta[P]>
  }




  export type wp_usermetaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_usermetaWhereInput
    orderBy?: wp_usermetaOrderByWithAggregationInput | wp_usermetaOrderByWithAggregationInput[]
    by: Wp_usermetaScalarFieldEnum[] | Wp_usermetaScalarFieldEnum
    having?: wp_usermetaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_usermetaCountAggregateInputType | true
    _avg?: Wp_usermetaAvgAggregateInputType
    _sum?: Wp_usermetaSumAggregateInputType
    _min?: Wp_usermetaMinAggregateInputType
    _max?: Wp_usermetaMaxAggregateInputType
  }

  export type Wp_usermetaGroupByOutputType = {
    umeta_id: bigint
    user_id: bigint
    meta_key: string | null
    meta_value: string | null
    _count: Wp_usermetaCountAggregateOutputType | null
    _avg: Wp_usermetaAvgAggregateOutputType | null
    _sum: Wp_usermetaSumAggregateOutputType | null
    _min: Wp_usermetaMinAggregateOutputType | null
    _max: Wp_usermetaMaxAggregateOutputType | null
  }

  type GetWp_usermetaGroupByPayload<T extends wp_usermetaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_usermetaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_usermetaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_usermetaGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_usermetaGroupByOutputType[P]>
        }
      >
    >


  export type wp_usermetaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    umeta_id?: boolean
    user_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }, ExtArgs["result"]["wp_usermeta"]>



  export type wp_usermetaSelectScalar = {
    umeta_id?: boolean
    user_id?: boolean
    meta_key?: boolean
    meta_value?: boolean
  }

  export type wp_usermetaOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"umeta_id" | "user_id" | "meta_key" | "meta_value", ExtArgs["result"]["wp_usermeta"]>

  export type $wp_usermetaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_usermeta"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      umeta_id: bigint
      user_id: bigint
      meta_key: string | null
      meta_value: string | null
    }, ExtArgs["result"]["wp_usermeta"]>
    composites: {}
  }

  type wp_usermetaGetPayload<S extends boolean | null | undefined | wp_usermetaDefaultArgs> = $Result.GetResult<Prisma.$wp_usermetaPayload, S>

  type wp_usermetaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_usermetaFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_usermetaCountAggregateInputType | true
    }

  export interface wp_usermetaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_usermeta'], meta: { name: 'wp_usermeta' } }
    /**
     * Find zero or one Wp_usermeta that matches the filter.
     * @param {wp_usermetaFindUniqueArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_usermetaFindUniqueArgs>(args: SelectSubset<T, wp_usermetaFindUniqueArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_usermeta that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_usermetaFindUniqueOrThrowArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_usermetaFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_usermetaFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_usermeta that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaFindFirstArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_usermetaFindFirstArgs>(args?: SelectSubset<T, wp_usermetaFindFirstArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_usermeta that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaFindFirstOrThrowArgs} args - Arguments to find a Wp_usermeta
     * @example
     * // Get one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_usermetaFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_usermetaFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_usermetas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_usermetas
     * const wp_usermetas = await prisma.wp_usermeta.findMany()
     * 
     * // Get first 10 Wp_usermetas
     * const wp_usermetas = await prisma.wp_usermeta.findMany({ take: 10 })
     * 
     * // Only select the `umeta_id`
     * const wp_usermetaWithUmeta_idOnly = await prisma.wp_usermeta.findMany({ select: { umeta_id: true } })
     * 
     */
    findMany<T extends wp_usermetaFindManyArgs>(args?: SelectSubset<T, wp_usermetaFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_usermeta.
     * @param {wp_usermetaCreateArgs} args - Arguments to create a Wp_usermeta.
     * @example
     * // Create one Wp_usermeta
     * const Wp_usermeta = await prisma.wp_usermeta.create({
     *   data: {
     *     // ... data to create a Wp_usermeta
     *   }
     * })
     * 
     */
    create<T extends wp_usermetaCreateArgs>(args: SelectSubset<T, wp_usermetaCreateArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_usermetas.
     * @param {wp_usermetaCreateManyArgs} args - Arguments to create many Wp_usermetas.
     * @example
     * // Create many Wp_usermetas
     * const wp_usermeta = await prisma.wp_usermeta.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_usermetaCreateManyArgs>(args?: SelectSubset<T, wp_usermetaCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_usermeta.
     * @param {wp_usermetaDeleteArgs} args - Arguments to delete one Wp_usermeta.
     * @example
     * // Delete one Wp_usermeta
     * const Wp_usermeta = await prisma.wp_usermeta.delete({
     *   where: {
     *     // ... filter to delete one Wp_usermeta
     *   }
     * })
     * 
     */
    delete<T extends wp_usermetaDeleteArgs>(args: SelectSubset<T, wp_usermetaDeleteArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_usermeta.
     * @param {wp_usermetaUpdateArgs} args - Arguments to update one Wp_usermeta.
     * @example
     * // Update one Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_usermetaUpdateArgs>(args: SelectSubset<T, wp_usermetaUpdateArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_usermetas.
     * @param {wp_usermetaDeleteManyArgs} args - Arguments to filter Wp_usermetas to delete.
     * @example
     * // Delete a few Wp_usermetas
     * const { count } = await prisma.wp_usermeta.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_usermetaDeleteManyArgs>(args?: SelectSubset<T, wp_usermetaDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_usermetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_usermetas
     * const wp_usermeta = await prisma.wp_usermeta.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_usermetaUpdateManyArgs>(args: SelectSubset<T, wp_usermetaUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_usermeta.
     * @param {wp_usermetaUpsertArgs} args - Arguments to update or create a Wp_usermeta.
     * @example
     * // Update or create a Wp_usermeta
     * const wp_usermeta = await prisma.wp_usermeta.upsert({
     *   create: {
     *     // ... data to create a Wp_usermeta
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_usermeta we want to update
     *   }
     * })
     */
    upsert<T extends wp_usermetaUpsertArgs>(args: SelectSubset<T, wp_usermetaUpsertArgs<ExtArgs>>): Prisma__wp_usermetaClient<$Result.GetResult<Prisma.$wp_usermetaPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_usermetas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaCountArgs} args - Arguments to filter Wp_usermetas to count.
     * @example
     * // Count the number of Wp_usermetas
     * const count = await prisma.wp_usermeta.count({
     *   where: {
     *     // ... the filter for the Wp_usermetas we want to count
     *   }
     * })
    **/
    count<T extends wp_usermetaCountArgs>(
      args?: Subset<T, wp_usermetaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_usermetaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_usermeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_usermetaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_usermetaAggregateArgs>(args: Subset<T, Wp_usermetaAggregateArgs>): Prisma.PrismaPromise<GetWp_usermetaAggregateType<T>>

    /**
     * Group by Wp_usermeta.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usermetaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_usermetaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_usermetaGroupByArgs['orderBy'] }
        : { orderBy?: wp_usermetaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_usermetaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_usermetaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_usermeta model
   */
  readonly fields: wp_usermetaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_usermeta.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_usermetaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_usermeta model
   */
  interface wp_usermetaFieldRefs {
    readonly umeta_id: FieldRef<"wp_usermeta", 'BigInt'>
    readonly user_id: FieldRef<"wp_usermeta", 'BigInt'>
    readonly meta_key: FieldRef<"wp_usermeta", 'String'>
    readonly meta_value: FieldRef<"wp_usermeta", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_usermeta findUnique
   */
  export type wp_usermetaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta findUniqueOrThrow
   */
  export type wp_usermetaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta findFirst
   */
  export type wp_usermetaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_usermetas.
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_usermetas.
     */
    distinct?: Wp_usermetaScalarFieldEnum | Wp_usermetaScalarFieldEnum[]
  }

  /**
   * wp_usermeta findFirstOrThrow
   */
  export type wp_usermetaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermeta to fetch.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_usermetas.
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_usermetas.
     */
    distinct?: Wp_usermetaScalarFieldEnum | Wp_usermetaScalarFieldEnum[]
  }

  /**
   * wp_usermeta findMany
   */
  export type wp_usermetaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter, which wp_usermetas to fetch.
     */
    where?: wp_usermetaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_usermetas to fetch.
     */
    orderBy?: wp_usermetaOrderByWithRelationInput | wp_usermetaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_usermetas.
     */
    cursor?: wp_usermetaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_usermetas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_usermetas.
     */
    skip?: number
    distinct?: Wp_usermetaScalarFieldEnum | Wp_usermetaScalarFieldEnum[]
  }

  /**
   * wp_usermeta create
   */
  export type wp_usermetaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_usermeta.
     */
    data?: XOR<wp_usermetaCreateInput, wp_usermetaUncheckedCreateInput>
  }

  /**
   * wp_usermeta createMany
   */
  export type wp_usermetaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_usermetas.
     */
    data: wp_usermetaCreateManyInput | wp_usermetaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_usermeta update
   */
  export type wp_usermetaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_usermeta.
     */
    data: XOR<wp_usermetaUpdateInput, wp_usermetaUncheckedUpdateInput>
    /**
     * Choose, which wp_usermeta to update.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta updateMany
   */
  export type wp_usermetaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_usermetas.
     */
    data: XOR<wp_usermetaUpdateManyMutationInput, wp_usermetaUncheckedUpdateManyInput>
    /**
     * Filter which wp_usermetas to update
     */
    where?: wp_usermetaWhereInput
    /**
     * Limit how many wp_usermetas to update.
     */
    limit?: number
  }

  /**
   * wp_usermeta upsert
   */
  export type wp_usermetaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_usermeta to update in case it exists.
     */
    where: wp_usermetaWhereUniqueInput
    /**
     * In case the wp_usermeta found by the `where` argument doesn't exist, create a new wp_usermeta with this data.
     */
    create: XOR<wp_usermetaCreateInput, wp_usermetaUncheckedCreateInput>
    /**
     * In case the wp_usermeta was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_usermetaUpdateInput, wp_usermetaUncheckedUpdateInput>
  }

  /**
   * wp_usermeta delete
   */
  export type wp_usermetaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
    /**
     * Filter which wp_usermeta to delete.
     */
    where: wp_usermetaWhereUniqueInput
  }

  /**
   * wp_usermeta deleteMany
   */
  export type wp_usermetaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_usermetas to delete
     */
    where?: wp_usermetaWhereInput
    /**
     * Limit how many wp_usermetas to delete.
     */
    limit?: number
  }

  /**
   * wp_usermeta without action
   */
  export type wp_usermetaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_usermeta
     */
    select?: wp_usermetaSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_usermeta
     */
    omit?: wp_usermetaOmit<ExtArgs> | null
  }


  /**
   * Model wp_users
   */

  export type AggregateWp_users = {
    _count: Wp_usersCountAggregateOutputType | null
    _avg: Wp_usersAvgAggregateOutputType | null
    _sum: Wp_usersSumAggregateOutputType | null
    _min: Wp_usersMinAggregateOutputType | null
    _max: Wp_usersMaxAggregateOutputType | null
  }

  export type Wp_usersAvgAggregateOutputType = {
    ID: number | null
    user_status: number | null
  }

  export type Wp_usersSumAggregateOutputType = {
    ID: bigint | null
    user_status: number | null
  }

  export type Wp_usersMinAggregateOutputType = {
    ID: bigint | null
    user_login: string | null
    user_pass: string | null
    user_nicename: string | null
    user_email: string | null
    user_url: string | null
    user_registered: Date | null
    user_activation_key: string | null
    user_status: number | null
    display_name: string | null
  }

  export type Wp_usersMaxAggregateOutputType = {
    ID: bigint | null
    user_login: string | null
    user_pass: string | null
    user_nicename: string | null
    user_email: string | null
    user_url: string | null
    user_registered: Date | null
    user_activation_key: string | null
    user_status: number | null
    display_name: string | null
  }

  export type Wp_usersCountAggregateOutputType = {
    ID: number
    user_login: number
    user_pass: number
    user_nicename: number
    user_email: number
    user_url: number
    user_registered: number
    user_activation_key: number
    user_status: number
    display_name: number
    _all: number
  }


  export type Wp_usersAvgAggregateInputType = {
    ID?: true
    user_status?: true
  }

  export type Wp_usersSumAggregateInputType = {
    ID?: true
    user_status?: true
  }

  export type Wp_usersMinAggregateInputType = {
    ID?: true
    user_login?: true
    user_pass?: true
    user_nicename?: true
    user_email?: true
    user_url?: true
    user_registered?: true
    user_activation_key?: true
    user_status?: true
    display_name?: true
  }

  export type Wp_usersMaxAggregateInputType = {
    ID?: true
    user_login?: true
    user_pass?: true
    user_nicename?: true
    user_email?: true
    user_url?: true
    user_registered?: true
    user_activation_key?: true
    user_status?: true
    display_name?: true
  }

  export type Wp_usersCountAggregateInputType = {
    ID?: true
    user_login?: true
    user_pass?: true
    user_nicename?: true
    user_email?: true
    user_url?: true
    user_registered?: true
    user_activation_key?: true
    user_status?: true
    display_name?: true
    _all?: true
  }

  export type Wp_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_users to aggregate.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_users
    **/
    _count?: true | Wp_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_usersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_usersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_usersMaxAggregateInputType
  }

  export type GetWp_usersAggregateType<T extends Wp_usersAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_users[P]>
      : GetScalarType<T[P], AggregateWp_users[P]>
  }




  export type wp_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_usersWhereInput
    orderBy?: wp_usersOrderByWithAggregationInput | wp_usersOrderByWithAggregationInput[]
    by: Wp_usersScalarFieldEnum[] | Wp_usersScalarFieldEnum
    having?: wp_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_usersCountAggregateInputType | true
    _avg?: Wp_usersAvgAggregateInputType
    _sum?: Wp_usersSumAggregateInputType
    _min?: Wp_usersMinAggregateInputType
    _max?: Wp_usersMaxAggregateInputType
  }

  export type Wp_usersGroupByOutputType = {
    ID: bigint
    user_login: string
    user_pass: string
    user_nicename: string
    user_email: string
    user_url: string
    user_registered: Date
    user_activation_key: string
    user_status: number
    display_name: string
    _count: Wp_usersCountAggregateOutputType | null
    _avg: Wp_usersAvgAggregateOutputType | null
    _sum: Wp_usersSumAggregateOutputType | null
    _min: Wp_usersMinAggregateOutputType | null
    _max: Wp_usersMaxAggregateOutputType | null
  }

  type GetWp_usersGroupByPayload<T extends wp_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_usersGroupByOutputType[P]>
        }
      >
    >


  export type wp_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    ID?: boolean
    user_login?: boolean
    user_pass?: boolean
    user_nicename?: boolean
    user_email?: boolean
    user_url?: boolean
    user_registered?: boolean
    user_activation_key?: boolean
    user_status?: boolean
    display_name?: boolean
  }, ExtArgs["result"]["wp_users"]>



  export type wp_usersSelectScalar = {
    ID?: boolean
    user_login?: boolean
    user_pass?: boolean
    user_nicename?: boolean
    user_email?: boolean
    user_url?: boolean
    user_registered?: boolean
    user_activation_key?: boolean
    user_status?: boolean
    display_name?: boolean
  }

  export type wp_usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"ID" | "user_login" | "user_pass" | "user_nicename" | "user_email" | "user_url" | "user_registered" | "user_activation_key" | "user_status" | "display_name", ExtArgs["result"]["wp_users"]>

  export type $wp_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_users"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      ID: bigint
      user_login: string
      user_pass: string
      user_nicename: string
      user_email: string
      user_url: string
      user_registered: Date
      user_activation_key: string
      user_status: number
      display_name: string
    }, ExtArgs["result"]["wp_users"]>
    composites: {}
  }

  type wp_usersGetPayload<S extends boolean | null | undefined | wp_usersDefaultArgs> = $Result.GetResult<Prisma.$wp_usersPayload, S>

  type wp_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_usersCountAggregateInputType | true
    }

  export interface wp_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_users'], meta: { name: 'wp_users' } }
    /**
     * Find zero or one Wp_users that matches the filter.
     * @param {wp_usersFindUniqueArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_usersFindUniqueArgs>(args: SelectSubset<T, wp_usersFindUniqueArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_usersFindUniqueOrThrowArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_usersFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersFindFirstArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_usersFindFirstArgs>(args?: SelectSubset<T, wp_usersFindFirstArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersFindFirstOrThrowArgs} args - Arguments to find a Wp_users
     * @example
     * // Get one Wp_users
     * const wp_users = await prisma.wp_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_usersFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_users
     * const wp_users = await prisma.wp_users.findMany()
     * 
     * // Get first 10 Wp_users
     * const wp_users = await prisma.wp_users.findMany({ take: 10 })
     * 
     * // Only select the `ID`
     * const wp_usersWithIDOnly = await prisma.wp_users.findMany({ select: { ID: true } })
     * 
     */
    findMany<T extends wp_usersFindManyArgs>(args?: SelectSubset<T, wp_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_users.
     * @param {wp_usersCreateArgs} args - Arguments to create a Wp_users.
     * @example
     * // Create one Wp_users
     * const Wp_users = await prisma.wp_users.create({
     *   data: {
     *     // ... data to create a Wp_users
     *   }
     * })
     * 
     */
    create<T extends wp_usersCreateArgs>(args: SelectSubset<T, wp_usersCreateArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_users.
     * @param {wp_usersCreateManyArgs} args - Arguments to create many Wp_users.
     * @example
     * // Create many Wp_users
     * const wp_users = await prisma.wp_users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_usersCreateManyArgs>(args?: SelectSubset<T, wp_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_users.
     * @param {wp_usersDeleteArgs} args - Arguments to delete one Wp_users.
     * @example
     * // Delete one Wp_users
     * const Wp_users = await prisma.wp_users.delete({
     *   where: {
     *     // ... filter to delete one Wp_users
     *   }
     * })
     * 
     */
    delete<T extends wp_usersDeleteArgs>(args: SelectSubset<T, wp_usersDeleteArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_users.
     * @param {wp_usersUpdateArgs} args - Arguments to update one Wp_users.
     * @example
     * // Update one Wp_users
     * const wp_users = await prisma.wp_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_usersUpdateArgs>(args: SelectSubset<T, wp_usersUpdateArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_users.
     * @param {wp_usersDeleteManyArgs} args - Arguments to filter Wp_users to delete.
     * @example
     * // Delete a few Wp_users
     * const { count } = await prisma.wp_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_usersDeleteManyArgs>(args?: SelectSubset<T, wp_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_users
     * const wp_users = await prisma.wp_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_usersUpdateManyArgs>(args: SelectSubset<T, wp_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_users.
     * @param {wp_usersUpsertArgs} args - Arguments to update or create a Wp_users.
     * @example
     * // Update or create a Wp_users
     * const wp_users = await prisma.wp_users.upsert({
     *   create: {
     *     // ... data to create a Wp_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_users we want to update
     *   }
     * })
     */
    upsert<T extends wp_usersUpsertArgs>(args: SelectSubset<T, wp_usersUpsertArgs<ExtArgs>>): Prisma__wp_usersClient<$Result.GetResult<Prisma.$wp_usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersCountArgs} args - Arguments to filter Wp_users to count.
     * @example
     * // Count the number of Wp_users
     * const count = await prisma.wp_users.count({
     *   where: {
     *     // ... the filter for the Wp_users we want to count
     *   }
     * })
    **/
    count<T extends wp_usersCountArgs>(
      args?: Subset<T, wp_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_usersAggregateArgs>(args: Subset<T, Wp_usersAggregateArgs>): Prisma.PrismaPromise<GetWp_usersAggregateType<T>>

    /**
     * Group by Wp_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_usersGroupByArgs['orderBy'] }
        : { orderBy?: wp_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_users model
   */
  readonly fields: wp_usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_users model
   */
  interface wp_usersFieldRefs {
    readonly ID: FieldRef<"wp_users", 'BigInt'>
    readonly user_login: FieldRef<"wp_users", 'String'>
    readonly user_pass: FieldRef<"wp_users", 'String'>
    readonly user_nicename: FieldRef<"wp_users", 'String'>
    readonly user_email: FieldRef<"wp_users", 'String'>
    readonly user_url: FieldRef<"wp_users", 'String'>
    readonly user_registered: FieldRef<"wp_users", 'DateTime'>
    readonly user_activation_key: FieldRef<"wp_users", 'String'>
    readonly user_status: FieldRef<"wp_users", 'Int'>
    readonly display_name: FieldRef<"wp_users", 'String'>
  }
    

  // Custom InputTypes
  /**
   * wp_users findUnique
   */
  export type wp_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users findUniqueOrThrow
   */
  export type wp_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users findFirst
   */
  export type wp_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_users.
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_users.
     */
    distinct?: Wp_usersScalarFieldEnum | Wp_usersScalarFieldEnum[]
  }

  /**
   * wp_users findFirstOrThrow
   */
  export type wp_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_users.
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_users.
     */
    distinct?: Wp_usersScalarFieldEnum | Wp_usersScalarFieldEnum[]
  }

  /**
   * wp_users findMany
   */
  export type wp_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter, which wp_users to fetch.
     */
    where?: wp_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_users to fetch.
     */
    orderBy?: wp_usersOrderByWithRelationInput | wp_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_users.
     */
    cursor?: wp_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_users.
     */
    skip?: number
    distinct?: Wp_usersScalarFieldEnum | Wp_usersScalarFieldEnum[]
  }

  /**
   * wp_users create
   */
  export type wp_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_users.
     */
    data?: XOR<wp_usersCreateInput, wp_usersUncheckedCreateInput>
  }

  /**
   * wp_users createMany
   */
  export type wp_usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_users.
     */
    data: wp_usersCreateManyInput | wp_usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_users update
   */
  export type wp_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_users.
     */
    data: XOR<wp_usersUpdateInput, wp_usersUncheckedUpdateInput>
    /**
     * Choose, which wp_users to update.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users updateMany
   */
  export type wp_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_users.
     */
    data: XOR<wp_usersUpdateManyMutationInput, wp_usersUncheckedUpdateManyInput>
    /**
     * Filter which wp_users to update
     */
    where?: wp_usersWhereInput
    /**
     * Limit how many wp_users to update.
     */
    limit?: number
  }

  /**
   * wp_users upsert
   */
  export type wp_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_users to update in case it exists.
     */
    where: wp_usersWhereUniqueInput
    /**
     * In case the wp_users found by the `where` argument doesn't exist, create a new wp_users with this data.
     */
    create: XOR<wp_usersCreateInput, wp_usersUncheckedCreateInput>
    /**
     * In case the wp_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_usersUpdateInput, wp_usersUncheckedUpdateInput>
  }

  /**
   * wp_users delete
   */
  export type wp_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
    /**
     * Filter which wp_users to delete.
     */
    where: wp_usersWhereUniqueInput
  }

  /**
   * wp_users deleteMany
   */
  export type wp_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_users to delete
     */
    where?: wp_usersWhereInput
    /**
     * Limit how many wp_users to delete.
     */
    limit?: number
  }

  /**
   * wp_users without action
   */
  export type wp_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_users
     */
    select?: wp_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_users
     */
    omit?: wp_usersOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpr_above_the_fold
   */

  export type AggregateWp_wpr_above_the_fold = {
    _count: Wp_wpr_above_the_foldCountAggregateOutputType | null
    _avg: Wp_wpr_above_the_foldAvgAggregateOutputType | null
    _sum: Wp_wpr_above_the_foldSumAggregateOutputType | null
    _min: Wp_wpr_above_the_foldMinAggregateOutputType | null
    _max: Wp_wpr_above_the_foldMaxAggregateOutputType | null
  }

  export type Wp_wpr_above_the_foldAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_wpr_above_the_foldSumAggregateOutputType = {
    id: bigint | null
  }

  export type Wp_wpr_above_the_foldMinAggregateOutputType = {
    id: bigint | null
    url: string | null
    is_mobile: boolean | null
    lcp: string | null
    viewport: string | null
    error_message: string | null
    status: string | null
    modified: Date | null
    last_accessed: Date | null
  }

  export type Wp_wpr_above_the_foldMaxAggregateOutputType = {
    id: bigint | null
    url: string | null
    is_mobile: boolean | null
    lcp: string | null
    viewport: string | null
    error_message: string | null
    status: string | null
    modified: Date | null
    last_accessed: Date | null
  }

  export type Wp_wpr_above_the_foldCountAggregateOutputType = {
    id: number
    url: number
    is_mobile: number
    lcp: number
    viewport: number
    error_message: number
    status: number
    modified: number
    last_accessed: number
    _all: number
  }


  export type Wp_wpr_above_the_foldAvgAggregateInputType = {
    id?: true
  }

  export type Wp_wpr_above_the_foldSumAggregateInputType = {
    id?: true
  }

  export type Wp_wpr_above_the_foldMinAggregateInputType = {
    id?: true
    url?: true
    is_mobile?: true
    lcp?: true
    viewport?: true
    error_message?: true
    status?: true
    modified?: true
    last_accessed?: true
  }

  export type Wp_wpr_above_the_foldMaxAggregateInputType = {
    id?: true
    url?: true
    is_mobile?: true
    lcp?: true
    viewport?: true
    error_message?: true
    status?: true
    modified?: true
    last_accessed?: true
  }

  export type Wp_wpr_above_the_foldCountAggregateInputType = {
    id?: true
    url?: true
    is_mobile?: true
    lcp?: true
    viewport?: true
    error_message?: true
    status?: true
    modified?: true
    last_accessed?: true
    _all?: true
  }

  export type Wp_wpr_above_the_foldAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpr_above_the_fold to aggregate.
     */
    where?: wp_wpr_above_the_foldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_above_the_folds to fetch.
     */
    orderBy?: wp_wpr_above_the_foldOrderByWithRelationInput | wp_wpr_above_the_foldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpr_above_the_foldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_above_the_folds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_above_the_folds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpr_above_the_folds
    **/
    _count?: true | Wp_wpr_above_the_foldCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpr_above_the_foldAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpr_above_the_foldSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpr_above_the_foldMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpr_above_the_foldMaxAggregateInputType
  }

  export type GetWp_wpr_above_the_foldAggregateType<T extends Wp_wpr_above_the_foldAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpr_above_the_fold]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpr_above_the_fold[P]>
      : GetScalarType<T[P], AggregateWp_wpr_above_the_fold[P]>
  }




  export type wp_wpr_above_the_foldGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpr_above_the_foldWhereInput
    orderBy?: wp_wpr_above_the_foldOrderByWithAggregationInput | wp_wpr_above_the_foldOrderByWithAggregationInput[]
    by: Wp_wpr_above_the_foldScalarFieldEnum[] | Wp_wpr_above_the_foldScalarFieldEnum
    having?: wp_wpr_above_the_foldScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpr_above_the_foldCountAggregateInputType | true
    _avg?: Wp_wpr_above_the_foldAvgAggregateInputType
    _sum?: Wp_wpr_above_the_foldSumAggregateInputType
    _min?: Wp_wpr_above_the_foldMinAggregateInputType
    _max?: Wp_wpr_above_the_foldMaxAggregateInputType
  }

  export type Wp_wpr_above_the_foldGroupByOutputType = {
    id: bigint
    url: string
    is_mobile: boolean
    lcp: string | null
    viewport: string | null
    error_message: string | null
    status: string
    modified: Date
    last_accessed: Date
    _count: Wp_wpr_above_the_foldCountAggregateOutputType | null
    _avg: Wp_wpr_above_the_foldAvgAggregateOutputType | null
    _sum: Wp_wpr_above_the_foldSumAggregateOutputType | null
    _min: Wp_wpr_above_the_foldMinAggregateOutputType | null
    _max: Wp_wpr_above_the_foldMaxAggregateOutputType | null
  }

  type GetWp_wpr_above_the_foldGroupByPayload<T extends wp_wpr_above_the_foldGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpr_above_the_foldGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpr_above_the_foldGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpr_above_the_foldGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpr_above_the_foldGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpr_above_the_foldSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    is_mobile?: boolean
    lcp?: boolean
    viewport?: boolean
    error_message?: boolean
    status?: boolean
    modified?: boolean
    last_accessed?: boolean
  }, ExtArgs["result"]["wp_wpr_above_the_fold"]>



  export type wp_wpr_above_the_foldSelectScalar = {
    id?: boolean
    url?: boolean
    is_mobile?: boolean
    lcp?: boolean
    viewport?: boolean
    error_message?: boolean
    status?: boolean
    modified?: boolean
    last_accessed?: boolean
  }

  export type wp_wpr_above_the_foldOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "is_mobile" | "lcp" | "viewport" | "error_message" | "status" | "modified" | "last_accessed", ExtArgs["result"]["wp_wpr_above_the_fold"]>

  export type $wp_wpr_above_the_foldPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpr_above_the_fold"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      url: string
      is_mobile: boolean
      lcp: string | null
      viewport: string | null
      error_message: string | null
      status: string
      modified: Date
      last_accessed: Date
    }, ExtArgs["result"]["wp_wpr_above_the_fold"]>
    composites: {}
  }

  type wp_wpr_above_the_foldGetPayload<S extends boolean | null | undefined | wp_wpr_above_the_foldDefaultArgs> = $Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload, S>

  type wp_wpr_above_the_foldCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpr_above_the_foldFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpr_above_the_foldCountAggregateInputType | true
    }

  export interface wp_wpr_above_the_foldDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpr_above_the_fold'], meta: { name: 'wp_wpr_above_the_fold' } }
    /**
     * Find zero or one Wp_wpr_above_the_fold that matches the filter.
     * @param {wp_wpr_above_the_foldFindUniqueArgs} args - Arguments to find a Wp_wpr_above_the_fold
     * @example
     * // Get one Wp_wpr_above_the_fold
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpr_above_the_foldFindUniqueArgs>(args: SelectSubset<T, wp_wpr_above_the_foldFindUniqueArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpr_above_the_fold that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpr_above_the_foldFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpr_above_the_fold
     * @example
     * // Get one Wp_wpr_above_the_fold
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpr_above_the_foldFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpr_above_the_foldFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpr_above_the_fold that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_above_the_foldFindFirstArgs} args - Arguments to find a Wp_wpr_above_the_fold
     * @example
     * // Get one Wp_wpr_above_the_fold
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpr_above_the_foldFindFirstArgs>(args?: SelectSubset<T, wp_wpr_above_the_foldFindFirstArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpr_above_the_fold that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_above_the_foldFindFirstOrThrowArgs} args - Arguments to find a Wp_wpr_above_the_fold
     * @example
     * // Get one Wp_wpr_above_the_fold
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpr_above_the_foldFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpr_above_the_foldFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpr_above_the_folds that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_above_the_foldFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpr_above_the_folds
     * const wp_wpr_above_the_folds = await prisma.wp_wpr_above_the_fold.findMany()
     * 
     * // Get first 10 Wp_wpr_above_the_folds
     * const wp_wpr_above_the_folds = await prisma.wp_wpr_above_the_fold.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpr_above_the_foldWithIdOnly = await prisma.wp_wpr_above_the_fold.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpr_above_the_foldFindManyArgs>(args?: SelectSubset<T, wp_wpr_above_the_foldFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpr_above_the_fold.
     * @param {wp_wpr_above_the_foldCreateArgs} args - Arguments to create a Wp_wpr_above_the_fold.
     * @example
     * // Create one Wp_wpr_above_the_fold
     * const Wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.create({
     *   data: {
     *     // ... data to create a Wp_wpr_above_the_fold
     *   }
     * })
     * 
     */
    create<T extends wp_wpr_above_the_foldCreateArgs>(args: SelectSubset<T, wp_wpr_above_the_foldCreateArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpr_above_the_folds.
     * @param {wp_wpr_above_the_foldCreateManyArgs} args - Arguments to create many Wp_wpr_above_the_folds.
     * @example
     * // Create many Wp_wpr_above_the_folds
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpr_above_the_foldCreateManyArgs>(args?: SelectSubset<T, wp_wpr_above_the_foldCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpr_above_the_fold.
     * @param {wp_wpr_above_the_foldDeleteArgs} args - Arguments to delete one Wp_wpr_above_the_fold.
     * @example
     * // Delete one Wp_wpr_above_the_fold
     * const Wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpr_above_the_fold
     *   }
     * })
     * 
     */
    delete<T extends wp_wpr_above_the_foldDeleteArgs>(args: SelectSubset<T, wp_wpr_above_the_foldDeleteArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpr_above_the_fold.
     * @param {wp_wpr_above_the_foldUpdateArgs} args - Arguments to update one Wp_wpr_above_the_fold.
     * @example
     * // Update one Wp_wpr_above_the_fold
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpr_above_the_foldUpdateArgs>(args: SelectSubset<T, wp_wpr_above_the_foldUpdateArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpr_above_the_folds.
     * @param {wp_wpr_above_the_foldDeleteManyArgs} args - Arguments to filter Wp_wpr_above_the_folds to delete.
     * @example
     * // Delete a few Wp_wpr_above_the_folds
     * const { count } = await prisma.wp_wpr_above_the_fold.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpr_above_the_foldDeleteManyArgs>(args?: SelectSubset<T, wp_wpr_above_the_foldDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpr_above_the_folds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_above_the_foldUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpr_above_the_folds
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpr_above_the_foldUpdateManyArgs>(args: SelectSubset<T, wp_wpr_above_the_foldUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpr_above_the_fold.
     * @param {wp_wpr_above_the_foldUpsertArgs} args - Arguments to update or create a Wp_wpr_above_the_fold.
     * @example
     * // Update or create a Wp_wpr_above_the_fold
     * const wp_wpr_above_the_fold = await prisma.wp_wpr_above_the_fold.upsert({
     *   create: {
     *     // ... data to create a Wp_wpr_above_the_fold
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpr_above_the_fold we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpr_above_the_foldUpsertArgs>(args: SelectSubset<T, wp_wpr_above_the_foldUpsertArgs<ExtArgs>>): Prisma__wp_wpr_above_the_foldClient<$Result.GetResult<Prisma.$wp_wpr_above_the_foldPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpr_above_the_folds.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_above_the_foldCountArgs} args - Arguments to filter Wp_wpr_above_the_folds to count.
     * @example
     * // Count the number of Wp_wpr_above_the_folds
     * const count = await prisma.wp_wpr_above_the_fold.count({
     *   where: {
     *     // ... the filter for the Wp_wpr_above_the_folds we want to count
     *   }
     * })
    **/
    count<T extends wp_wpr_above_the_foldCountArgs>(
      args?: Subset<T, wp_wpr_above_the_foldCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpr_above_the_foldCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpr_above_the_fold.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpr_above_the_foldAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpr_above_the_foldAggregateArgs>(args: Subset<T, Wp_wpr_above_the_foldAggregateArgs>): Prisma.PrismaPromise<GetWp_wpr_above_the_foldAggregateType<T>>

    /**
     * Group by Wp_wpr_above_the_fold.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_above_the_foldGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpr_above_the_foldGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpr_above_the_foldGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpr_above_the_foldGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpr_above_the_foldGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpr_above_the_foldGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpr_above_the_fold model
   */
  readonly fields: wp_wpr_above_the_foldFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpr_above_the_fold.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpr_above_the_foldClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpr_above_the_fold model
   */
  interface wp_wpr_above_the_foldFieldRefs {
    readonly id: FieldRef<"wp_wpr_above_the_fold", 'BigInt'>
    readonly url: FieldRef<"wp_wpr_above_the_fold", 'String'>
    readonly is_mobile: FieldRef<"wp_wpr_above_the_fold", 'Boolean'>
    readonly lcp: FieldRef<"wp_wpr_above_the_fold", 'String'>
    readonly viewport: FieldRef<"wp_wpr_above_the_fold", 'String'>
    readonly error_message: FieldRef<"wp_wpr_above_the_fold", 'String'>
    readonly status: FieldRef<"wp_wpr_above_the_fold", 'String'>
    readonly modified: FieldRef<"wp_wpr_above_the_fold", 'DateTime'>
    readonly last_accessed: FieldRef<"wp_wpr_above_the_fold", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpr_above_the_fold findUnique
   */
  export type wp_wpr_above_the_foldFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_above_the_fold to fetch.
     */
    where: wp_wpr_above_the_foldWhereUniqueInput
  }

  /**
   * wp_wpr_above_the_fold findUniqueOrThrow
   */
  export type wp_wpr_above_the_foldFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_above_the_fold to fetch.
     */
    where: wp_wpr_above_the_foldWhereUniqueInput
  }

  /**
   * wp_wpr_above_the_fold findFirst
   */
  export type wp_wpr_above_the_foldFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_above_the_fold to fetch.
     */
    where?: wp_wpr_above_the_foldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_above_the_folds to fetch.
     */
    orderBy?: wp_wpr_above_the_foldOrderByWithRelationInput | wp_wpr_above_the_foldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpr_above_the_folds.
     */
    cursor?: wp_wpr_above_the_foldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_above_the_folds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_above_the_folds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpr_above_the_folds.
     */
    distinct?: Wp_wpr_above_the_foldScalarFieldEnum | Wp_wpr_above_the_foldScalarFieldEnum[]
  }

  /**
   * wp_wpr_above_the_fold findFirstOrThrow
   */
  export type wp_wpr_above_the_foldFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_above_the_fold to fetch.
     */
    where?: wp_wpr_above_the_foldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_above_the_folds to fetch.
     */
    orderBy?: wp_wpr_above_the_foldOrderByWithRelationInput | wp_wpr_above_the_foldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpr_above_the_folds.
     */
    cursor?: wp_wpr_above_the_foldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_above_the_folds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_above_the_folds.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpr_above_the_folds.
     */
    distinct?: Wp_wpr_above_the_foldScalarFieldEnum | Wp_wpr_above_the_foldScalarFieldEnum[]
  }

  /**
   * wp_wpr_above_the_fold findMany
   */
  export type wp_wpr_above_the_foldFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_above_the_folds to fetch.
     */
    where?: wp_wpr_above_the_foldWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_above_the_folds to fetch.
     */
    orderBy?: wp_wpr_above_the_foldOrderByWithRelationInput | wp_wpr_above_the_foldOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpr_above_the_folds.
     */
    cursor?: wp_wpr_above_the_foldWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_above_the_folds from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_above_the_folds.
     */
    skip?: number
    distinct?: Wp_wpr_above_the_foldScalarFieldEnum | Wp_wpr_above_the_foldScalarFieldEnum[]
  }

  /**
   * wp_wpr_above_the_fold create
   */
  export type wp_wpr_above_the_foldCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpr_above_the_fold.
     */
    data?: XOR<wp_wpr_above_the_foldCreateInput, wp_wpr_above_the_foldUncheckedCreateInput>
  }

  /**
   * wp_wpr_above_the_fold createMany
   */
  export type wp_wpr_above_the_foldCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpr_above_the_folds.
     */
    data: wp_wpr_above_the_foldCreateManyInput | wp_wpr_above_the_foldCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpr_above_the_fold update
   */
  export type wp_wpr_above_the_foldUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpr_above_the_fold.
     */
    data: XOR<wp_wpr_above_the_foldUpdateInput, wp_wpr_above_the_foldUncheckedUpdateInput>
    /**
     * Choose, which wp_wpr_above_the_fold to update.
     */
    where: wp_wpr_above_the_foldWhereUniqueInput
  }

  /**
   * wp_wpr_above_the_fold updateMany
   */
  export type wp_wpr_above_the_foldUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpr_above_the_folds.
     */
    data: XOR<wp_wpr_above_the_foldUpdateManyMutationInput, wp_wpr_above_the_foldUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpr_above_the_folds to update
     */
    where?: wp_wpr_above_the_foldWhereInput
    /**
     * Limit how many wp_wpr_above_the_folds to update.
     */
    limit?: number
  }

  /**
   * wp_wpr_above_the_fold upsert
   */
  export type wp_wpr_above_the_foldUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpr_above_the_fold to update in case it exists.
     */
    where: wp_wpr_above_the_foldWhereUniqueInput
    /**
     * In case the wp_wpr_above_the_fold found by the `where` argument doesn't exist, create a new wp_wpr_above_the_fold with this data.
     */
    create: XOR<wp_wpr_above_the_foldCreateInput, wp_wpr_above_the_foldUncheckedCreateInput>
    /**
     * In case the wp_wpr_above_the_fold was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpr_above_the_foldUpdateInput, wp_wpr_above_the_foldUncheckedUpdateInput>
  }

  /**
   * wp_wpr_above_the_fold delete
   */
  export type wp_wpr_above_the_foldDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
    /**
     * Filter which wp_wpr_above_the_fold to delete.
     */
    where: wp_wpr_above_the_foldWhereUniqueInput
  }

  /**
   * wp_wpr_above_the_fold deleteMany
   */
  export type wp_wpr_above_the_foldDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpr_above_the_folds to delete
     */
    where?: wp_wpr_above_the_foldWhereInput
    /**
     * Limit how many wp_wpr_above_the_folds to delete.
     */
    limit?: number
  }

  /**
   * wp_wpr_above_the_fold without action
   */
  export type wp_wpr_above_the_foldDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_above_the_fold
     */
    select?: wp_wpr_above_the_foldSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_above_the_fold
     */
    omit?: wp_wpr_above_the_foldOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpr_rocket_cache
   */

  export type AggregateWp_wpr_rocket_cache = {
    _count: Wp_wpr_rocket_cacheCountAggregateOutputType | null
    _avg: Wp_wpr_rocket_cacheAvgAggregateOutputType | null
    _sum: Wp_wpr_rocket_cacheSumAggregateOutputType | null
    _min: Wp_wpr_rocket_cacheMinAggregateOutputType | null
    _max: Wp_wpr_rocket_cacheMaxAggregateOutputType | null
  }

  export type Wp_wpr_rocket_cacheAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_wpr_rocket_cacheSumAggregateOutputType = {
    id: bigint | null
  }

  export type Wp_wpr_rocket_cacheMinAggregateOutputType = {
    id: bigint | null
    url: string | null
    status: string | null
    modified: Date | null
    last_accessed: Date | null
    is_locked: boolean | null
  }

  export type Wp_wpr_rocket_cacheMaxAggregateOutputType = {
    id: bigint | null
    url: string | null
    status: string | null
    modified: Date | null
    last_accessed: Date | null
    is_locked: boolean | null
  }

  export type Wp_wpr_rocket_cacheCountAggregateOutputType = {
    id: number
    url: number
    status: number
    modified: number
    last_accessed: number
    is_locked: number
    _all: number
  }


  export type Wp_wpr_rocket_cacheAvgAggregateInputType = {
    id?: true
  }

  export type Wp_wpr_rocket_cacheSumAggregateInputType = {
    id?: true
  }

  export type Wp_wpr_rocket_cacheMinAggregateInputType = {
    id?: true
    url?: true
    status?: true
    modified?: true
    last_accessed?: true
    is_locked?: true
  }

  export type Wp_wpr_rocket_cacheMaxAggregateInputType = {
    id?: true
    url?: true
    status?: true
    modified?: true
    last_accessed?: true
    is_locked?: true
  }

  export type Wp_wpr_rocket_cacheCountAggregateInputType = {
    id?: true
    url?: true
    status?: true
    modified?: true
    last_accessed?: true
    is_locked?: true
    _all?: true
  }

  export type Wp_wpr_rocket_cacheAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpr_rocket_cache to aggregate.
     */
    where?: wp_wpr_rocket_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rocket_caches to fetch.
     */
    orderBy?: wp_wpr_rocket_cacheOrderByWithRelationInput | wp_wpr_rocket_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpr_rocket_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rocket_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rocket_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpr_rocket_caches
    **/
    _count?: true | Wp_wpr_rocket_cacheCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpr_rocket_cacheAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpr_rocket_cacheSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpr_rocket_cacheMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpr_rocket_cacheMaxAggregateInputType
  }

  export type GetWp_wpr_rocket_cacheAggregateType<T extends Wp_wpr_rocket_cacheAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpr_rocket_cache]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpr_rocket_cache[P]>
      : GetScalarType<T[P], AggregateWp_wpr_rocket_cache[P]>
  }




  export type wp_wpr_rocket_cacheGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpr_rocket_cacheWhereInput
    orderBy?: wp_wpr_rocket_cacheOrderByWithAggregationInput | wp_wpr_rocket_cacheOrderByWithAggregationInput[]
    by: Wp_wpr_rocket_cacheScalarFieldEnum[] | Wp_wpr_rocket_cacheScalarFieldEnum
    having?: wp_wpr_rocket_cacheScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpr_rocket_cacheCountAggregateInputType | true
    _avg?: Wp_wpr_rocket_cacheAvgAggregateInputType
    _sum?: Wp_wpr_rocket_cacheSumAggregateInputType
    _min?: Wp_wpr_rocket_cacheMinAggregateInputType
    _max?: Wp_wpr_rocket_cacheMaxAggregateInputType
  }

  export type Wp_wpr_rocket_cacheGroupByOutputType = {
    id: bigint
    url: string
    status: string
    modified: Date
    last_accessed: Date
    is_locked: boolean
    _count: Wp_wpr_rocket_cacheCountAggregateOutputType | null
    _avg: Wp_wpr_rocket_cacheAvgAggregateOutputType | null
    _sum: Wp_wpr_rocket_cacheSumAggregateOutputType | null
    _min: Wp_wpr_rocket_cacheMinAggregateOutputType | null
    _max: Wp_wpr_rocket_cacheMaxAggregateOutputType | null
  }

  type GetWp_wpr_rocket_cacheGroupByPayload<T extends wp_wpr_rocket_cacheGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpr_rocket_cacheGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpr_rocket_cacheGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpr_rocket_cacheGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpr_rocket_cacheGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpr_rocket_cacheSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    status?: boolean
    modified?: boolean
    last_accessed?: boolean
    is_locked?: boolean
  }, ExtArgs["result"]["wp_wpr_rocket_cache"]>



  export type wp_wpr_rocket_cacheSelectScalar = {
    id?: boolean
    url?: boolean
    status?: boolean
    modified?: boolean
    last_accessed?: boolean
    is_locked?: boolean
  }

  export type wp_wpr_rocket_cacheOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "status" | "modified" | "last_accessed" | "is_locked", ExtArgs["result"]["wp_wpr_rocket_cache"]>

  export type $wp_wpr_rocket_cachePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpr_rocket_cache"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      url: string
      status: string
      modified: Date
      last_accessed: Date
      is_locked: boolean
    }, ExtArgs["result"]["wp_wpr_rocket_cache"]>
    composites: {}
  }

  type wp_wpr_rocket_cacheGetPayload<S extends boolean | null | undefined | wp_wpr_rocket_cacheDefaultArgs> = $Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload, S>

  type wp_wpr_rocket_cacheCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpr_rocket_cacheFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpr_rocket_cacheCountAggregateInputType | true
    }

  export interface wp_wpr_rocket_cacheDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpr_rocket_cache'], meta: { name: 'wp_wpr_rocket_cache' } }
    /**
     * Find zero or one Wp_wpr_rocket_cache that matches the filter.
     * @param {wp_wpr_rocket_cacheFindUniqueArgs} args - Arguments to find a Wp_wpr_rocket_cache
     * @example
     * // Get one Wp_wpr_rocket_cache
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpr_rocket_cacheFindUniqueArgs>(args: SelectSubset<T, wp_wpr_rocket_cacheFindUniqueArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpr_rocket_cache that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpr_rocket_cacheFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpr_rocket_cache
     * @example
     * // Get one Wp_wpr_rocket_cache
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpr_rocket_cacheFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpr_rocket_cacheFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpr_rocket_cache that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rocket_cacheFindFirstArgs} args - Arguments to find a Wp_wpr_rocket_cache
     * @example
     * // Get one Wp_wpr_rocket_cache
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpr_rocket_cacheFindFirstArgs>(args?: SelectSubset<T, wp_wpr_rocket_cacheFindFirstArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpr_rocket_cache that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rocket_cacheFindFirstOrThrowArgs} args - Arguments to find a Wp_wpr_rocket_cache
     * @example
     * // Get one Wp_wpr_rocket_cache
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpr_rocket_cacheFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpr_rocket_cacheFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpr_rocket_caches that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rocket_cacheFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpr_rocket_caches
     * const wp_wpr_rocket_caches = await prisma.wp_wpr_rocket_cache.findMany()
     * 
     * // Get first 10 Wp_wpr_rocket_caches
     * const wp_wpr_rocket_caches = await prisma.wp_wpr_rocket_cache.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpr_rocket_cacheWithIdOnly = await prisma.wp_wpr_rocket_cache.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpr_rocket_cacheFindManyArgs>(args?: SelectSubset<T, wp_wpr_rocket_cacheFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpr_rocket_cache.
     * @param {wp_wpr_rocket_cacheCreateArgs} args - Arguments to create a Wp_wpr_rocket_cache.
     * @example
     * // Create one Wp_wpr_rocket_cache
     * const Wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.create({
     *   data: {
     *     // ... data to create a Wp_wpr_rocket_cache
     *   }
     * })
     * 
     */
    create<T extends wp_wpr_rocket_cacheCreateArgs>(args: SelectSubset<T, wp_wpr_rocket_cacheCreateArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpr_rocket_caches.
     * @param {wp_wpr_rocket_cacheCreateManyArgs} args - Arguments to create many Wp_wpr_rocket_caches.
     * @example
     * // Create many Wp_wpr_rocket_caches
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpr_rocket_cacheCreateManyArgs>(args?: SelectSubset<T, wp_wpr_rocket_cacheCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpr_rocket_cache.
     * @param {wp_wpr_rocket_cacheDeleteArgs} args - Arguments to delete one Wp_wpr_rocket_cache.
     * @example
     * // Delete one Wp_wpr_rocket_cache
     * const Wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpr_rocket_cache
     *   }
     * })
     * 
     */
    delete<T extends wp_wpr_rocket_cacheDeleteArgs>(args: SelectSubset<T, wp_wpr_rocket_cacheDeleteArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpr_rocket_cache.
     * @param {wp_wpr_rocket_cacheUpdateArgs} args - Arguments to update one Wp_wpr_rocket_cache.
     * @example
     * // Update one Wp_wpr_rocket_cache
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpr_rocket_cacheUpdateArgs>(args: SelectSubset<T, wp_wpr_rocket_cacheUpdateArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpr_rocket_caches.
     * @param {wp_wpr_rocket_cacheDeleteManyArgs} args - Arguments to filter Wp_wpr_rocket_caches to delete.
     * @example
     * // Delete a few Wp_wpr_rocket_caches
     * const { count } = await prisma.wp_wpr_rocket_cache.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpr_rocket_cacheDeleteManyArgs>(args?: SelectSubset<T, wp_wpr_rocket_cacheDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpr_rocket_caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rocket_cacheUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpr_rocket_caches
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpr_rocket_cacheUpdateManyArgs>(args: SelectSubset<T, wp_wpr_rocket_cacheUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpr_rocket_cache.
     * @param {wp_wpr_rocket_cacheUpsertArgs} args - Arguments to update or create a Wp_wpr_rocket_cache.
     * @example
     * // Update or create a Wp_wpr_rocket_cache
     * const wp_wpr_rocket_cache = await prisma.wp_wpr_rocket_cache.upsert({
     *   create: {
     *     // ... data to create a Wp_wpr_rocket_cache
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpr_rocket_cache we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpr_rocket_cacheUpsertArgs>(args: SelectSubset<T, wp_wpr_rocket_cacheUpsertArgs<ExtArgs>>): Prisma__wp_wpr_rocket_cacheClient<$Result.GetResult<Prisma.$wp_wpr_rocket_cachePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpr_rocket_caches.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rocket_cacheCountArgs} args - Arguments to filter Wp_wpr_rocket_caches to count.
     * @example
     * // Count the number of Wp_wpr_rocket_caches
     * const count = await prisma.wp_wpr_rocket_cache.count({
     *   where: {
     *     // ... the filter for the Wp_wpr_rocket_caches we want to count
     *   }
     * })
    **/
    count<T extends wp_wpr_rocket_cacheCountArgs>(
      args?: Subset<T, wp_wpr_rocket_cacheCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpr_rocket_cacheCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpr_rocket_cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpr_rocket_cacheAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpr_rocket_cacheAggregateArgs>(args: Subset<T, Wp_wpr_rocket_cacheAggregateArgs>): Prisma.PrismaPromise<GetWp_wpr_rocket_cacheAggregateType<T>>

    /**
     * Group by Wp_wpr_rocket_cache.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rocket_cacheGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpr_rocket_cacheGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpr_rocket_cacheGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpr_rocket_cacheGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpr_rocket_cacheGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpr_rocket_cacheGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpr_rocket_cache model
   */
  readonly fields: wp_wpr_rocket_cacheFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpr_rocket_cache.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpr_rocket_cacheClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpr_rocket_cache model
   */
  interface wp_wpr_rocket_cacheFieldRefs {
    readonly id: FieldRef<"wp_wpr_rocket_cache", 'BigInt'>
    readonly url: FieldRef<"wp_wpr_rocket_cache", 'String'>
    readonly status: FieldRef<"wp_wpr_rocket_cache", 'String'>
    readonly modified: FieldRef<"wp_wpr_rocket_cache", 'DateTime'>
    readonly last_accessed: FieldRef<"wp_wpr_rocket_cache", 'DateTime'>
    readonly is_locked: FieldRef<"wp_wpr_rocket_cache", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpr_rocket_cache findUnique
   */
  export type wp_wpr_rocket_cacheFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rocket_cache to fetch.
     */
    where: wp_wpr_rocket_cacheWhereUniqueInput
  }

  /**
   * wp_wpr_rocket_cache findUniqueOrThrow
   */
  export type wp_wpr_rocket_cacheFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rocket_cache to fetch.
     */
    where: wp_wpr_rocket_cacheWhereUniqueInput
  }

  /**
   * wp_wpr_rocket_cache findFirst
   */
  export type wp_wpr_rocket_cacheFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rocket_cache to fetch.
     */
    where?: wp_wpr_rocket_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rocket_caches to fetch.
     */
    orderBy?: wp_wpr_rocket_cacheOrderByWithRelationInput | wp_wpr_rocket_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpr_rocket_caches.
     */
    cursor?: wp_wpr_rocket_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rocket_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rocket_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpr_rocket_caches.
     */
    distinct?: Wp_wpr_rocket_cacheScalarFieldEnum | Wp_wpr_rocket_cacheScalarFieldEnum[]
  }

  /**
   * wp_wpr_rocket_cache findFirstOrThrow
   */
  export type wp_wpr_rocket_cacheFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rocket_cache to fetch.
     */
    where?: wp_wpr_rocket_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rocket_caches to fetch.
     */
    orderBy?: wp_wpr_rocket_cacheOrderByWithRelationInput | wp_wpr_rocket_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpr_rocket_caches.
     */
    cursor?: wp_wpr_rocket_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rocket_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rocket_caches.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpr_rocket_caches.
     */
    distinct?: Wp_wpr_rocket_cacheScalarFieldEnum | Wp_wpr_rocket_cacheScalarFieldEnum[]
  }

  /**
   * wp_wpr_rocket_cache findMany
   */
  export type wp_wpr_rocket_cacheFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rocket_caches to fetch.
     */
    where?: wp_wpr_rocket_cacheWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rocket_caches to fetch.
     */
    orderBy?: wp_wpr_rocket_cacheOrderByWithRelationInput | wp_wpr_rocket_cacheOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpr_rocket_caches.
     */
    cursor?: wp_wpr_rocket_cacheWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rocket_caches from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rocket_caches.
     */
    skip?: number
    distinct?: Wp_wpr_rocket_cacheScalarFieldEnum | Wp_wpr_rocket_cacheScalarFieldEnum[]
  }

  /**
   * wp_wpr_rocket_cache create
   */
  export type wp_wpr_rocket_cacheCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpr_rocket_cache.
     */
    data?: XOR<wp_wpr_rocket_cacheCreateInput, wp_wpr_rocket_cacheUncheckedCreateInput>
  }

  /**
   * wp_wpr_rocket_cache createMany
   */
  export type wp_wpr_rocket_cacheCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpr_rocket_caches.
     */
    data: wp_wpr_rocket_cacheCreateManyInput | wp_wpr_rocket_cacheCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpr_rocket_cache update
   */
  export type wp_wpr_rocket_cacheUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpr_rocket_cache.
     */
    data: XOR<wp_wpr_rocket_cacheUpdateInput, wp_wpr_rocket_cacheUncheckedUpdateInput>
    /**
     * Choose, which wp_wpr_rocket_cache to update.
     */
    where: wp_wpr_rocket_cacheWhereUniqueInput
  }

  /**
   * wp_wpr_rocket_cache updateMany
   */
  export type wp_wpr_rocket_cacheUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpr_rocket_caches.
     */
    data: XOR<wp_wpr_rocket_cacheUpdateManyMutationInput, wp_wpr_rocket_cacheUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpr_rocket_caches to update
     */
    where?: wp_wpr_rocket_cacheWhereInput
    /**
     * Limit how many wp_wpr_rocket_caches to update.
     */
    limit?: number
  }

  /**
   * wp_wpr_rocket_cache upsert
   */
  export type wp_wpr_rocket_cacheUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpr_rocket_cache to update in case it exists.
     */
    where: wp_wpr_rocket_cacheWhereUniqueInput
    /**
     * In case the wp_wpr_rocket_cache found by the `where` argument doesn't exist, create a new wp_wpr_rocket_cache with this data.
     */
    create: XOR<wp_wpr_rocket_cacheCreateInput, wp_wpr_rocket_cacheUncheckedCreateInput>
    /**
     * In case the wp_wpr_rocket_cache was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpr_rocket_cacheUpdateInput, wp_wpr_rocket_cacheUncheckedUpdateInput>
  }

  /**
   * wp_wpr_rocket_cache delete
   */
  export type wp_wpr_rocket_cacheDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
    /**
     * Filter which wp_wpr_rocket_cache to delete.
     */
    where: wp_wpr_rocket_cacheWhereUniqueInput
  }

  /**
   * wp_wpr_rocket_cache deleteMany
   */
  export type wp_wpr_rocket_cacheDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpr_rocket_caches to delete
     */
    where?: wp_wpr_rocket_cacheWhereInput
    /**
     * Limit how many wp_wpr_rocket_caches to delete.
     */
    limit?: number
  }

  /**
   * wp_wpr_rocket_cache without action
   */
  export type wp_wpr_rocket_cacheDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rocket_cache
     */
    select?: wp_wpr_rocket_cacheSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rocket_cache
     */
    omit?: wp_wpr_rocket_cacheOmit<ExtArgs> | null
  }


  /**
   * Model wp_wpr_rucss_used_css
   */

  export type AggregateWp_wpr_rucss_used_css = {
    _count: Wp_wpr_rucss_used_cssCountAggregateOutputType | null
    _avg: Wp_wpr_rucss_used_cssAvgAggregateOutputType | null
    _sum: Wp_wpr_rucss_used_cssSumAggregateOutputType | null
    _min: Wp_wpr_rucss_used_cssMinAggregateOutputType | null
    _max: Wp_wpr_rucss_used_cssMaxAggregateOutputType | null
  }

  export type Wp_wpr_rucss_used_cssAvgAggregateOutputType = {
    id: number | null
  }

  export type Wp_wpr_rucss_used_cssSumAggregateOutputType = {
    id: bigint | null
  }

  export type Wp_wpr_rucss_used_cssMinAggregateOutputType = {
    id: bigint | null
    url: string | null
    css: string | null
    hash: string | null
    error_code: string | null
    error_message: string | null
    unprocessedcss: string | null
    retries: boolean | null
    is_mobile: boolean | null
    job_id: string | null
    queue_name: string | null
    status: string | null
    modified: Date | null
    last_accessed: Date | null
    submitted_at: Date | null
    next_retry_time: Date | null
  }

  export type Wp_wpr_rucss_used_cssMaxAggregateOutputType = {
    id: bigint | null
    url: string | null
    css: string | null
    hash: string | null
    error_code: string | null
    error_message: string | null
    unprocessedcss: string | null
    retries: boolean | null
    is_mobile: boolean | null
    job_id: string | null
    queue_name: string | null
    status: string | null
    modified: Date | null
    last_accessed: Date | null
    submitted_at: Date | null
    next_retry_time: Date | null
  }

  export type Wp_wpr_rucss_used_cssCountAggregateOutputType = {
    id: number
    url: number
    css: number
    hash: number
    error_code: number
    error_message: number
    unprocessedcss: number
    retries: number
    is_mobile: number
    job_id: number
    queue_name: number
    status: number
    modified: number
    last_accessed: number
    submitted_at: number
    next_retry_time: number
    _all: number
  }


  export type Wp_wpr_rucss_used_cssAvgAggregateInputType = {
    id?: true
  }

  export type Wp_wpr_rucss_used_cssSumAggregateInputType = {
    id?: true
  }

  export type Wp_wpr_rucss_used_cssMinAggregateInputType = {
    id?: true
    url?: true
    css?: true
    hash?: true
    error_code?: true
    error_message?: true
    unprocessedcss?: true
    retries?: true
    is_mobile?: true
    job_id?: true
    queue_name?: true
    status?: true
    modified?: true
    last_accessed?: true
    submitted_at?: true
    next_retry_time?: true
  }

  export type Wp_wpr_rucss_used_cssMaxAggregateInputType = {
    id?: true
    url?: true
    css?: true
    hash?: true
    error_code?: true
    error_message?: true
    unprocessedcss?: true
    retries?: true
    is_mobile?: true
    job_id?: true
    queue_name?: true
    status?: true
    modified?: true
    last_accessed?: true
    submitted_at?: true
    next_retry_time?: true
  }

  export type Wp_wpr_rucss_used_cssCountAggregateInputType = {
    id?: true
    url?: true
    css?: true
    hash?: true
    error_code?: true
    error_message?: true
    unprocessedcss?: true
    retries?: true
    is_mobile?: true
    job_id?: true
    queue_name?: true
    status?: true
    modified?: true
    last_accessed?: true
    submitted_at?: true
    next_retry_time?: true
    _all?: true
  }

  export type Wp_wpr_rucss_used_cssAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpr_rucss_used_css to aggregate.
     */
    where?: wp_wpr_rucss_used_cssWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rucss_used_csses to fetch.
     */
    orderBy?: wp_wpr_rucss_used_cssOrderByWithRelationInput | wp_wpr_rucss_used_cssOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: wp_wpr_rucss_used_cssWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rucss_used_csses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rucss_used_csses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned wp_wpr_rucss_used_csses
    **/
    _count?: true | Wp_wpr_rucss_used_cssCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Wp_wpr_rucss_used_cssAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Wp_wpr_rucss_used_cssSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Wp_wpr_rucss_used_cssMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Wp_wpr_rucss_used_cssMaxAggregateInputType
  }

  export type GetWp_wpr_rucss_used_cssAggregateType<T extends Wp_wpr_rucss_used_cssAggregateArgs> = {
        [P in keyof T & keyof AggregateWp_wpr_rucss_used_css]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWp_wpr_rucss_used_css[P]>
      : GetScalarType<T[P], AggregateWp_wpr_rucss_used_css[P]>
  }




  export type wp_wpr_rucss_used_cssGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: wp_wpr_rucss_used_cssWhereInput
    orderBy?: wp_wpr_rucss_used_cssOrderByWithAggregationInput | wp_wpr_rucss_used_cssOrderByWithAggregationInput[]
    by: Wp_wpr_rucss_used_cssScalarFieldEnum[] | Wp_wpr_rucss_used_cssScalarFieldEnum
    having?: wp_wpr_rucss_used_cssScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Wp_wpr_rucss_used_cssCountAggregateInputType | true
    _avg?: Wp_wpr_rucss_used_cssAvgAggregateInputType
    _sum?: Wp_wpr_rucss_used_cssSumAggregateInputType
    _min?: Wp_wpr_rucss_used_cssMinAggregateInputType
    _max?: Wp_wpr_rucss_used_cssMaxAggregateInputType
  }

  export type Wp_wpr_rucss_used_cssGroupByOutputType = {
    id: bigint
    url: string
    css: string | null
    hash: string | null
    error_code: string | null
    error_message: string | null
    unprocessedcss: string | null
    retries: boolean
    is_mobile: boolean
    job_id: string
    queue_name: string
    status: string
    modified: Date
    last_accessed: Date
    submitted_at: Date | null
    next_retry_time: Date
    _count: Wp_wpr_rucss_used_cssCountAggregateOutputType | null
    _avg: Wp_wpr_rucss_used_cssAvgAggregateOutputType | null
    _sum: Wp_wpr_rucss_used_cssSumAggregateOutputType | null
    _min: Wp_wpr_rucss_used_cssMinAggregateOutputType | null
    _max: Wp_wpr_rucss_used_cssMaxAggregateOutputType | null
  }

  type GetWp_wpr_rucss_used_cssGroupByPayload<T extends wp_wpr_rucss_used_cssGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Wp_wpr_rucss_used_cssGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Wp_wpr_rucss_used_cssGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Wp_wpr_rucss_used_cssGroupByOutputType[P]>
            : GetScalarType<T[P], Wp_wpr_rucss_used_cssGroupByOutputType[P]>
        }
      >
    >


  export type wp_wpr_rucss_used_cssSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    url?: boolean
    css?: boolean
    hash?: boolean
    error_code?: boolean
    error_message?: boolean
    unprocessedcss?: boolean
    retries?: boolean
    is_mobile?: boolean
    job_id?: boolean
    queue_name?: boolean
    status?: boolean
    modified?: boolean
    last_accessed?: boolean
    submitted_at?: boolean
    next_retry_time?: boolean
  }, ExtArgs["result"]["wp_wpr_rucss_used_css"]>



  export type wp_wpr_rucss_used_cssSelectScalar = {
    id?: boolean
    url?: boolean
    css?: boolean
    hash?: boolean
    error_code?: boolean
    error_message?: boolean
    unprocessedcss?: boolean
    retries?: boolean
    is_mobile?: boolean
    job_id?: boolean
    queue_name?: boolean
    status?: boolean
    modified?: boolean
    last_accessed?: boolean
    submitted_at?: boolean
    next_retry_time?: boolean
  }

  export type wp_wpr_rucss_used_cssOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "url" | "css" | "hash" | "error_code" | "error_message" | "unprocessedcss" | "retries" | "is_mobile" | "job_id" | "queue_name" | "status" | "modified" | "last_accessed" | "submitted_at" | "next_retry_time", ExtArgs["result"]["wp_wpr_rucss_used_css"]>

  export type $wp_wpr_rucss_used_cssPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "wp_wpr_rucss_used_css"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      url: string
      css: string | null
      hash: string | null
      error_code: string | null
      error_message: string | null
      unprocessedcss: string | null
      retries: boolean
      is_mobile: boolean
      job_id: string
      queue_name: string
      status: string
      modified: Date
      last_accessed: Date
      submitted_at: Date | null
      next_retry_time: Date
    }, ExtArgs["result"]["wp_wpr_rucss_used_css"]>
    composites: {}
  }

  type wp_wpr_rucss_used_cssGetPayload<S extends boolean | null | undefined | wp_wpr_rucss_used_cssDefaultArgs> = $Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload, S>

  type wp_wpr_rucss_used_cssCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<wp_wpr_rucss_used_cssFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Wp_wpr_rucss_used_cssCountAggregateInputType | true
    }

  export interface wp_wpr_rucss_used_cssDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['wp_wpr_rucss_used_css'], meta: { name: 'wp_wpr_rucss_used_css' } }
    /**
     * Find zero or one Wp_wpr_rucss_used_css that matches the filter.
     * @param {wp_wpr_rucss_used_cssFindUniqueArgs} args - Arguments to find a Wp_wpr_rucss_used_css
     * @example
     * // Get one Wp_wpr_rucss_used_css
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends wp_wpr_rucss_used_cssFindUniqueArgs>(args: SelectSubset<T, wp_wpr_rucss_used_cssFindUniqueArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Wp_wpr_rucss_used_css that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {wp_wpr_rucss_used_cssFindUniqueOrThrowArgs} args - Arguments to find a Wp_wpr_rucss_used_css
     * @example
     * // Get one Wp_wpr_rucss_used_css
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends wp_wpr_rucss_used_cssFindUniqueOrThrowArgs>(args: SelectSubset<T, wp_wpr_rucss_used_cssFindUniqueOrThrowArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpr_rucss_used_css that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rucss_used_cssFindFirstArgs} args - Arguments to find a Wp_wpr_rucss_used_css
     * @example
     * // Get one Wp_wpr_rucss_used_css
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends wp_wpr_rucss_used_cssFindFirstArgs>(args?: SelectSubset<T, wp_wpr_rucss_used_cssFindFirstArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Wp_wpr_rucss_used_css that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rucss_used_cssFindFirstOrThrowArgs} args - Arguments to find a Wp_wpr_rucss_used_css
     * @example
     * // Get one Wp_wpr_rucss_used_css
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends wp_wpr_rucss_used_cssFindFirstOrThrowArgs>(args?: SelectSubset<T, wp_wpr_rucss_used_cssFindFirstOrThrowArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Wp_wpr_rucss_used_csses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rucss_used_cssFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wp_wpr_rucss_used_csses
     * const wp_wpr_rucss_used_csses = await prisma.wp_wpr_rucss_used_css.findMany()
     * 
     * // Get first 10 Wp_wpr_rucss_used_csses
     * const wp_wpr_rucss_used_csses = await prisma.wp_wpr_rucss_used_css.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wp_wpr_rucss_used_cssWithIdOnly = await prisma.wp_wpr_rucss_used_css.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends wp_wpr_rucss_used_cssFindManyArgs>(args?: SelectSubset<T, wp_wpr_rucss_used_cssFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Wp_wpr_rucss_used_css.
     * @param {wp_wpr_rucss_used_cssCreateArgs} args - Arguments to create a Wp_wpr_rucss_used_css.
     * @example
     * // Create one Wp_wpr_rucss_used_css
     * const Wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.create({
     *   data: {
     *     // ... data to create a Wp_wpr_rucss_used_css
     *   }
     * })
     * 
     */
    create<T extends wp_wpr_rucss_used_cssCreateArgs>(args: SelectSubset<T, wp_wpr_rucss_used_cssCreateArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Wp_wpr_rucss_used_csses.
     * @param {wp_wpr_rucss_used_cssCreateManyArgs} args - Arguments to create many Wp_wpr_rucss_used_csses.
     * @example
     * // Create many Wp_wpr_rucss_used_csses
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends wp_wpr_rucss_used_cssCreateManyArgs>(args?: SelectSubset<T, wp_wpr_rucss_used_cssCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wp_wpr_rucss_used_css.
     * @param {wp_wpr_rucss_used_cssDeleteArgs} args - Arguments to delete one Wp_wpr_rucss_used_css.
     * @example
     * // Delete one Wp_wpr_rucss_used_css
     * const Wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.delete({
     *   where: {
     *     // ... filter to delete one Wp_wpr_rucss_used_css
     *   }
     * })
     * 
     */
    delete<T extends wp_wpr_rucss_used_cssDeleteArgs>(args: SelectSubset<T, wp_wpr_rucss_used_cssDeleteArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Wp_wpr_rucss_used_css.
     * @param {wp_wpr_rucss_used_cssUpdateArgs} args - Arguments to update one Wp_wpr_rucss_used_css.
     * @example
     * // Update one Wp_wpr_rucss_used_css
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends wp_wpr_rucss_used_cssUpdateArgs>(args: SelectSubset<T, wp_wpr_rucss_used_cssUpdateArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Wp_wpr_rucss_used_csses.
     * @param {wp_wpr_rucss_used_cssDeleteManyArgs} args - Arguments to filter Wp_wpr_rucss_used_csses to delete.
     * @example
     * // Delete a few Wp_wpr_rucss_used_csses
     * const { count } = await prisma.wp_wpr_rucss_used_css.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends wp_wpr_rucss_used_cssDeleteManyArgs>(args?: SelectSubset<T, wp_wpr_rucss_used_cssDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wp_wpr_rucss_used_csses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rucss_used_cssUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wp_wpr_rucss_used_csses
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends wp_wpr_rucss_used_cssUpdateManyArgs>(args: SelectSubset<T, wp_wpr_rucss_used_cssUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wp_wpr_rucss_used_css.
     * @param {wp_wpr_rucss_used_cssUpsertArgs} args - Arguments to update or create a Wp_wpr_rucss_used_css.
     * @example
     * // Update or create a Wp_wpr_rucss_used_css
     * const wp_wpr_rucss_used_css = await prisma.wp_wpr_rucss_used_css.upsert({
     *   create: {
     *     // ... data to create a Wp_wpr_rucss_used_css
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wp_wpr_rucss_used_css we want to update
     *   }
     * })
     */
    upsert<T extends wp_wpr_rucss_used_cssUpsertArgs>(args: SelectSubset<T, wp_wpr_rucss_used_cssUpsertArgs<ExtArgs>>): Prisma__wp_wpr_rucss_used_cssClient<$Result.GetResult<Prisma.$wp_wpr_rucss_used_cssPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Wp_wpr_rucss_used_csses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rucss_used_cssCountArgs} args - Arguments to filter Wp_wpr_rucss_used_csses to count.
     * @example
     * // Count the number of Wp_wpr_rucss_used_csses
     * const count = await prisma.wp_wpr_rucss_used_css.count({
     *   where: {
     *     // ... the filter for the Wp_wpr_rucss_used_csses we want to count
     *   }
     * })
    **/
    count<T extends wp_wpr_rucss_used_cssCountArgs>(
      args?: Subset<T, wp_wpr_rucss_used_cssCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Wp_wpr_rucss_used_cssCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wp_wpr_rucss_used_css.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Wp_wpr_rucss_used_cssAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Wp_wpr_rucss_used_cssAggregateArgs>(args: Subset<T, Wp_wpr_rucss_used_cssAggregateArgs>): Prisma.PrismaPromise<GetWp_wpr_rucss_used_cssAggregateType<T>>

    /**
     * Group by Wp_wpr_rucss_used_css.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {wp_wpr_rucss_used_cssGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends wp_wpr_rucss_used_cssGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: wp_wpr_rucss_used_cssGroupByArgs['orderBy'] }
        : { orderBy?: wp_wpr_rucss_used_cssGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, wp_wpr_rucss_used_cssGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWp_wpr_rucss_used_cssGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the wp_wpr_rucss_used_css model
   */
  readonly fields: wp_wpr_rucss_used_cssFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for wp_wpr_rucss_used_css.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__wp_wpr_rucss_used_cssClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the wp_wpr_rucss_used_css model
   */
  interface wp_wpr_rucss_used_cssFieldRefs {
    readonly id: FieldRef<"wp_wpr_rucss_used_css", 'BigInt'>
    readonly url: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly css: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly hash: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly error_code: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly error_message: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly unprocessedcss: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly retries: FieldRef<"wp_wpr_rucss_used_css", 'Boolean'>
    readonly is_mobile: FieldRef<"wp_wpr_rucss_used_css", 'Boolean'>
    readonly job_id: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly queue_name: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly status: FieldRef<"wp_wpr_rucss_used_css", 'String'>
    readonly modified: FieldRef<"wp_wpr_rucss_used_css", 'DateTime'>
    readonly last_accessed: FieldRef<"wp_wpr_rucss_used_css", 'DateTime'>
    readonly submitted_at: FieldRef<"wp_wpr_rucss_used_css", 'DateTime'>
    readonly next_retry_time: FieldRef<"wp_wpr_rucss_used_css", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * wp_wpr_rucss_used_css findUnique
   */
  export type wp_wpr_rucss_used_cssFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rucss_used_css to fetch.
     */
    where: wp_wpr_rucss_used_cssWhereUniqueInput
  }

  /**
   * wp_wpr_rucss_used_css findUniqueOrThrow
   */
  export type wp_wpr_rucss_used_cssFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rucss_used_css to fetch.
     */
    where: wp_wpr_rucss_used_cssWhereUniqueInput
  }

  /**
   * wp_wpr_rucss_used_css findFirst
   */
  export type wp_wpr_rucss_used_cssFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rucss_used_css to fetch.
     */
    where?: wp_wpr_rucss_used_cssWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rucss_used_csses to fetch.
     */
    orderBy?: wp_wpr_rucss_used_cssOrderByWithRelationInput | wp_wpr_rucss_used_cssOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpr_rucss_used_csses.
     */
    cursor?: wp_wpr_rucss_used_cssWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rucss_used_csses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rucss_used_csses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpr_rucss_used_csses.
     */
    distinct?: Wp_wpr_rucss_used_cssScalarFieldEnum | Wp_wpr_rucss_used_cssScalarFieldEnum[]
  }

  /**
   * wp_wpr_rucss_used_css findFirstOrThrow
   */
  export type wp_wpr_rucss_used_cssFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rucss_used_css to fetch.
     */
    where?: wp_wpr_rucss_used_cssWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rucss_used_csses to fetch.
     */
    orderBy?: wp_wpr_rucss_used_cssOrderByWithRelationInput | wp_wpr_rucss_used_cssOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for wp_wpr_rucss_used_csses.
     */
    cursor?: wp_wpr_rucss_used_cssWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rucss_used_csses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rucss_used_csses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of wp_wpr_rucss_used_csses.
     */
    distinct?: Wp_wpr_rucss_used_cssScalarFieldEnum | Wp_wpr_rucss_used_cssScalarFieldEnum[]
  }

  /**
   * wp_wpr_rucss_used_css findMany
   */
  export type wp_wpr_rucss_used_cssFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * Filter, which wp_wpr_rucss_used_csses to fetch.
     */
    where?: wp_wpr_rucss_used_cssWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of wp_wpr_rucss_used_csses to fetch.
     */
    orderBy?: wp_wpr_rucss_used_cssOrderByWithRelationInput | wp_wpr_rucss_used_cssOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing wp_wpr_rucss_used_csses.
     */
    cursor?: wp_wpr_rucss_used_cssWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` wp_wpr_rucss_used_csses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` wp_wpr_rucss_used_csses.
     */
    skip?: number
    distinct?: Wp_wpr_rucss_used_cssScalarFieldEnum | Wp_wpr_rucss_used_cssScalarFieldEnum[]
  }

  /**
   * wp_wpr_rucss_used_css create
   */
  export type wp_wpr_rucss_used_cssCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * The data needed to create a wp_wpr_rucss_used_css.
     */
    data?: XOR<wp_wpr_rucss_used_cssCreateInput, wp_wpr_rucss_used_cssUncheckedCreateInput>
  }

  /**
   * wp_wpr_rucss_used_css createMany
   */
  export type wp_wpr_rucss_used_cssCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many wp_wpr_rucss_used_csses.
     */
    data: wp_wpr_rucss_used_cssCreateManyInput | wp_wpr_rucss_used_cssCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * wp_wpr_rucss_used_css update
   */
  export type wp_wpr_rucss_used_cssUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * The data needed to update a wp_wpr_rucss_used_css.
     */
    data: XOR<wp_wpr_rucss_used_cssUpdateInput, wp_wpr_rucss_used_cssUncheckedUpdateInput>
    /**
     * Choose, which wp_wpr_rucss_used_css to update.
     */
    where: wp_wpr_rucss_used_cssWhereUniqueInput
  }

  /**
   * wp_wpr_rucss_used_css updateMany
   */
  export type wp_wpr_rucss_used_cssUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update wp_wpr_rucss_used_csses.
     */
    data: XOR<wp_wpr_rucss_used_cssUpdateManyMutationInput, wp_wpr_rucss_used_cssUncheckedUpdateManyInput>
    /**
     * Filter which wp_wpr_rucss_used_csses to update
     */
    where?: wp_wpr_rucss_used_cssWhereInput
    /**
     * Limit how many wp_wpr_rucss_used_csses to update.
     */
    limit?: number
  }

  /**
   * wp_wpr_rucss_used_css upsert
   */
  export type wp_wpr_rucss_used_cssUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * The filter to search for the wp_wpr_rucss_used_css to update in case it exists.
     */
    where: wp_wpr_rucss_used_cssWhereUniqueInput
    /**
     * In case the wp_wpr_rucss_used_css found by the `where` argument doesn't exist, create a new wp_wpr_rucss_used_css with this data.
     */
    create: XOR<wp_wpr_rucss_used_cssCreateInput, wp_wpr_rucss_used_cssUncheckedCreateInput>
    /**
     * In case the wp_wpr_rucss_used_css was found with the provided `where` argument, update it with this data.
     */
    update: XOR<wp_wpr_rucss_used_cssUpdateInput, wp_wpr_rucss_used_cssUncheckedUpdateInput>
  }

  /**
   * wp_wpr_rucss_used_css delete
   */
  export type wp_wpr_rucss_used_cssDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
    /**
     * Filter which wp_wpr_rucss_used_css to delete.
     */
    where: wp_wpr_rucss_used_cssWhereUniqueInput
  }

  /**
   * wp_wpr_rucss_used_css deleteMany
   */
  export type wp_wpr_rucss_used_cssDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which wp_wpr_rucss_used_csses to delete
     */
    where?: wp_wpr_rucss_used_cssWhereInput
    /**
     * Limit how many wp_wpr_rucss_used_csses to delete.
     */
    limit?: number
  }

  /**
   * wp_wpr_rucss_used_css without action
   */
  export type wp_wpr_rucss_used_cssDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the wp_wpr_rucss_used_css
     */
    select?: wp_wpr_rucss_used_cssSelect<ExtArgs> | null
    /**
     * Omit specific fields from the wp_wpr_rucss_used_css
     */
    omit?: wp_wpr_rucss_used_cssOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Wp_actionscheduler_actionsScalarFieldEnum: {
    action_id: 'action_id',
    hook: 'hook',
    status: 'status',
    scheduled_date_gmt: 'scheduled_date_gmt',
    scheduled_date_local: 'scheduled_date_local',
    priority: 'priority',
    args: 'args',
    schedule: 'schedule',
    group_id: 'group_id',
    attempts: 'attempts',
    last_attempt_gmt: 'last_attempt_gmt',
    last_attempt_local: 'last_attempt_local',
    claim_id: 'claim_id',
    extended_args: 'extended_args'
  };

  export type Wp_actionscheduler_actionsScalarFieldEnum = (typeof Wp_actionscheduler_actionsScalarFieldEnum)[keyof typeof Wp_actionscheduler_actionsScalarFieldEnum]


  export const Wp_actionscheduler_claimsScalarFieldEnum: {
    claim_id: 'claim_id',
    date_created_gmt: 'date_created_gmt'
  };

  export type Wp_actionscheduler_claimsScalarFieldEnum = (typeof Wp_actionscheduler_claimsScalarFieldEnum)[keyof typeof Wp_actionscheduler_claimsScalarFieldEnum]


  export const Wp_actionscheduler_groupsScalarFieldEnum: {
    group_id: 'group_id',
    slug: 'slug'
  };

  export type Wp_actionscheduler_groupsScalarFieldEnum = (typeof Wp_actionscheduler_groupsScalarFieldEnum)[keyof typeof Wp_actionscheduler_groupsScalarFieldEnum]


  export const Wp_actionscheduler_logsScalarFieldEnum: {
    log_id: 'log_id',
    action_id: 'action_id',
    message: 'message',
    log_date_gmt: 'log_date_gmt',
    log_date_local: 'log_date_local'
  };

  export type Wp_actionscheduler_logsScalarFieldEnum = (typeof Wp_actionscheduler_logsScalarFieldEnum)[keyof typeof Wp_actionscheduler_logsScalarFieldEnum]


  export const Wp_addonlibrary_addonsScalarFieldEnum: {
    id: 'id',
    title: 'title',
    name: 'name',
    alias: 'alias',
    addontype: 'addontype',
    description: 'description',
    ordering: 'ordering',
    templates: 'templates',
    config: 'config',
    catid: 'catid',
    is_active: 'is_active',
    test_slot1: 'test_slot1',
    test_slot2: 'test_slot2',
    test_slot3: 'test_slot3'
  };

  export type Wp_addonlibrary_addonsScalarFieldEnum = (typeof Wp_addonlibrary_addonsScalarFieldEnum)[keyof typeof Wp_addonlibrary_addonsScalarFieldEnum]


  export const Wp_addonlibrary_categoriesScalarFieldEnum: {
    id: 'id',
    title: 'title',
    alias: 'alias',
    ordering: 'ordering',
    params: 'params',
    type: 'type',
    parent_id: 'parent_id'
  };

  export type Wp_addonlibrary_categoriesScalarFieldEnum = (typeof Wp_addonlibrary_categoriesScalarFieldEnum)[keyof typeof Wp_addonlibrary_categoriesScalarFieldEnum]


  export const Wp_ai_stats_eventsScalarFieldEnum: {
    id: 'id',
    dtime: 'dtime',
    track_url: 'track_url',
    track_title: 'track_title',
    track_artist: 'track_artist',
    playlist_id: 'playlist_id',
    referrer_url: 'referrer_url',
    client_fingerprint: 'client_fingerprint',
    event_name: 'event_name',
    event_data: 'event_data',
    is_stream: 'is_stream',
    processed: 'processed'
  };

  export type Wp_ai_stats_eventsScalarFieldEnum = (typeof Wp_ai_stats_eventsScalarFieldEnum)[keyof typeof Wp_ai_stats_eventsScalarFieldEnum]


  export const Wp_ai_stats_playScalarFieldEnum: {
    id: 'id',
    track_id: 'track_id',
    dtime: 'dtime',
    playlist_id: 'playlist_id',
    referrer_url: 'referrer_url',
    client_fingerprint: 'client_fingerprint',
    duration: 'duration',
    seeks: 'seeks',
    pauses: 'pauses',
    skipped: 'skipped',
    downloaded: 'downloaded'
  };

  export type Wp_ai_stats_playScalarFieldEnum = (typeof Wp_ai_stats_playScalarFieldEnum)[keyof typeof Wp_ai_stats_playScalarFieldEnum]


  export const Wp_ai_stats_trackScalarFieldEnum: {
    id: 'id',
    url: 'url',
    url_hash: 'url_hash',
    title: 'title',
    artist: 'artist',
    duration_mean: 'duration_mean',
    duration_count: 'duration_count',
    is_stream: 'is_stream'
  };

  export type Wp_ai_stats_trackScalarFieldEnum = (typeof Wp_ai_stats_trackScalarFieldEnum)[keyof typeof Wp_ai_stats_trackScalarFieldEnum]


  export const Wp_audier_elementor_cacheScalarFieldEnum: {
    id: 'id',
    key: 'key',
    data: 'data',
    updated_at: 'updated_at'
  };

  export type Wp_audier_elementor_cacheScalarFieldEnum = (typeof Wp_audier_elementor_cacheScalarFieldEnum)[keyof typeof Wp_audier_elementor_cacheScalarFieldEnum]


  export const Wp_commentmetaScalarFieldEnum: {
    meta_id: 'meta_id',
    comment_id: 'comment_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_commentmetaScalarFieldEnum = (typeof Wp_commentmetaScalarFieldEnum)[keyof typeof Wp_commentmetaScalarFieldEnum]


  export const Wp_commentsScalarFieldEnum: {
    comment_ID: 'comment_ID',
    comment_post_ID: 'comment_post_ID',
    comment_author: 'comment_author',
    comment_author_email: 'comment_author_email',
    comment_author_url: 'comment_author_url',
    comment_author_IP: 'comment_author_IP',
    comment_date: 'comment_date',
    comment_date_gmt: 'comment_date_gmt',
    comment_content: 'comment_content',
    comment_karma: 'comment_karma',
    comment_approved: 'comment_approved',
    comment_agent: 'comment_agent',
    comment_type: 'comment_type',
    comment_parent: 'comment_parent',
    user_id: 'user_id'
  };

  export type Wp_commentsScalarFieldEnum = (typeof Wp_commentsScalarFieldEnum)[keyof typeof Wp_commentsScalarFieldEnum]


  export const Wp_cpmp_playerScalarFieldEnum: {
    id: 'id',
    player_name: 'player_name',
    config: 'config',
    playlist: 'playlist'
  };

  export type Wp_cpmp_playerScalarFieldEnum = (typeof Wp_cpmp_playerScalarFieldEnum)[keyof typeof Wp_cpmp_playerScalarFieldEnum]


  export const Wp_e_eventsScalarFieldEnum: {
    id: 'id',
    event_data: 'event_data',
    created_at: 'created_at'
  };

  export type Wp_e_eventsScalarFieldEnum = (typeof Wp_e_eventsScalarFieldEnum)[keyof typeof Wp_e_eventsScalarFieldEnum]


  export const Wp_e_notesScalarFieldEnum: {
    id: 'id',
    route_url: 'route_url',
    route_title: 'route_title',
    route_post_id: 'route_post_id',
    post_id: 'post_id',
    element_id: 'element_id',
    parent_id: 'parent_id',
    author_id: 'author_id',
    author_display_name: 'author_display_name',
    status: 'status',
    position: 'position',
    content: 'content',
    is_resolved: 'is_resolved',
    is_public: 'is_public',
    last_activity_at: 'last_activity_at',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Wp_e_notesScalarFieldEnum = (typeof Wp_e_notesScalarFieldEnum)[keyof typeof Wp_e_notesScalarFieldEnum]


  export const Wp_e_notes_users_relationsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    note_id: 'note_id',
    user_id: 'user_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Wp_e_notes_users_relationsScalarFieldEnum = (typeof Wp_e_notes_users_relationsScalarFieldEnum)[keyof typeof Wp_e_notes_users_relationsScalarFieldEnum]


  export const Wp_e_submissionsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    hash_id: 'hash_id',
    main_meta_id: 'main_meta_id',
    post_id: 'post_id',
    referer: 'referer',
    referer_title: 'referer_title',
    element_id: 'element_id',
    form_name: 'form_name',
    campaign_id: 'campaign_id',
    user_id: 'user_id',
    user_ip: 'user_ip',
    user_agent: 'user_agent',
    actions_count: 'actions_count',
    actions_succeeded_count: 'actions_succeeded_count',
    status: 'status',
    is_read: 'is_read',
    meta: 'meta',
    created_at_gmt: 'created_at_gmt',
    updated_at_gmt: 'updated_at_gmt',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Wp_e_submissionsScalarFieldEnum = (typeof Wp_e_submissionsScalarFieldEnum)[keyof typeof Wp_e_submissionsScalarFieldEnum]


  export const Wp_e_submissions_actions_logScalarFieldEnum: {
    id: 'id',
    submission_id: 'submission_id',
    action_name: 'action_name',
    action_label: 'action_label',
    status: 'status',
    log: 'log',
    created_at_gmt: 'created_at_gmt',
    updated_at_gmt: 'updated_at_gmt',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Wp_e_submissions_actions_logScalarFieldEnum = (typeof Wp_e_submissions_actions_logScalarFieldEnum)[keyof typeof Wp_e_submissions_actions_logScalarFieldEnum]


  export const Wp_e_submissions_valuesScalarFieldEnum: {
    id: 'id',
    submission_id: 'submission_id',
    key: 'key',
    value: 'value'
  };

  export type Wp_e_submissions_valuesScalarFieldEnum = (typeof Wp_e_submissions_valuesScalarFieldEnum)[keyof typeof Wp_e_submissions_valuesScalarFieldEnum]


  export const Wp_jet_post_typesScalarFieldEnum: {
    id: 'id',
    slug: 'slug',
    status: 'status',
    labels: 'labels',
    args: 'args',
    meta_fields: 'meta_fields'
  };

  export type Wp_jet_post_typesScalarFieldEnum = (typeof Wp_jet_post_typesScalarFieldEnum)[keyof typeof Wp_jet_post_typesScalarFieldEnum]


  export const Wp_jet_smart_filters_indexerScalarFieldEnum: {
    id: 'id',
    type: 'type',
    item_id: 'item_id',
    item_query: 'item_query',
    item_key: 'item_key',
    item_value: 'item_value'
  };

  export type Wp_jet_smart_filters_indexerScalarFieldEnum = (typeof Wp_jet_smart_filters_indexerScalarFieldEnum)[keyof typeof Wp_jet_smart_filters_indexerScalarFieldEnum]


  export const Wp_jet_taxonomiesScalarFieldEnum: {
    id: 'id',
    slug: 'slug',
    object_type: 'object_type',
    status: 'status',
    labels: 'labels',
    args: 'args',
    meta_fields: 'meta_fields'
  };

  export type Wp_jet_taxonomiesScalarFieldEnum = (typeof Wp_jet_taxonomiesScalarFieldEnum)[keyof typeof Wp_jet_taxonomiesScalarFieldEnum]


  export const Wp_linksScalarFieldEnum: {
    link_id: 'link_id',
    link_url: 'link_url',
    link_name: 'link_name',
    link_image: 'link_image',
    link_target: 'link_target',
    link_description: 'link_description',
    link_visible: 'link_visible',
    link_owner: 'link_owner',
    link_rating: 'link_rating',
    link_updated: 'link_updated',
    link_rel: 'link_rel',
    link_notes: 'link_notes',
    link_rss: 'link_rss'
  };

  export type Wp_linksScalarFieldEnum = (typeof Wp_linksScalarFieldEnum)[keyof typeof Wp_linksScalarFieldEnum]


  export const Wp_optionsScalarFieldEnum: {
    option_id: 'option_id',
    option_name: 'option_name',
    option_value: 'option_value',
    autoload: 'autoload'
  };

  export type Wp_optionsScalarFieldEnum = (typeof Wp_optionsScalarFieldEnum)[keyof typeof Wp_optionsScalarFieldEnum]


  export const Wp_postmetaScalarFieldEnum: {
    meta_id: 'meta_id',
    post_id: 'post_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_postmetaScalarFieldEnum = (typeof Wp_postmetaScalarFieldEnum)[keyof typeof Wp_postmetaScalarFieldEnum]


  export const Wp_postsScalarFieldEnum: {
    ID: 'ID',
    post_author: 'post_author',
    post_date: 'post_date',
    post_date_gmt: 'post_date_gmt',
    post_content: 'post_content',
    post_title: 'post_title',
    post_excerpt: 'post_excerpt',
    post_status: 'post_status',
    comment_status: 'comment_status',
    ping_status: 'ping_status',
    post_password: 'post_password',
    post_name: 'post_name',
    to_ping: 'to_ping',
    pinged: 'pinged',
    post_modified: 'post_modified',
    post_modified_gmt: 'post_modified_gmt',
    post_content_filtered: 'post_content_filtered',
    post_parent: 'post_parent',
    guid: 'guid',
    menu_order: 'menu_order',
    post_type: 'post_type',
    post_mime_type: 'post_mime_type',
    comment_count: 'comment_count'
  };

  export type Wp_postsScalarFieldEnum = (typeof Wp_postsScalarFieldEnum)[keyof typeof Wp_postsScalarFieldEnum]


  export const Wp_rank_math_internal_linksScalarFieldEnum: {
    id: 'id',
    url: 'url',
    post_id: 'post_id',
    target_post_id: 'target_post_id',
    type: 'type'
  };

  export type Wp_rank_math_internal_linksScalarFieldEnum = (typeof Wp_rank_math_internal_linksScalarFieldEnum)[keyof typeof Wp_rank_math_internal_linksScalarFieldEnum]


  export const Wp_rank_math_internal_metaScalarFieldEnum: {
    object_id: 'object_id',
    internal_link_count: 'internal_link_count',
    external_link_count: 'external_link_count',
    incoming_link_count: 'incoming_link_count'
  };

  export type Wp_rank_math_internal_metaScalarFieldEnum = (typeof Wp_rank_math_internal_metaScalarFieldEnum)[keyof typeof Wp_rank_math_internal_metaScalarFieldEnum]


  export const Wp_rtl_rsm_logsScalarFieldEnum: {
    id: 'id',
    type: 'type',
    section: 'section',
    result: 'result',
    date: 'date'
  };

  export type Wp_rtl_rsm_logsScalarFieldEnum = (typeof Wp_rtl_rsm_logsScalarFieldEnum)[keyof typeof Wp_rtl_rsm_logsScalarFieldEnum]


  export const Wp_soogname_metaScalarFieldEnum: {
    meta_ID: 'meta_ID',
    object_ID: 'object_ID'
  };

  export type Wp_soogname_metaScalarFieldEnum = (typeof Wp_soogname_metaScalarFieldEnum)[keyof typeof Wp_soogname_metaScalarFieldEnum]


  export const Wp_term_relationshipsScalarFieldEnum: {
    object_id: 'object_id',
    term_taxonomy_id: 'term_taxonomy_id',
    term_order: 'term_order'
  };

  export type Wp_term_relationshipsScalarFieldEnum = (typeof Wp_term_relationshipsScalarFieldEnum)[keyof typeof Wp_term_relationshipsScalarFieldEnum]


  export const Wp_term_taxonomyScalarFieldEnum: {
    term_taxonomy_id: 'term_taxonomy_id',
    term_id: 'term_id',
    taxonomy: 'taxonomy',
    description: 'description',
    parent: 'parent',
    count: 'count'
  };

  export type Wp_term_taxonomyScalarFieldEnum = (typeof Wp_term_taxonomyScalarFieldEnum)[keyof typeof Wp_term_taxonomyScalarFieldEnum]


  export const Wp_termmetaScalarFieldEnum: {
    meta_id: 'meta_id',
    term_id: 'term_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_termmetaScalarFieldEnum = (typeof Wp_termmetaScalarFieldEnum)[keyof typeof Wp_termmetaScalarFieldEnum]


  export const Wp_termsScalarFieldEnum: {
    term_id: 'term_id',
    name: 'name',
    slug: 'slug',
    term_group: 'term_group'
  };

  export type Wp_termsScalarFieldEnum = (typeof Wp_termsScalarFieldEnum)[keyof typeof Wp_termsScalarFieldEnum]


  export const Wp_usermetaScalarFieldEnum: {
    umeta_id: 'umeta_id',
    user_id: 'user_id',
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type Wp_usermetaScalarFieldEnum = (typeof Wp_usermetaScalarFieldEnum)[keyof typeof Wp_usermetaScalarFieldEnum]


  export const Wp_usersScalarFieldEnum: {
    ID: 'ID',
    user_login: 'user_login',
    user_pass: 'user_pass',
    user_nicename: 'user_nicename',
    user_email: 'user_email',
    user_url: 'user_url',
    user_registered: 'user_registered',
    user_activation_key: 'user_activation_key',
    user_status: 'user_status',
    display_name: 'display_name'
  };

  export type Wp_usersScalarFieldEnum = (typeof Wp_usersScalarFieldEnum)[keyof typeof Wp_usersScalarFieldEnum]


  export const Wp_wpr_above_the_foldScalarFieldEnum: {
    id: 'id',
    url: 'url',
    is_mobile: 'is_mobile',
    lcp: 'lcp',
    viewport: 'viewport',
    error_message: 'error_message',
    status: 'status',
    modified: 'modified',
    last_accessed: 'last_accessed'
  };

  export type Wp_wpr_above_the_foldScalarFieldEnum = (typeof Wp_wpr_above_the_foldScalarFieldEnum)[keyof typeof Wp_wpr_above_the_foldScalarFieldEnum]


  export const Wp_wpr_rocket_cacheScalarFieldEnum: {
    id: 'id',
    url: 'url',
    status: 'status',
    modified: 'modified',
    last_accessed: 'last_accessed',
    is_locked: 'is_locked'
  };

  export type Wp_wpr_rocket_cacheScalarFieldEnum = (typeof Wp_wpr_rocket_cacheScalarFieldEnum)[keyof typeof Wp_wpr_rocket_cacheScalarFieldEnum]


  export const Wp_wpr_rucss_used_cssScalarFieldEnum: {
    id: 'id',
    url: 'url',
    css: 'css',
    hash: 'hash',
    error_code: 'error_code',
    error_message: 'error_message',
    unprocessedcss: 'unprocessedcss',
    retries: 'retries',
    is_mobile: 'is_mobile',
    job_id: 'job_id',
    queue_name: 'queue_name',
    status: 'status',
    modified: 'modified',
    last_accessed: 'last_accessed',
    submitted_at: 'submitted_at',
    next_retry_time: 'next_retry_time'
  };

  export type Wp_wpr_rucss_used_cssScalarFieldEnum = (typeof Wp_wpr_rucss_used_cssScalarFieldEnum)[keyof typeof Wp_wpr_rucss_used_cssScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const wp_actionscheduler_actionsOrderByRelevanceFieldEnum: {
    hook: 'hook',
    status: 'status',
    args: 'args',
    schedule: 'schedule',
    extended_args: 'extended_args'
  };

  export type wp_actionscheduler_actionsOrderByRelevanceFieldEnum = (typeof wp_actionscheduler_actionsOrderByRelevanceFieldEnum)[keyof typeof wp_actionscheduler_actionsOrderByRelevanceFieldEnum]


  export const wp_actionscheduler_groupsOrderByRelevanceFieldEnum: {
    slug: 'slug'
  };

  export type wp_actionscheduler_groupsOrderByRelevanceFieldEnum = (typeof wp_actionscheduler_groupsOrderByRelevanceFieldEnum)[keyof typeof wp_actionscheduler_groupsOrderByRelevanceFieldEnum]


  export const wp_actionscheduler_logsOrderByRelevanceFieldEnum: {
    message: 'message'
  };

  export type wp_actionscheduler_logsOrderByRelevanceFieldEnum = (typeof wp_actionscheduler_logsOrderByRelevanceFieldEnum)[keyof typeof wp_actionscheduler_logsOrderByRelevanceFieldEnum]


  export const wp_addonlibrary_addonsOrderByRelevanceFieldEnum: {
    title: 'title',
    name: 'name',
    alias: 'alias',
    addontype: 'addontype',
    description: 'description',
    templates: 'templates',
    config: 'config',
    test_slot1: 'test_slot1',
    test_slot2: 'test_slot2',
    test_slot3: 'test_slot3'
  };

  export type wp_addonlibrary_addonsOrderByRelevanceFieldEnum = (typeof wp_addonlibrary_addonsOrderByRelevanceFieldEnum)[keyof typeof wp_addonlibrary_addonsOrderByRelevanceFieldEnum]


  export const wp_addonlibrary_categoriesOrderByRelevanceFieldEnum: {
    title: 'title',
    alias: 'alias',
    params: 'params',
    type: 'type'
  };

  export type wp_addonlibrary_categoriesOrderByRelevanceFieldEnum = (typeof wp_addonlibrary_categoriesOrderByRelevanceFieldEnum)[keyof typeof wp_addonlibrary_categoriesOrderByRelevanceFieldEnum]


  export const wp_ai_stats_eventsOrderByRelevanceFieldEnum: {
    track_url: 'track_url',
    track_title: 'track_title',
    track_artist: 'track_artist',
    referrer_url: 'referrer_url',
    client_fingerprint: 'client_fingerprint',
    event_name: 'event_name',
    event_data: 'event_data'
  };

  export type wp_ai_stats_eventsOrderByRelevanceFieldEnum = (typeof wp_ai_stats_eventsOrderByRelevanceFieldEnum)[keyof typeof wp_ai_stats_eventsOrderByRelevanceFieldEnum]


  export const wp_ai_stats_playOrderByRelevanceFieldEnum: {
    referrer_url: 'referrer_url',
    client_fingerprint: 'client_fingerprint'
  };

  export type wp_ai_stats_playOrderByRelevanceFieldEnum = (typeof wp_ai_stats_playOrderByRelevanceFieldEnum)[keyof typeof wp_ai_stats_playOrderByRelevanceFieldEnum]


  export const wp_ai_stats_trackOrderByRelevanceFieldEnum: {
    url: 'url',
    url_hash: 'url_hash',
    title: 'title',
    artist: 'artist'
  };

  export type wp_ai_stats_trackOrderByRelevanceFieldEnum = (typeof wp_ai_stats_trackOrderByRelevanceFieldEnum)[keyof typeof wp_ai_stats_trackOrderByRelevanceFieldEnum]


  export const wp_audier_elementor_cacheOrderByRelevanceFieldEnum: {
    key: 'key',
    data: 'data'
  };

  export type wp_audier_elementor_cacheOrderByRelevanceFieldEnum = (typeof wp_audier_elementor_cacheOrderByRelevanceFieldEnum)[keyof typeof wp_audier_elementor_cacheOrderByRelevanceFieldEnum]


  export const wp_commentmetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_commentmetaOrderByRelevanceFieldEnum = (typeof wp_commentmetaOrderByRelevanceFieldEnum)[keyof typeof wp_commentmetaOrderByRelevanceFieldEnum]


  export const wp_commentsOrderByRelevanceFieldEnum: {
    comment_author: 'comment_author',
    comment_author_email: 'comment_author_email',
    comment_author_url: 'comment_author_url',
    comment_author_IP: 'comment_author_IP',
    comment_content: 'comment_content',
    comment_approved: 'comment_approved',
    comment_agent: 'comment_agent',
    comment_type: 'comment_type'
  };

  export type wp_commentsOrderByRelevanceFieldEnum = (typeof wp_commentsOrderByRelevanceFieldEnum)[keyof typeof wp_commentsOrderByRelevanceFieldEnum]


  export const wp_cpmp_playerOrderByRelevanceFieldEnum: {
    player_name: 'player_name',
    config: 'config',
    playlist: 'playlist'
  };

  export type wp_cpmp_playerOrderByRelevanceFieldEnum = (typeof wp_cpmp_playerOrderByRelevanceFieldEnum)[keyof typeof wp_cpmp_playerOrderByRelevanceFieldEnum]


  export const wp_e_eventsOrderByRelevanceFieldEnum: {
    event_data: 'event_data'
  };

  export type wp_e_eventsOrderByRelevanceFieldEnum = (typeof wp_e_eventsOrderByRelevanceFieldEnum)[keyof typeof wp_e_eventsOrderByRelevanceFieldEnum]


  export const wp_e_notesOrderByRelevanceFieldEnum: {
    route_url: 'route_url',
    route_title: 'route_title',
    element_id: 'element_id',
    author_display_name: 'author_display_name',
    status: 'status',
    position: 'position',
    content: 'content'
  };

  export type wp_e_notesOrderByRelevanceFieldEnum = (typeof wp_e_notesOrderByRelevanceFieldEnum)[keyof typeof wp_e_notesOrderByRelevanceFieldEnum]


  export const wp_e_notes_users_relationsOrderByRelevanceFieldEnum: {
    type: 'type'
  };

  export type wp_e_notes_users_relationsOrderByRelevanceFieldEnum = (typeof wp_e_notes_users_relationsOrderByRelevanceFieldEnum)[keyof typeof wp_e_notes_users_relationsOrderByRelevanceFieldEnum]


  export const wp_e_submissionsOrderByRelevanceFieldEnum: {
    type: 'type',
    hash_id: 'hash_id',
    referer: 'referer',
    referer_title: 'referer_title',
    element_id: 'element_id',
    form_name: 'form_name',
    user_ip: 'user_ip',
    user_agent: 'user_agent',
    status: 'status',
    meta: 'meta'
  };

  export type wp_e_submissionsOrderByRelevanceFieldEnum = (typeof wp_e_submissionsOrderByRelevanceFieldEnum)[keyof typeof wp_e_submissionsOrderByRelevanceFieldEnum]


  export const wp_e_submissions_actions_logOrderByRelevanceFieldEnum: {
    action_name: 'action_name',
    action_label: 'action_label',
    status: 'status',
    log: 'log'
  };

  export type wp_e_submissions_actions_logOrderByRelevanceFieldEnum = (typeof wp_e_submissions_actions_logOrderByRelevanceFieldEnum)[keyof typeof wp_e_submissions_actions_logOrderByRelevanceFieldEnum]


  export const wp_e_submissions_valuesOrderByRelevanceFieldEnum: {
    key: 'key',
    value: 'value'
  };

  export type wp_e_submissions_valuesOrderByRelevanceFieldEnum = (typeof wp_e_submissions_valuesOrderByRelevanceFieldEnum)[keyof typeof wp_e_submissions_valuesOrderByRelevanceFieldEnum]


  export const wp_jet_post_typesOrderByRelevanceFieldEnum: {
    slug: 'slug',
    status: 'status',
    labels: 'labels',
    args: 'args',
    meta_fields: 'meta_fields'
  };

  export type wp_jet_post_typesOrderByRelevanceFieldEnum = (typeof wp_jet_post_typesOrderByRelevanceFieldEnum)[keyof typeof wp_jet_post_typesOrderByRelevanceFieldEnum]


  export const wp_jet_smart_filters_indexerOrderByRelevanceFieldEnum: {
    type: 'type',
    item_query: 'item_query',
    item_key: 'item_key',
    item_value: 'item_value'
  };

  export type wp_jet_smart_filters_indexerOrderByRelevanceFieldEnum = (typeof wp_jet_smart_filters_indexerOrderByRelevanceFieldEnum)[keyof typeof wp_jet_smart_filters_indexerOrderByRelevanceFieldEnum]


  export const wp_jet_taxonomiesOrderByRelevanceFieldEnum: {
    slug: 'slug',
    object_type: 'object_type',
    status: 'status',
    labels: 'labels',
    args: 'args',
    meta_fields: 'meta_fields'
  };

  export type wp_jet_taxonomiesOrderByRelevanceFieldEnum = (typeof wp_jet_taxonomiesOrderByRelevanceFieldEnum)[keyof typeof wp_jet_taxonomiesOrderByRelevanceFieldEnum]


  export const wp_linksOrderByRelevanceFieldEnum: {
    link_url: 'link_url',
    link_name: 'link_name',
    link_image: 'link_image',
    link_target: 'link_target',
    link_description: 'link_description',
    link_visible: 'link_visible',
    link_rel: 'link_rel',
    link_notes: 'link_notes',
    link_rss: 'link_rss'
  };

  export type wp_linksOrderByRelevanceFieldEnum = (typeof wp_linksOrderByRelevanceFieldEnum)[keyof typeof wp_linksOrderByRelevanceFieldEnum]


  export const wp_optionsOrderByRelevanceFieldEnum: {
    option_name: 'option_name',
    option_value: 'option_value',
    autoload: 'autoload'
  };

  export type wp_optionsOrderByRelevanceFieldEnum = (typeof wp_optionsOrderByRelevanceFieldEnum)[keyof typeof wp_optionsOrderByRelevanceFieldEnum]


  export const wp_postmetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_postmetaOrderByRelevanceFieldEnum = (typeof wp_postmetaOrderByRelevanceFieldEnum)[keyof typeof wp_postmetaOrderByRelevanceFieldEnum]


  export const wp_postsOrderByRelevanceFieldEnum: {
    post_content: 'post_content',
    post_title: 'post_title',
    post_excerpt: 'post_excerpt',
    post_status: 'post_status',
    comment_status: 'comment_status',
    ping_status: 'ping_status',
    post_password: 'post_password',
    post_name: 'post_name',
    to_ping: 'to_ping',
    pinged: 'pinged',
    post_content_filtered: 'post_content_filtered',
    guid: 'guid',
    post_type: 'post_type',
    post_mime_type: 'post_mime_type'
  };

  export type wp_postsOrderByRelevanceFieldEnum = (typeof wp_postsOrderByRelevanceFieldEnum)[keyof typeof wp_postsOrderByRelevanceFieldEnum]


  export const wp_rank_math_internal_linksOrderByRelevanceFieldEnum: {
    url: 'url',
    type: 'type'
  };

  export type wp_rank_math_internal_linksOrderByRelevanceFieldEnum = (typeof wp_rank_math_internal_linksOrderByRelevanceFieldEnum)[keyof typeof wp_rank_math_internal_linksOrderByRelevanceFieldEnum]


  export const wp_rtl_rsm_logsOrderByRelevanceFieldEnum: {
    type: 'type',
    section: 'section',
    result: 'result'
  };

  export type wp_rtl_rsm_logsOrderByRelevanceFieldEnum = (typeof wp_rtl_rsm_logsOrderByRelevanceFieldEnum)[keyof typeof wp_rtl_rsm_logsOrderByRelevanceFieldEnum]


  export const wp_term_taxonomyOrderByRelevanceFieldEnum: {
    taxonomy: 'taxonomy',
    description: 'description'
  };

  export type wp_term_taxonomyOrderByRelevanceFieldEnum = (typeof wp_term_taxonomyOrderByRelevanceFieldEnum)[keyof typeof wp_term_taxonomyOrderByRelevanceFieldEnum]


  export const wp_termmetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_termmetaOrderByRelevanceFieldEnum = (typeof wp_termmetaOrderByRelevanceFieldEnum)[keyof typeof wp_termmetaOrderByRelevanceFieldEnum]


  export const wp_termsOrderByRelevanceFieldEnum: {
    name: 'name',
    slug: 'slug'
  };

  export type wp_termsOrderByRelevanceFieldEnum = (typeof wp_termsOrderByRelevanceFieldEnum)[keyof typeof wp_termsOrderByRelevanceFieldEnum]


  export const wp_usermetaOrderByRelevanceFieldEnum: {
    meta_key: 'meta_key',
    meta_value: 'meta_value'
  };

  export type wp_usermetaOrderByRelevanceFieldEnum = (typeof wp_usermetaOrderByRelevanceFieldEnum)[keyof typeof wp_usermetaOrderByRelevanceFieldEnum]


  export const wp_usersOrderByRelevanceFieldEnum: {
    user_login: 'user_login',
    user_pass: 'user_pass',
    user_nicename: 'user_nicename',
    user_email: 'user_email',
    user_url: 'user_url',
    user_activation_key: 'user_activation_key',
    display_name: 'display_name'
  };

  export type wp_usersOrderByRelevanceFieldEnum = (typeof wp_usersOrderByRelevanceFieldEnum)[keyof typeof wp_usersOrderByRelevanceFieldEnum]


  export const wp_wpr_above_the_foldOrderByRelevanceFieldEnum: {
    url: 'url',
    lcp: 'lcp',
    viewport: 'viewport',
    error_message: 'error_message',
    status: 'status'
  };

  export type wp_wpr_above_the_foldOrderByRelevanceFieldEnum = (typeof wp_wpr_above_the_foldOrderByRelevanceFieldEnum)[keyof typeof wp_wpr_above_the_foldOrderByRelevanceFieldEnum]


  export const wp_wpr_rocket_cacheOrderByRelevanceFieldEnum: {
    url: 'url',
    status: 'status'
  };

  export type wp_wpr_rocket_cacheOrderByRelevanceFieldEnum = (typeof wp_wpr_rocket_cacheOrderByRelevanceFieldEnum)[keyof typeof wp_wpr_rocket_cacheOrderByRelevanceFieldEnum]


  export const wp_wpr_rucss_used_cssOrderByRelevanceFieldEnum: {
    url: 'url',
    css: 'css',
    hash: 'hash',
    error_code: 'error_code',
    error_message: 'error_message',
    unprocessedcss: 'unprocessedcss',
    job_id: 'job_id',
    queue_name: 'queue_name',
    status: 'status'
  };

  export type wp_wpr_rucss_used_cssOrderByRelevanceFieldEnum = (typeof wp_wpr_rucss_used_cssOrderByRelevanceFieldEnum)[keyof typeof wp_wpr_rucss_used_cssOrderByRelevanceFieldEnum]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type wp_actionscheduler_actionsWhereInput = {
    AND?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    OR?: wp_actionscheduler_actionsWhereInput[]
    NOT?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    action_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    hook?: StringFilter<"wp_actionscheduler_actions"> | string
    status?: StringFilter<"wp_actionscheduler_actions"> | string
    scheduled_date_gmt?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    scheduled_date_local?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    priority?: IntFilter<"wp_actionscheduler_actions"> | number
    args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    schedule?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    group_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    attempts?: IntFilter<"wp_actionscheduler_actions"> | number
    last_attempt_gmt?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    last_attempt_local?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    claim_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    extended_args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
  }

  export type wp_actionscheduler_actionsOrderByWithRelationInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrderInput | SortOrder
    scheduled_date_local?: SortOrderInput | SortOrder
    priority?: SortOrder
    args?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrderInput | SortOrder
    last_attempt_local?: SortOrderInput | SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrderInput | SortOrder
    _relevance?: wp_actionscheduler_actionsOrderByRelevanceInput
  }

  export type wp_actionscheduler_actionsWhereUniqueInput = Prisma.AtLeast<{
    action_id?: bigint | number
    AND?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    OR?: wp_actionscheduler_actionsWhereInput[]
    NOT?: wp_actionscheduler_actionsWhereInput | wp_actionscheduler_actionsWhereInput[]
    hook?: StringFilter<"wp_actionscheduler_actions"> | string
    status?: StringFilter<"wp_actionscheduler_actions"> | string
    scheduled_date_gmt?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    scheduled_date_local?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    priority?: IntFilter<"wp_actionscheduler_actions"> | number
    args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    schedule?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
    group_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    attempts?: IntFilter<"wp_actionscheduler_actions"> | number
    last_attempt_gmt?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    last_attempt_local?: DateTimeNullableFilter<"wp_actionscheduler_actions"> | Date | string | null
    claim_id?: BigIntFilter<"wp_actionscheduler_actions"> | bigint | number
    extended_args?: StringNullableFilter<"wp_actionscheduler_actions"> | string | null
  }, "action_id">

  export type wp_actionscheduler_actionsOrderByWithAggregationInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrderInput | SortOrder
    scheduled_date_local?: SortOrderInput | SortOrder
    priority?: SortOrder
    args?: SortOrderInput | SortOrder
    schedule?: SortOrderInput | SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrderInput | SortOrder
    last_attempt_local?: SortOrderInput | SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrderInput | SortOrder
    _count?: wp_actionscheduler_actionsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_actionsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_actionsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_actionsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_actionsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_actionsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput | wp_actionscheduler_actionsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_actionsScalarWhereWithAggregatesInput | wp_actionscheduler_actionsScalarWhereWithAggregatesInput[]
    action_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_actions"> | bigint | number
    hook?: StringWithAggregatesFilter<"wp_actionscheduler_actions"> | string
    status?: StringWithAggregatesFilter<"wp_actionscheduler_actions"> | string
    scheduled_date_gmt?: DateTimeNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string | null
    scheduled_date_local?: DateTimeNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string | null
    priority?: IntWithAggregatesFilter<"wp_actionscheduler_actions"> | number
    args?: StringNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | string | null
    schedule?: StringNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | string | null
    group_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_actions"> | bigint | number
    attempts?: IntWithAggregatesFilter<"wp_actionscheduler_actions"> | number
    last_attempt_gmt?: DateTimeNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string | null
    last_attempt_local?: DateTimeNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | Date | string | null
    claim_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_actions"> | bigint | number
    extended_args?: StringNullableWithAggregatesFilter<"wp_actionscheduler_actions"> | string | null
  }

  export type wp_actionscheduler_claimsWhereInput = {
    AND?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    OR?: wp_actionscheduler_claimsWhereInput[]
    NOT?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    claim_id?: BigIntFilter<"wp_actionscheduler_claims"> | bigint | number
    date_created_gmt?: DateTimeNullableFilter<"wp_actionscheduler_claims"> | Date | string | null
  }

  export type wp_actionscheduler_claimsOrderByWithRelationInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrderInput | SortOrder
  }

  export type wp_actionscheduler_claimsWhereUniqueInput = Prisma.AtLeast<{
    claim_id?: bigint | number
    AND?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    OR?: wp_actionscheduler_claimsWhereInput[]
    NOT?: wp_actionscheduler_claimsWhereInput | wp_actionscheduler_claimsWhereInput[]
    date_created_gmt?: DateTimeNullableFilter<"wp_actionscheduler_claims"> | Date | string | null
  }, "claim_id">

  export type wp_actionscheduler_claimsOrderByWithAggregationInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrderInput | SortOrder
    _count?: wp_actionscheduler_claimsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_claimsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_claimsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_claimsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_claimsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_claimsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput | wp_actionscheduler_claimsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_claimsScalarWhereWithAggregatesInput | wp_actionscheduler_claimsScalarWhereWithAggregatesInput[]
    claim_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_claims"> | bigint | number
    date_created_gmt?: DateTimeNullableWithAggregatesFilter<"wp_actionscheduler_claims"> | Date | string | null
  }

  export type wp_actionscheduler_groupsWhereInput = {
    AND?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    OR?: wp_actionscheduler_groupsWhereInput[]
    NOT?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    group_id?: BigIntFilter<"wp_actionscheduler_groups"> | bigint | number
    slug?: StringFilter<"wp_actionscheduler_groups"> | string
  }

  export type wp_actionscheduler_groupsOrderByWithRelationInput = {
    group_id?: SortOrder
    slug?: SortOrder
    _relevance?: wp_actionscheduler_groupsOrderByRelevanceInput
  }

  export type wp_actionscheduler_groupsWhereUniqueInput = Prisma.AtLeast<{
    group_id?: bigint | number
    AND?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    OR?: wp_actionscheduler_groupsWhereInput[]
    NOT?: wp_actionscheduler_groupsWhereInput | wp_actionscheduler_groupsWhereInput[]
    slug?: StringFilter<"wp_actionscheduler_groups"> | string
  }, "group_id">

  export type wp_actionscheduler_groupsOrderByWithAggregationInput = {
    group_id?: SortOrder
    slug?: SortOrder
    _count?: wp_actionscheduler_groupsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_groupsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_groupsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_groupsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_groupsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_groupsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput | wp_actionscheduler_groupsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_groupsScalarWhereWithAggregatesInput | wp_actionscheduler_groupsScalarWhereWithAggregatesInput[]
    group_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_groups"> | bigint | number
    slug?: StringWithAggregatesFilter<"wp_actionscheduler_groups"> | string
  }

  export type wp_actionscheduler_logsWhereInput = {
    AND?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    OR?: wp_actionscheduler_logsWhereInput[]
    NOT?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    log_id?: BigIntFilter<"wp_actionscheduler_logs"> | bigint | number
    action_id?: BigIntFilter<"wp_actionscheduler_logs"> | bigint | number
    message?: StringFilter<"wp_actionscheduler_logs"> | string
    log_date_gmt?: DateTimeNullableFilter<"wp_actionscheduler_logs"> | Date | string | null
    log_date_local?: DateTimeNullableFilter<"wp_actionscheduler_logs"> | Date | string | null
  }

  export type wp_actionscheduler_logsOrderByWithRelationInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrderInput | SortOrder
    log_date_local?: SortOrderInput | SortOrder
    _relevance?: wp_actionscheduler_logsOrderByRelevanceInput
  }

  export type wp_actionscheduler_logsWhereUniqueInput = Prisma.AtLeast<{
    log_id?: bigint | number
    AND?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    OR?: wp_actionscheduler_logsWhereInput[]
    NOT?: wp_actionscheduler_logsWhereInput | wp_actionscheduler_logsWhereInput[]
    action_id?: BigIntFilter<"wp_actionscheduler_logs"> | bigint | number
    message?: StringFilter<"wp_actionscheduler_logs"> | string
    log_date_gmt?: DateTimeNullableFilter<"wp_actionscheduler_logs"> | Date | string | null
    log_date_local?: DateTimeNullableFilter<"wp_actionscheduler_logs"> | Date | string | null
  }, "log_id">

  export type wp_actionscheduler_logsOrderByWithAggregationInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrderInput | SortOrder
    log_date_local?: SortOrderInput | SortOrder
    _count?: wp_actionscheduler_logsCountOrderByAggregateInput
    _avg?: wp_actionscheduler_logsAvgOrderByAggregateInput
    _max?: wp_actionscheduler_logsMaxOrderByAggregateInput
    _min?: wp_actionscheduler_logsMinOrderByAggregateInput
    _sum?: wp_actionscheduler_logsSumOrderByAggregateInput
  }

  export type wp_actionscheduler_logsScalarWhereWithAggregatesInput = {
    AND?: wp_actionscheduler_logsScalarWhereWithAggregatesInput | wp_actionscheduler_logsScalarWhereWithAggregatesInput[]
    OR?: wp_actionscheduler_logsScalarWhereWithAggregatesInput[]
    NOT?: wp_actionscheduler_logsScalarWhereWithAggregatesInput | wp_actionscheduler_logsScalarWhereWithAggregatesInput[]
    log_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_logs"> | bigint | number
    action_id?: BigIntWithAggregatesFilter<"wp_actionscheduler_logs"> | bigint | number
    message?: StringWithAggregatesFilter<"wp_actionscheduler_logs"> | string
    log_date_gmt?: DateTimeNullableWithAggregatesFilter<"wp_actionscheduler_logs"> | Date | string | null
    log_date_local?: DateTimeNullableWithAggregatesFilter<"wp_actionscheduler_logs"> | Date | string | null
  }

  export type wp_addonlibrary_addonsWhereInput = {
    AND?: wp_addonlibrary_addonsWhereInput | wp_addonlibrary_addonsWhereInput[]
    OR?: wp_addonlibrary_addonsWhereInput[]
    NOT?: wp_addonlibrary_addonsWhereInput | wp_addonlibrary_addonsWhereInput[]
    id?: BigIntFilter<"wp_addonlibrary_addons"> | bigint | number
    title?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    name?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    alias?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    addontype?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    description?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    ordering?: IntFilter<"wp_addonlibrary_addons"> | number
    templates?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    config?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    catid?: IntNullableFilter<"wp_addonlibrary_addons"> | number | null
    is_active?: IntNullableFilter<"wp_addonlibrary_addons"> | number | null
    test_slot1?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    test_slot2?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    test_slot3?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
  }

  export type wp_addonlibrary_addonsOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    alias?: SortOrderInput | SortOrder
    addontype?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    ordering?: SortOrder
    templates?: SortOrderInput | SortOrder
    config?: SortOrderInput | SortOrder
    catid?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    test_slot1?: SortOrderInput | SortOrder
    test_slot2?: SortOrderInput | SortOrder
    test_slot3?: SortOrderInput | SortOrder
    _relevance?: wp_addonlibrary_addonsOrderByRelevanceInput
  }

  export type wp_addonlibrary_addonsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_addonlibrary_addonsWhereInput | wp_addonlibrary_addonsWhereInput[]
    OR?: wp_addonlibrary_addonsWhereInput[]
    NOT?: wp_addonlibrary_addonsWhereInput | wp_addonlibrary_addonsWhereInput[]
    title?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    name?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    alias?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    addontype?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    description?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    ordering?: IntFilter<"wp_addonlibrary_addons"> | number
    templates?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    config?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    catid?: IntNullableFilter<"wp_addonlibrary_addons"> | number | null
    is_active?: IntNullableFilter<"wp_addonlibrary_addons"> | number | null
    test_slot1?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    test_slot2?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
    test_slot3?: StringNullableFilter<"wp_addonlibrary_addons"> | string | null
  }, "id">

  export type wp_addonlibrary_addonsOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    alias?: SortOrderInput | SortOrder
    addontype?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    ordering?: SortOrder
    templates?: SortOrderInput | SortOrder
    config?: SortOrderInput | SortOrder
    catid?: SortOrderInput | SortOrder
    is_active?: SortOrderInput | SortOrder
    test_slot1?: SortOrderInput | SortOrder
    test_slot2?: SortOrderInput | SortOrder
    test_slot3?: SortOrderInput | SortOrder
    _count?: wp_addonlibrary_addonsCountOrderByAggregateInput
    _avg?: wp_addonlibrary_addonsAvgOrderByAggregateInput
    _max?: wp_addonlibrary_addonsMaxOrderByAggregateInput
    _min?: wp_addonlibrary_addonsMinOrderByAggregateInput
    _sum?: wp_addonlibrary_addonsSumOrderByAggregateInput
  }

  export type wp_addonlibrary_addonsScalarWhereWithAggregatesInput = {
    AND?: wp_addonlibrary_addonsScalarWhereWithAggregatesInput | wp_addonlibrary_addonsScalarWhereWithAggregatesInput[]
    OR?: wp_addonlibrary_addonsScalarWhereWithAggregatesInput[]
    NOT?: wp_addonlibrary_addonsScalarWhereWithAggregatesInput | wp_addonlibrary_addonsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_addonlibrary_addons"> | bigint | number
    title?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    name?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    alias?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    addontype?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    description?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    ordering?: IntWithAggregatesFilter<"wp_addonlibrary_addons"> | number
    templates?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    config?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    catid?: IntNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | number | null
    is_active?: IntNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | number | null
    test_slot1?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    test_slot2?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
    test_slot3?: StringNullableWithAggregatesFilter<"wp_addonlibrary_addons"> | string | null
  }

  export type wp_addonlibrary_categoriesWhereInput = {
    AND?: wp_addonlibrary_categoriesWhereInput | wp_addonlibrary_categoriesWhereInput[]
    OR?: wp_addonlibrary_categoriesWhereInput[]
    NOT?: wp_addonlibrary_categoriesWhereInput | wp_addonlibrary_categoriesWhereInput[]
    id?: IntFilter<"wp_addonlibrary_categories"> | number
    title?: StringFilter<"wp_addonlibrary_categories"> | string
    alias?: StringNullableFilter<"wp_addonlibrary_categories"> | string | null
    ordering?: IntFilter<"wp_addonlibrary_categories"> | number
    params?: StringFilter<"wp_addonlibrary_categories"> | string
    type?: StringNullableFilter<"wp_addonlibrary_categories"> | string | null
    parent_id?: IntNullableFilter<"wp_addonlibrary_categories"> | number | null
  }

  export type wp_addonlibrary_categoriesOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    alias?: SortOrderInput | SortOrder
    ordering?: SortOrder
    params?: SortOrder
    type?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    _relevance?: wp_addonlibrary_categoriesOrderByRelevanceInput
  }

  export type wp_addonlibrary_categoriesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_addonlibrary_categoriesWhereInput | wp_addonlibrary_categoriesWhereInput[]
    OR?: wp_addonlibrary_categoriesWhereInput[]
    NOT?: wp_addonlibrary_categoriesWhereInput | wp_addonlibrary_categoriesWhereInput[]
    title?: StringFilter<"wp_addonlibrary_categories"> | string
    alias?: StringNullableFilter<"wp_addonlibrary_categories"> | string | null
    ordering?: IntFilter<"wp_addonlibrary_categories"> | number
    params?: StringFilter<"wp_addonlibrary_categories"> | string
    type?: StringNullableFilter<"wp_addonlibrary_categories"> | string | null
    parent_id?: IntNullableFilter<"wp_addonlibrary_categories"> | number | null
  }, "id">

  export type wp_addonlibrary_categoriesOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    alias?: SortOrderInput | SortOrder
    ordering?: SortOrder
    params?: SortOrder
    type?: SortOrderInput | SortOrder
    parent_id?: SortOrderInput | SortOrder
    _count?: wp_addonlibrary_categoriesCountOrderByAggregateInput
    _avg?: wp_addonlibrary_categoriesAvgOrderByAggregateInput
    _max?: wp_addonlibrary_categoriesMaxOrderByAggregateInput
    _min?: wp_addonlibrary_categoriesMinOrderByAggregateInput
    _sum?: wp_addonlibrary_categoriesSumOrderByAggregateInput
  }

  export type wp_addonlibrary_categoriesScalarWhereWithAggregatesInput = {
    AND?: wp_addonlibrary_categoriesScalarWhereWithAggregatesInput | wp_addonlibrary_categoriesScalarWhereWithAggregatesInput[]
    OR?: wp_addonlibrary_categoriesScalarWhereWithAggregatesInput[]
    NOT?: wp_addonlibrary_categoriesScalarWhereWithAggregatesInput | wp_addonlibrary_categoriesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_addonlibrary_categories"> | number
    title?: StringWithAggregatesFilter<"wp_addonlibrary_categories"> | string
    alias?: StringNullableWithAggregatesFilter<"wp_addonlibrary_categories"> | string | null
    ordering?: IntWithAggregatesFilter<"wp_addonlibrary_categories"> | number
    params?: StringWithAggregatesFilter<"wp_addonlibrary_categories"> | string
    type?: StringNullableWithAggregatesFilter<"wp_addonlibrary_categories"> | string | null
    parent_id?: IntNullableWithAggregatesFilter<"wp_addonlibrary_categories"> | number | null
  }

  export type wp_ai_stats_eventsWhereInput = {
    AND?: wp_ai_stats_eventsWhereInput | wp_ai_stats_eventsWhereInput[]
    OR?: wp_ai_stats_eventsWhereInput[]
    NOT?: wp_ai_stats_eventsWhereInput | wp_ai_stats_eventsWhereInput[]
    id?: IntFilter<"wp_ai_stats_events"> | number
    dtime?: DateTimeFilter<"wp_ai_stats_events"> | Date | string
    track_url?: StringFilter<"wp_ai_stats_events"> | string
    track_title?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    track_artist?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    playlist_id?: IntNullableFilter<"wp_ai_stats_events"> | number | null
    referrer_url?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    client_fingerprint?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    event_name?: StringFilter<"wp_ai_stats_events"> | string
    event_data?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    is_stream?: IntFilter<"wp_ai_stats_events"> | number
    processed?: IntFilter<"wp_ai_stats_events"> | number
  }

  export type wp_ai_stats_eventsOrderByWithRelationInput = {
    id?: SortOrder
    dtime?: SortOrder
    track_url?: SortOrder
    track_title?: SortOrderInput | SortOrder
    track_artist?: SortOrderInput | SortOrder
    playlist_id?: SortOrderInput | SortOrder
    referrer_url?: SortOrderInput | SortOrder
    client_fingerprint?: SortOrderInput | SortOrder
    event_name?: SortOrder
    event_data?: SortOrderInput | SortOrder
    is_stream?: SortOrder
    processed?: SortOrder
    _relevance?: wp_ai_stats_eventsOrderByRelevanceInput
  }

  export type wp_ai_stats_eventsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_ai_stats_eventsWhereInput | wp_ai_stats_eventsWhereInput[]
    OR?: wp_ai_stats_eventsWhereInput[]
    NOT?: wp_ai_stats_eventsWhereInput | wp_ai_stats_eventsWhereInput[]
    dtime?: DateTimeFilter<"wp_ai_stats_events"> | Date | string
    track_url?: StringFilter<"wp_ai_stats_events"> | string
    track_title?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    track_artist?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    playlist_id?: IntNullableFilter<"wp_ai_stats_events"> | number | null
    referrer_url?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    client_fingerprint?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    event_name?: StringFilter<"wp_ai_stats_events"> | string
    event_data?: StringNullableFilter<"wp_ai_stats_events"> | string | null
    is_stream?: IntFilter<"wp_ai_stats_events"> | number
    processed?: IntFilter<"wp_ai_stats_events"> | number
  }, "id">

  export type wp_ai_stats_eventsOrderByWithAggregationInput = {
    id?: SortOrder
    dtime?: SortOrder
    track_url?: SortOrder
    track_title?: SortOrderInput | SortOrder
    track_artist?: SortOrderInput | SortOrder
    playlist_id?: SortOrderInput | SortOrder
    referrer_url?: SortOrderInput | SortOrder
    client_fingerprint?: SortOrderInput | SortOrder
    event_name?: SortOrder
    event_data?: SortOrderInput | SortOrder
    is_stream?: SortOrder
    processed?: SortOrder
    _count?: wp_ai_stats_eventsCountOrderByAggregateInput
    _avg?: wp_ai_stats_eventsAvgOrderByAggregateInput
    _max?: wp_ai_stats_eventsMaxOrderByAggregateInput
    _min?: wp_ai_stats_eventsMinOrderByAggregateInput
    _sum?: wp_ai_stats_eventsSumOrderByAggregateInput
  }

  export type wp_ai_stats_eventsScalarWhereWithAggregatesInput = {
    AND?: wp_ai_stats_eventsScalarWhereWithAggregatesInput | wp_ai_stats_eventsScalarWhereWithAggregatesInput[]
    OR?: wp_ai_stats_eventsScalarWhereWithAggregatesInput[]
    NOT?: wp_ai_stats_eventsScalarWhereWithAggregatesInput | wp_ai_stats_eventsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_ai_stats_events"> | number
    dtime?: DateTimeWithAggregatesFilter<"wp_ai_stats_events"> | Date | string
    track_url?: StringWithAggregatesFilter<"wp_ai_stats_events"> | string
    track_title?: StringNullableWithAggregatesFilter<"wp_ai_stats_events"> | string | null
    track_artist?: StringNullableWithAggregatesFilter<"wp_ai_stats_events"> | string | null
    playlist_id?: IntNullableWithAggregatesFilter<"wp_ai_stats_events"> | number | null
    referrer_url?: StringNullableWithAggregatesFilter<"wp_ai_stats_events"> | string | null
    client_fingerprint?: StringNullableWithAggregatesFilter<"wp_ai_stats_events"> | string | null
    event_name?: StringWithAggregatesFilter<"wp_ai_stats_events"> | string
    event_data?: StringNullableWithAggregatesFilter<"wp_ai_stats_events"> | string | null
    is_stream?: IntWithAggregatesFilter<"wp_ai_stats_events"> | number
    processed?: IntWithAggregatesFilter<"wp_ai_stats_events"> | number
  }

  export type wp_ai_stats_playWhereInput = {
    AND?: wp_ai_stats_playWhereInput | wp_ai_stats_playWhereInput[]
    OR?: wp_ai_stats_playWhereInput[]
    NOT?: wp_ai_stats_playWhereInput | wp_ai_stats_playWhereInput[]
    id?: IntFilter<"wp_ai_stats_play"> | number
    track_id?: IntFilter<"wp_ai_stats_play"> | number
    dtime?: DateTimeFilter<"wp_ai_stats_play"> | Date | string
    playlist_id?: IntNullableFilter<"wp_ai_stats_play"> | number | null
    referrer_url?: StringNullableFilter<"wp_ai_stats_play"> | string | null
    client_fingerprint?: StringNullableFilter<"wp_ai_stats_play"> | string | null
    duration?: IntNullableFilter<"wp_ai_stats_play"> | number | null
    seeks?: IntFilter<"wp_ai_stats_play"> | number
    pauses?: IntFilter<"wp_ai_stats_play"> | number
    skipped?: IntFilter<"wp_ai_stats_play"> | number
    downloaded?: IntFilter<"wp_ai_stats_play"> | number
  }

  export type wp_ai_stats_playOrderByWithRelationInput = {
    id?: SortOrder
    track_id?: SortOrder
    dtime?: SortOrder
    playlist_id?: SortOrderInput | SortOrder
    referrer_url?: SortOrderInput | SortOrder
    client_fingerprint?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    seeks?: SortOrder
    pauses?: SortOrder
    skipped?: SortOrder
    downloaded?: SortOrder
    _relevance?: wp_ai_stats_playOrderByRelevanceInput
  }

  export type wp_ai_stats_playWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_ai_stats_playWhereInput | wp_ai_stats_playWhereInput[]
    OR?: wp_ai_stats_playWhereInput[]
    NOT?: wp_ai_stats_playWhereInput | wp_ai_stats_playWhereInput[]
    track_id?: IntFilter<"wp_ai_stats_play"> | number
    dtime?: DateTimeFilter<"wp_ai_stats_play"> | Date | string
    playlist_id?: IntNullableFilter<"wp_ai_stats_play"> | number | null
    referrer_url?: StringNullableFilter<"wp_ai_stats_play"> | string | null
    client_fingerprint?: StringNullableFilter<"wp_ai_stats_play"> | string | null
    duration?: IntNullableFilter<"wp_ai_stats_play"> | number | null
    seeks?: IntFilter<"wp_ai_stats_play"> | number
    pauses?: IntFilter<"wp_ai_stats_play"> | number
    skipped?: IntFilter<"wp_ai_stats_play"> | number
    downloaded?: IntFilter<"wp_ai_stats_play"> | number
  }, "id">

  export type wp_ai_stats_playOrderByWithAggregationInput = {
    id?: SortOrder
    track_id?: SortOrder
    dtime?: SortOrder
    playlist_id?: SortOrderInput | SortOrder
    referrer_url?: SortOrderInput | SortOrder
    client_fingerprint?: SortOrderInput | SortOrder
    duration?: SortOrderInput | SortOrder
    seeks?: SortOrder
    pauses?: SortOrder
    skipped?: SortOrder
    downloaded?: SortOrder
    _count?: wp_ai_stats_playCountOrderByAggregateInput
    _avg?: wp_ai_stats_playAvgOrderByAggregateInput
    _max?: wp_ai_stats_playMaxOrderByAggregateInput
    _min?: wp_ai_stats_playMinOrderByAggregateInput
    _sum?: wp_ai_stats_playSumOrderByAggregateInput
  }

  export type wp_ai_stats_playScalarWhereWithAggregatesInput = {
    AND?: wp_ai_stats_playScalarWhereWithAggregatesInput | wp_ai_stats_playScalarWhereWithAggregatesInput[]
    OR?: wp_ai_stats_playScalarWhereWithAggregatesInput[]
    NOT?: wp_ai_stats_playScalarWhereWithAggregatesInput | wp_ai_stats_playScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_ai_stats_play"> | number
    track_id?: IntWithAggregatesFilter<"wp_ai_stats_play"> | number
    dtime?: DateTimeWithAggregatesFilter<"wp_ai_stats_play"> | Date | string
    playlist_id?: IntNullableWithAggregatesFilter<"wp_ai_stats_play"> | number | null
    referrer_url?: StringNullableWithAggregatesFilter<"wp_ai_stats_play"> | string | null
    client_fingerprint?: StringNullableWithAggregatesFilter<"wp_ai_stats_play"> | string | null
    duration?: IntNullableWithAggregatesFilter<"wp_ai_stats_play"> | number | null
    seeks?: IntWithAggregatesFilter<"wp_ai_stats_play"> | number
    pauses?: IntWithAggregatesFilter<"wp_ai_stats_play"> | number
    skipped?: IntWithAggregatesFilter<"wp_ai_stats_play"> | number
    downloaded?: IntWithAggregatesFilter<"wp_ai_stats_play"> | number
  }

  export type wp_ai_stats_trackWhereInput = {
    AND?: wp_ai_stats_trackWhereInput | wp_ai_stats_trackWhereInput[]
    OR?: wp_ai_stats_trackWhereInput[]
    NOT?: wp_ai_stats_trackWhereInput | wp_ai_stats_trackWhereInput[]
    id?: IntFilter<"wp_ai_stats_track"> | number
    url?: StringFilter<"wp_ai_stats_track"> | string
    url_hash?: StringFilter<"wp_ai_stats_track"> | string
    title?: StringNullableFilter<"wp_ai_stats_track"> | string | null
    artist?: StringNullableFilter<"wp_ai_stats_track"> | string | null
    duration_mean?: FloatNullableFilter<"wp_ai_stats_track"> | number | null
    duration_count?: IntNullableFilter<"wp_ai_stats_track"> | number | null
    is_stream?: IntFilter<"wp_ai_stats_track"> | number
  }

  export type wp_ai_stats_trackOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    url_hash?: SortOrder
    title?: SortOrderInput | SortOrder
    artist?: SortOrderInput | SortOrder
    duration_mean?: SortOrderInput | SortOrder
    duration_count?: SortOrderInput | SortOrder
    is_stream?: SortOrder
    _relevance?: wp_ai_stats_trackOrderByRelevanceInput
  }

  export type wp_ai_stats_trackWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    url_hash?: string
    AND?: wp_ai_stats_trackWhereInput | wp_ai_stats_trackWhereInput[]
    OR?: wp_ai_stats_trackWhereInput[]
    NOT?: wp_ai_stats_trackWhereInput | wp_ai_stats_trackWhereInput[]
    url?: StringFilter<"wp_ai_stats_track"> | string
    title?: StringNullableFilter<"wp_ai_stats_track"> | string | null
    artist?: StringNullableFilter<"wp_ai_stats_track"> | string | null
    duration_mean?: FloatNullableFilter<"wp_ai_stats_track"> | number | null
    duration_count?: IntNullableFilter<"wp_ai_stats_track"> | number | null
    is_stream?: IntFilter<"wp_ai_stats_track"> | number
  }, "id" | "url_hash">

  export type wp_ai_stats_trackOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    url_hash?: SortOrder
    title?: SortOrderInput | SortOrder
    artist?: SortOrderInput | SortOrder
    duration_mean?: SortOrderInput | SortOrder
    duration_count?: SortOrderInput | SortOrder
    is_stream?: SortOrder
    _count?: wp_ai_stats_trackCountOrderByAggregateInput
    _avg?: wp_ai_stats_trackAvgOrderByAggregateInput
    _max?: wp_ai_stats_trackMaxOrderByAggregateInput
    _min?: wp_ai_stats_trackMinOrderByAggregateInput
    _sum?: wp_ai_stats_trackSumOrderByAggregateInput
  }

  export type wp_ai_stats_trackScalarWhereWithAggregatesInput = {
    AND?: wp_ai_stats_trackScalarWhereWithAggregatesInput | wp_ai_stats_trackScalarWhereWithAggregatesInput[]
    OR?: wp_ai_stats_trackScalarWhereWithAggregatesInput[]
    NOT?: wp_ai_stats_trackScalarWhereWithAggregatesInput | wp_ai_stats_trackScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_ai_stats_track"> | number
    url?: StringWithAggregatesFilter<"wp_ai_stats_track"> | string
    url_hash?: StringWithAggregatesFilter<"wp_ai_stats_track"> | string
    title?: StringNullableWithAggregatesFilter<"wp_ai_stats_track"> | string | null
    artist?: StringNullableWithAggregatesFilter<"wp_ai_stats_track"> | string | null
    duration_mean?: FloatNullableWithAggregatesFilter<"wp_ai_stats_track"> | number | null
    duration_count?: IntNullableWithAggregatesFilter<"wp_ai_stats_track"> | number | null
    is_stream?: IntWithAggregatesFilter<"wp_ai_stats_track"> | number
  }

  export type wp_audier_elementor_cacheWhereInput = {
    AND?: wp_audier_elementor_cacheWhereInput | wp_audier_elementor_cacheWhereInput[]
    OR?: wp_audier_elementor_cacheWhereInput[]
    NOT?: wp_audier_elementor_cacheWhereInput | wp_audier_elementor_cacheWhereInput[]
    id?: IntFilter<"wp_audier_elementor_cache"> | number
    key?: StringFilter<"wp_audier_elementor_cache"> | string
    data?: StringFilter<"wp_audier_elementor_cache"> | string
    updated_at?: IntFilter<"wp_audier_elementor_cache"> | number
  }

  export type wp_audier_elementor_cacheOrderByWithRelationInput = {
    id?: SortOrder
    key?: SortOrder
    data?: SortOrder
    updated_at?: SortOrder
    _relevance?: wp_audier_elementor_cacheOrderByRelevanceInput
  }

  export type wp_audier_elementor_cacheWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_audier_elementor_cacheWhereInput | wp_audier_elementor_cacheWhereInput[]
    OR?: wp_audier_elementor_cacheWhereInput[]
    NOT?: wp_audier_elementor_cacheWhereInput | wp_audier_elementor_cacheWhereInput[]
    key?: StringFilter<"wp_audier_elementor_cache"> | string
    data?: StringFilter<"wp_audier_elementor_cache"> | string
    updated_at?: IntFilter<"wp_audier_elementor_cache"> | number
  }, "id">

  export type wp_audier_elementor_cacheOrderByWithAggregationInput = {
    id?: SortOrder
    key?: SortOrder
    data?: SortOrder
    updated_at?: SortOrder
    _count?: wp_audier_elementor_cacheCountOrderByAggregateInput
    _avg?: wp_audier_elementor_cacheAvgOrderByAggregateInput
    _max?: wp_audier_elementor_cacheMaxOrderByAggregateInput
    _min?: wp_audier_elementor_cacheMinOrderByAggregateInput
    _sum?: wp_audier_elementor_cacheSumOrderByAggregateInput
  }

  export type wp_audier_elementor_cacheScalarWhereWithAggregatesInput = {
    AND?: wp_audier_elementor_cacheScalarWhereWithAggregatesInput | wp_audier_elementor_cacheScalarWhereWithAggregatesInput[]
    OR?: wp_audier_elementor_cacheScalarWhereWithAggregatesInput[]
    NOT?: wp_audier_elementor_cacheScalarWhereWithAggregatesInput | wp_audier_elementor_cacheScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_audier_elementor_cache"> | number
    key?: StringWithAggregatesFilter<"wp_audier_elementor_cache"> | string
    data?: StringWithAggregatesFilter<"wp_audier_elementor_cache"> | string
    updated_at?: IntWithAggregatesFilter<"wp_audier_elementor_cache"> | number
  }

  export type wp_commentmetaWhereInput = {
    AND?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    OR?: wp_commentmetaWhereInput[]
    NOT?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    meta_id?: BigIntFilter<"wp_commentmeta"> | bigint | number
    comment_id?: BigIntFilter<"wp_commentmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_commentmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_commentmeta"> | string | null
  }

  export type wp_commentmetaOrderByWithRelationInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_commentmetaOrderByRelevanceInput
  }

  export type wp_commentmetaWhereUniqueInput = Prisma.AtLeast<{
    meta_id?: bigint | number
    AND?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    OR?: wp_commentmetaWhereInput[]
    NOT?: wp_commentmetaWhereInput | wp_commentmetaWhereInput[]
    comment_id?: BigIntFilter<"wp_commentmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_commentmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_commentmeta"> | string | null
  }, "meta_id">

  export type wp_commentmetaOrderByWithAggregationInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_commentmetaCountOrderByAggregateInput
    _avg?: wp_commentmetaAvgOrderByAggregateInput
    _max?: wp_commentmetaMaxOrderByAggregateInput
    _min?: wp_commentmetaMinOrderByAggregateInput
    _sum?: wp_commentmetaSumOrderByAggregateInput
  }

  export type wp_commentmetaScalarWhereWithAggregatesInput = {
    AND?: wp_commentmetaScalarWhereWithAggregatesInput | wp_commentmetaScalarWhereWithAggregatesInput[]
    OR?: wp_commentmetaScalarWhereWithAggregatesInput[]
    NOT?: wp_commentmetaScalarWhereWithAggregatesInput | wp_commentmetaScalarWhereWithAggregatesInput[]
    meta_id?: BigIntWithAggregatesFilter<"wp_commentmeta"> | bigint | number
    comment_id?: BigIntWithAggregatesFilter<"wp_commentmeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_commentmeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_commentmeta"> | string | null
  }

  export type wp_commentsWhereInput = {
    AND?: wp_commentsWhereInput | wp_commentsWhereInput[]
    OR?: wp_commentsWhereInput[]
    NOT?: wp_commentsWhereInput | wp_commentsWhereInput[]
    comment_ID?: BigIntFilter<"wp_comments"> | bigint | number
    comment_post_ID?: BigIntFilter<"wp_comments"> | bigint | number
    comment_author?: StringFilter<"wp_comments"> | string
    comment_author_email?: StringFilter<"wp_comments"> | string
    comment_author_url?: StringFilter<"wp_comments"> | string
    comment_author_IP?: StringFilter<"wp_comments"> | string
    comment_date?: DateTimeFilter<"wp_comments"> | Date | string
    comment_date_gmt?: DateTimeFilter<"wp_comments"> | Date | string
    comment_content?: StringFilter<"wp_comments"> | string
    comment_karma?: IntFilter<"wp_comments"> | number
    comment_approved?: StringFilter<"wp_comments"> | string
    comment_agent?: StringFilter<"wp_comments"> | string
    comment_type?: StringFilter<"wp_comments"> | string
    comment_parent?: BigIntFilter<"wp_comments"> | bigint | number
    user_id?: BigIntFilter<"wp_comments"> | bigint | number
  }

  export type wp_commentsOrderByWithRelationInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
    _relevance?: wp_commentsOrderByRelevanceInput
  }

  export type wp_commentsWhereUniqueInput = Prisma.AtLeast<{
    comment_ID?: bigint | number
    AND?: wp_commentsWhereInput | wp_commentsWhereInput[]
    OR?: wp_commentsWhereInput[]
    NOT?: wp_commentsWhereInput | wp_commentsWhereInput[]
    comment_post_ID?: BigIntFilter<"wp_comments"> | bigint | number
    comment_author?: StringFilter<"wp_comments"> | string
    comment_author_email?: StringFilter<"wp_comments"> | string
    comment_author_url?: StringFilter<"wp_comments"> | string
    comment_author_IP?: StringFilter<"wp_comments"> | string
    comment_date?: DateTimeFilter<"wp_comments"> | Date | string
    comment_date_gmt?: DateTimeFilter<"wp_comments"> | Date | string
    comment_content?: StringFilter<"wp_comments"> | string
    comment_karma?: IntFilter<"wp_comments"> | number
    comment_approved?: StringFilter<"wp_comments"> | string
    comment_agent?: StringFilter<"wp_comments"> | string
    comment_type?: StringFilter<"wp_comments"> | string
    comment_parent?: BigIntFilter<"wp_comments"> | bigint | number
    user_id?: BigIntFilter<"wp_comments"> | bigint | number
  }, "comment_ID">

  export type wp_commentsOrderByWithAggregationInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
    _count?: wp_commentsCountOrderByAggregateInput
    _avg?: wp_commentsAvgOrderByAggregateInput
    _max?: wp_commentsMaxOrderByAggregateInput
    _min?: wp_commentsMinOrderByAggregateInput
    _sum?: wp_commentsSumOrderByAggregateInput
  }

  export type wp_commentsScalarWhereWithAggregatesInput = {
    AND?: wp_commentsScalarWhereWithAggregatesInput | wp_commentsScalarWhereWithAggregatesInput[]
    OR?: wp_commentsScalarWhereWithAggregatesInput[]
    NOT?: wp_commentsScalarWhereWithAggregatesInput | wp_commentsScalarWhereWithAggregatesInput[]
    comment_ID?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
    comment_post_ID?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
    comment_author?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_author_email?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_author_url?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_author_IP?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_date?: DateTimeWithAggregatesFilter<"wp_comments"> | Date | string
    comment_date_gmt?: DateTimeWithAggregatesFilter<"wp_comments"> | Date | string
    comment_content?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_karma?: IntWithAggregatesFilter<"wp_comments"> | number
    comment_approved?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_agent?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_type?: StringWithAggregatesFilter<"wp_comments"> | string
    comment_parent?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"wp_comments"> | bigint | number
  }

  export type wp_cpmp_playerWhereInput = {
    AND?: wp_cpmp_playerWhereInput | wp_cpmp_playerWhereInput[]
    OR?: wp_cpmp_playerWhereInput[]
    NOT?: wp_cpmp_playerWhereInput | wp_cpmp_playerWhereInput[]
    id?: IntFilter<"wp_cpmp_player"> | number
    player_name?: StringFilter<"wp_cpmp_player"> | string
    config?: StringNullableFilter<"wp_cpmp_player"> | string | null
    playlist?: StringNullableFilter<"wp_cpmp_player"> | string | null
  }

  export type wp_cpmp_playerOrderByWithRelationInput = {
    id?: SortOrder
    player_name?: SortOrder
    config?: SortOrderInput | SortOrder
    playlist?: SortOrderInput | SortOrder
    _relevance?: wp_cpmp_playerOrderByRelevanceInput
  }

  export type wp_cpmp_playerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_cpmp_playerWhereInput | wp_cpmp_playerWhereInput[]
    OR?: wp_cpmp_playerWhereInput[]
    NOT?: wp_cpmp_playerWhereInput | wp_cpmp_playerWhereInput[]
    player_name?: StringFilter<"wp_cpmp_player"> | string
    config?: StringNullableFilter<"wp_cpmp_player"> | string | null
    playlist?: StringNullableFilter<"wp_cpmp_player"> | string | null
  }, "id">

  export type wp_cpmp_playerOrderByWithAggregationInput = {
    id?: SortOrder
    player_name?: SortOrder
    config?: SortOrderInput | SortOrder
    playlist?: SortOrderInput | SortOrder
    _count?: wp_cpmp_playerCountOrderByAggregateInput
    _avg?: wp_cpmp_playerAvgOrderByAggregateInput
    _max?: wp_cpmp_playerMaxOrderByAggregateInput
    _min?: wp_cpmp_playerMinOrderByAggregateInput
    _sum?: wp_cpmp_playerSumOrderByAggregateInput
  }

  export type wp_cpmp_playerScalarWhereWithAggregatesInput = {
    AND?: wp_cpmp_playerScalarWhereWithAggregatesInput | wp_cpmp_playerScalarWhereWithAggregatesInput[]
    OR?: wp_cpmp_playerScalarWhereWithAggregatesInput[]
    NOT?: wp_cpmp_playerScalarWhereWithAggregatesInput | wp_cpmp_playerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_cpmp_player"> | number
    player_name?: StringWithAggregatesFilter<"wp_cpmp_player"> | string
    config?: StringNullableWithAggregatesFilter<"wp_cpmp_player"> | string | null
    playlist?: StringNullableWithAggregatesFilter<"wp_cpmp_player"> | string | null
  }

  export type wp_e_eventsWhereInput = {
    AND?: wp_e_eventsWhereInput | wp_e_eventsWhereInput[]
    OR?: wp_e_eventsWhereInput[]
    NOT?: wp_e_eventsWhereInput | wp_e_eventsWhereInput[]
    id?: BigIntFilter<"wp_e_events"> | bigint | number
    event_data?: StringNullableFilter<"wp_e_events"> | string | null
    created_at?: DateTimeFilter<"wp_e_events"> | Date | string
  }

  export type wp_e_eventsOrderByWithRelationInput = {
    id?: SortOrder
    event_data?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _relevance?: wp_e_eventsOrderByRelevanceInput
  }

  export type wp_e_eventsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_e_eventsWhereInput | wp_e_eventsWhereInput[]
    OR?: wp_e_eventsWhereInput[]
    NOT?: wp_e_eventsWhereInput | wp_e_eventsWhereInput[]
    event_data?: StringNullableFilter<"wp_e_events"> | string | null
    created_at?: DateTimeFilter<"wp_e_events"> | Date | string
  }, "id">

  export type wp_e_eventsOrderByWithAggregationInput = {
    id?: SortOrder
    event_data?: SortOrderInput | SortOrder
    created_at?: SortOrder
    _count?: wp_e_eventsCountOrderByAggregateInput
    _avg?: wp_e_eventsAvgOrderByAggregateInput
    _max?: wp_e_eventsMaxOrderByAggregateInput
    _min?: wp_e_eventsMinOrderByAggregateInput
    _sum?: wp_e_eventsSumOrderByAggregateInput
  }

  export type wp_e_eventsScalarWhereWithAggregatesInput = {
    AND?: wp_e_eventsScalarWhereWithAggregatesInput | wp_e_eventsScalarWhereWithAggregatesInput[]
    OR?: wp_e_eventsScalarWhereWithAggregatesInput[]
    NOT?: wp_e_eventsScalarWhereWithAggregatesInput | wp_e_eventsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_e_events"> | bigint | number
    event_data?: StringNullableWithAggregatesFilter<"wp_e_events"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"wp_e_events"> | Date | string
  }

  export type wp_e_notesWhereInput = {
    AND?: wp_e_notesWhereInput | wp_e_notesWhereInput[]
    OR?: wp_e_notesWhereInput[]
    NOT?: wp_e_notesWhereInput | wp_e_notesWhereInput[]
    id?: BigIntFilter<"wp_e_notes"> | bigint | number
    route_url?: StringNullableFilter<"wp_e_notes"> | string | null
    route_title?: StringNullableFilter<"wp_e_notes"> | string | null
    route_post_id?: BigIntNullableFilter<"wp_e_notes"> | bigint | number | null
    post_id?: BigIntNullableFilter<"wp_e_notes"> | bigint | number | null
    element_id?: StringNullableFilter<"wp_e_notes"> | string | null
    parent_id?: BigIntFilter<"wp_e_notes"> | bigint | number
    author_id?: BigIntNullableFilter<"wp_e_notes"> | bigint | number | null
    author_display_name?: StringNullableFilter<"wp_e_notes"> | string | null
    status?: StringFilter<"wp_e_notes"> | string
    position?: StringNullableFilter<"wp_e_notes"> | string | null
    content?: StringNullableFilter<"wp_e_notes"> | string | null
    is_resolved?: BoolFilter<"wp_e_notes"> | boolean
    is_public?: BoolFilter<"wp_e_notes"> | boolean
    last_activity_at?: DateTimeNullableFilter<"wp_e_notes"> | Date | string | null
    created_at?: DateTimeFilter<"wp_e_notes"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_notes"> | Date | string
  }

  export type wp_e_notesOrderByWithRelationInput = {
    id?: SortOrder
    route_url?: SortOrderInput | SortOrder
    route_title?: SortOrderInput | SortOrder
    route_post_id?: SortOrderInput | SortOrder
    post_id?: SortOrderInput | SortOrder
    element_id?: SortOrderInput | SortOrder
    parent_id?: SortOrder
    author_id?: SortOrderInput | SortOrder
    author_display_name?: SortOrderInput | SortOrder
    status?: SortOrder
    position?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    is_resolved?: SortOrder
    is_public?: SortOrder
    last_activity_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: wp_e_notesOrderByRelevanceInput
  }

  export type wp_e_notesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_e_notesWhereInput | wp_e_notesWhereInput[]
    OR?: wp_e_notesWhereInput[]
    NOT?: wp_e_notesWhereInput | wp_e_notesWhereInput[]
    route_url?: StringNullableFilter<"wp_e_notes"> | string | null
    route_title?: StringNullableFilter<"wp_e_notes"> | string | null
    route_post_id?: BigIntNullableFilter<"wp_e_notes"> | bigint | number | null
    post_id?: BigIntNullableFilter<"wp_e_notes"> | bigint | number | null
    element_id?: StringNullableFilter<"wp_e_notes"> | string | null
    parent_id?: BigIntFilter<"wp_e_notes"> | bigint | number
    author_id?: BigIntNullableFilter<"wp_e_notes"> | bigint | number | null
    author_display_name?: StringNullableFilter<"wp_e_notes"> | string | null
    status?: StringFilter<"wp_e_notes"> | string
    position?: StringNullableFilter<"wp_e_notes"> | string | null
    content?: StringNullableFilter<"wp_e_notes"> | string | null
    is_resolved?: BoolFilter<"wp_e_notes"> | boolean
    is_public?: BoolFilter<"wp_e_notes"> | boolean
    last_activity_at?: DateTimeNullableFilter<"wp_e_notes"> | Date | string | null
    created_at?: DateTimeFilter<"wp_e_notes"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_notes"> | Date | string
  }, "id">

  export type wp_e_notesOrderByWithAggregationInput = {
    id?: SortOrder
    route_url?: SortOrderInput | SortOrder
    route_title?: SortOrderInput | SortOrder
    route_post_id?: SortOrderInput | SortOrder
    post_id?: SortOrderInput | SortOrder
    element_id?: SortOrderInput | SortOrder
    parent_id?: SortOrder
    author_id?: SortOrderInput | SortOrder
    author_display_name?: SortOrderInput | SortOrder
    status?: SortOrder
    position?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    is_resolved?: SortOrder
    is_public?: SortOrder
    last_activity_at?: SortOrderInput | SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: wp_e_notesCountOrderByAggregateInput
    _avg?: wp_e_notesAvgOrderByAggregateInput
    _max?: wp_e_notesMaxOrderByAggregateInput
    _min?: wp_e_notesMinOrderByAggregateInput
    _sum?: wp_e_notesSumOrderByAggregateInput
  }

  export type wp_e_notesScalarWhereWithAggregatesInput = {
    AND?: wp_e_notesScalarWhereWithAggregatesInput | wp_e_notesScalarWhereWithAggregatesInput[]
    OR?: wp_e_notesScalarWhereWithAggregatesInput[]
    NOT?: wp_e_notesScalarWhereWithAggregatesInput | wp_e_notesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_e_notes"> | bigint | number
    route_url?: StringNullableWithAggregatesFilter<"wp_e_notes"> | string | null
    route_title?: StringNullableWithAggregatesFilter<"wp_e_notes"> | string | null
    route_post_id?: BigIntNullableWithAggregatesFilter<"wp_e_notes"> | bigint | number | null
    post_id?: BigIntNullableWithAggregatesFilter<"wp_e_notes"> | bigint | number | null
    element_id?: StringNullableWithAggregatesFilter<"wp_e_notes"> | string | null
    parent_id?: BigIntWithAggregatesFilter<"wp_e_notes"> | bigint | number
    author_id?: BigIntNullableWithAggregatesFilter<"wp_e_notes"> | bigint | number | null
    author_display_name?: StringNullableWithAggregatesFilter<"wp_e_notes"> | string | null
    status?: StringWithAggregatesFilter<"wp_e_notes"> | string
    position?: StringNullableWithAggregatesFilter<"wp_e_notes"> | string | null
    content?: StringNullableWithAggregatesFilter<"wp_e_notes"> | string | null
    is_resolved?: BoolWithAggregatesFilter<"wp_e_notes"> | boolean
    is_public?: BoolWithAggregatesFilter<"wp_e_notes"> | boolean
    last_activity_at?: DateTimeNullableWithAggregatesFilter<"wp_e_notes"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"wp_e_notes"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"wp_e_notes"> | Date | string
  }

  export type wp_e_notes_users_relationsWhereInput = {
    AND?: wp_e_notes_users_relationsWhereInput | wp_e_notes_users_relationsWhereInput[]
    OR?: wp_e_notes_users_relationsWhereInput[]
    NOT?: wp_e_notes_users_relationsWhereInput | wp_e_notes_users_relationsWhereInput[]
    id?: BigIntFilter<"wp_e_notes_users_relations"> | bigint | number
    type?: StringFilter<"wp_e_notes_users_relations"> | string
    note_id?: BigIntFilter<"wp_e_notes_users_relations"> | bigint | number
    user_id?: BigIntFilter<"wp_e_notes_users_relations"> | bigint | number
    created_at?: DateTimeFilter<"wp_e_notes_users_relations"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_notes_users_relations"> | Date | string
  }

  export type wp_e_notes_users_relationsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    note_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: wp_e_notes_users_relationsOrderByRelevanceInput
  }

  export type wp_e_notes_users_relationsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_e_notes_users_relationsWhereInput | wp_e_notes_users_relationsWhereInput[]
    OR?: wp_e_notes_users_relationsWhereInput[]
    NOT?: wp_e_notes_users_relationsWhereInput | wp_e_notes_users_relationsWhereInput[]
    type?: StringFilter<"wp_e_notes_users_relations"> | string
    note_id?: BigIntFilter<"wp_e_notes_users_relations"> | bigint | number
    user_id?: BigIntFilter<"wp_e_notes_users_relations"> | bigint | number
    created_at?: DateTimeFilter<"wp_e_notes_users_relations"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_notes_users_relations"> | Date | string
  }, "id">

  export type wp_e_notes_users_relationsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    note_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: wp_e_notes_users_relationsCountOrderByAggregateInput
    _avg?: wp_e_notes_users_relationsAvgOrderByAggregateInput
    _max?: wp_e_notes_users_relationsMaxOrderByAggregateInput
    _min?: wp_e_notes_users_relationsMinOrderByAggregateInput
    _sum?: wp_e_notes_users_relationsSumOrderByAggregateInput
  }

  export type wp_e_notes_users_relationsScalarWhereWithAggregatesInput = {
    AND?: wp_e_notes_users_relationsScalarWhereWithAggregatesInput | wp_e_notes_users_relationsScalarWhereWithAggregatesInput[]
    OR?: wp_e_notes_users_relationsScalarWhereWithAggregatesInput[]
    NOT?: wp_e_notes_users_relationsScalarWhereWithAggregatesInput | wp_e_notes_users_relationsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_e_notes_users_relations"> | bigint | number
    type?: StringWithAggregatesFilter<"wp_e_notes_users_relations"> | string
    note_id?: BigIntWithAggregatesFilter<"wp_e_notes_users_relations"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"wp_e_notes_users_relations"> | bigint | number
    created_at?: DateTimeWithAggregatesFilter<"wp_e_notes_users_relations"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"wp_e_notes_users_relations"> | Date | string
  }

  export type wp_e_submissionsWhereInput = {
    AND?: wp_e_submissionsWhereInput | wp_e_submissionsWhereInput[]
    OR?: wp_e_submissionsWhereInput[]
    NOT?: wp_e_submissionsWhereInput | wp_e_submissionsWhereInput[]
    id?: BigIntFilter<"wp_e_submissions"> | bigint | number
    type?: StringNullableFilter<"wp_e_submissions"> | string | null
    hash_id?: StringFilter<"wp_e_submissions"> | string
    main_meta_id?: BigIntFilter<"wp_e_submissions"> | bigint | number
    post_id?: BigIntFilter<"wp_e_submissions"> | bigint | number
    referer?: StringFilter<"wp_e_submissions"> | string
    referer_title?: StringNullableFilter<"wp_e_submissions"> | string | null
    element_id?: StringFilter<"wp_e_submissions"> | string
    form_name?: StringFilter<"wp_e_submissions"> | string
    campaign_id?: BigIntFilter<"wp_e_submissions"> | bigint | number
    user_id?: BigIntNullableFilter<"wp_e_submissions"> | bigint | number | null
    user_ip?: StringFilter<"wp_e_submissions"> | string
    user_agent?: StringFilter<"wp_e_submissions"> | string
    actions_count?: IntNullableFilter<"wp_e_submissions"> | number | null
    actions_succeeded_count?: IntNullableFilter<"wp_e_submissions"> | number | null
    status?: StringFilter<"wp_e_submissions"> | string
    is_read?: BoolFilter<"wp_e_submissions"> | boolean
    meta?: StringNullableFilter<"wp_e_submissions"> | string | null
    created_at_gmt?: DateTimeFilter<"wp_e_submissions"> | Date | string
    updated_at_gmt?: DateTimeFilter<"wp_e_submissions"> | Date | string
    created_at?: DateTimeFilter<"wp_e_submissions"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_submissions"> | Date | string
  }

  export type wp_e_submissionsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrderInput | SortOrder
    hash_id?: SortOrder
    main_meta_id?: SortOrder
    post_id?: SortOrder
    referer?: SortOrder
    referer_title?: SortOrderInput | SortOrder
    element_id?: SortOrder
    form_name?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    user_ip?: SortOrder
    user_agent?: SortOrder
    actions_count?: SortOrderInput | SortOrder
    actions_succeeded_count?: SortOrderInput | SortOrder
    status?: SortOrder
    is_read?: SortOrder
    meta?: SortOrderInput | SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: wp_e_submissionsOrderByRelevanceInput
  }

  export type wp_e_submissionsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    hash_id?: string
    AND?: wp_e_submissionsWhereInput | wp_e_submissionsWhereInput[]
    OR?: wp_e_submissionsWhereInput[]
    NOT?: wp_e_submissionsWhereInput | wp_e_submissionsWhereInput[]
    type?: StringNullableFilter<"wp_e_submissions"> | string | null
    main_meta_id?: BigIntFilter<"wp_e_submissions"> | bigint | number
    post_id?: BigIntFilter<"wp_e_submissions"> | bigint | number
    referer?: StringFilter<"wp_e_submissions"> | string
    referer_title?: StringNullableFilter<"wp_e_submissions"> | string | null
    element_id?: StringFilter<"wp_e_submissions"> | string
    form_name?: StringFilter<"wp_e_submissions"> | string
    campaign_id?: BigIntFilter<"wp_e_submissions"> | bigint | number
    user_id?: BigIntNullableFilter<"wp_e_submissions"> | bigint | number | null
    user_ip?: StringFilter<"wp_e_submissions"> | string
    user_agent?: StringFilter<"wp_e_submissions"> | string
    actions_count?: IntNullableFilter<"wp_e_submissions"> | number | null
    actions_succeeded_count?: IntNullableFilter<"wp_e_submissions"> | number | null
    status?: StringFilter<"wp_e_submissions"> | string
    is_read?: BoolFilter<"wp_e_submissions"> | boolean
    meta?: StringNullableFilter<"wp_e_submissions"> | string | null
    created_at_gmt?: DateTimeFilter<"wp_e_submissions"> | Date | string
    updated_at_gmt?: DateTimeFilter<"wp_e_submissions"> | Date | string
    created_at?: DateTimeFilter<"wp_e_submissions"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_submissions"> | Date | string
  }, "id" | "hash_id">

  export type wp_e_submissionsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrderInput | SortOrder
    hash_id?: SortOrder
    main_meta_id?: SortOrder
    post_id?: SortOrder
    referer?: SortOrder
    referer_title?: SortOrderInput | SortOrder
    element_id?: SortOrder
    form_name?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    user_ip?: SortOrder
    user_agent?: SortOrder
    actions_count?: SortOrderInput | SortOrder
    actions_succeeded_count?: SortOrderInput | SortOrder
    status?: SortOrder
    is_read?: SortOrder
    meta?: SortOrderInput | SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: wp_e_submissionsCountOrderByAggregateInput
    _avg?: wp_e_submissionsAvgOrderByAggregateInput
    _max?: wp_e_submissionsMaxOrderByAggregateInput
    _min?: wp_e_submissionsMinOrderByAggregateInput
    _sum?: wp_e_submissionsSumOrderByAggregateInput
  }

  export type wp_e_submissionsScalarWhereWithAggregatesInput = {
    AND?: wp_e_submissionsScalarWhereWithAggregatesInput | wp_e_submissionsScalarWhereWithAggregatesInput[]
    OR?: wp_e_submissionsScalarWhereWithAggregatesInput[]
    NOT?: wp_e_submissionsScalarWhereWithAggregatesInput | wp_e_submissionsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_e_submissions"> | bigint | number
    type?: StringNullableWithAggregatesFilter<"wp_e_submissions"> | string | null
    hash_id?: StringWithAggregatesFilter<"wp_e_submissions"> | string
    main_meta_id?: BigIntWithAggregatesFilter<"wp_e_submissions"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"wp_e_submissions"> | bigint | number
    referer?: StringWithAggregatesFilter<"wp_e_submissions"> | string
    referer_title?: StringNullableWithAggregatesFilter<"wp_e_submissions"> | string | null
    element_id?: StringWithAggregatesFilter<"wp_e_submissions"> | string
    form_name?: StringWithAggregatesFilter<"wp_e_submissions"> | string
    campaign_id?: BigIntWithAggregatesFilter<"wp_e_submissions"> | bigint | number
    user_id?: BigIntNullableWithAggregatesFilter<"wp_e_submissions"> | bigint | number | null
    user_ip?: StringWithAggregatesFilter<"wp_e_submissions"> | string
    user_agent?: StringWithAggregatesFilter<"wp_e_submissions"> | string
    actions_count?: IntNullableWithAggregatesFilter<"wp_e_submissions"> | number | null
    actions_succeeded_count?: IntNullableWithAggregatesFilter<"wp_e_submissions"> | number | null
    status?: StringWithAggregatesFilter<"wp_e_submissions"> | string
    is_read?: BoolWithAggregatesFilter<"wp_e_submissions"> | boolean
    meta?: StringNullableWithAggregatesFilter<"wp_e_submissions"> | string | null
    created_at_gmt?: DateTimeWithAggregatesFilter<"wp_e_submissions"> | Date | string
    updated_at_gmt?: DateTimeWithAggregatesFilter<"wp_e_submissions"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"wp_e_submissions"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"wp_e_submissions"> | Date | string
  }

  export type wp_e_submissions_actions_logWhereInput = {
    AND?: wp_e_submissions_actions_logWhereInput | wp_e_submissions_actions_logWhereInput[]
    OR?: wp_e_submissions_actions_logWhereInput[]
    NOT?: wp_e_submissions_actions_logWhereInput | wp_e_submissions_actions_logWhereInput[]
    id?: BigIntFilter<"wp_e_submissions_actions_log"> | bigint | number
    submission_id?: BigIntFilter<"wp_e_submissions_actions_log"> | bigint | number
    action_name?: StringFilter<"wp_e_submissions_actions_log"> | string
    action_label?: StringNullableFilter<"wp_e_submissions_actions_log"> | string | null
    status?: StringFilter<"wp_e_submissions_actions_log"> | string
    log?: StringNullableFilter<"wp_e_submissions_actions_log"> | string | null
    created_at_gmt?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
    updated_at_gmt?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
    created_at?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
  }

  export type wp_e_submissions_actions_logOrderByWithRelationInput = {
    id?: SortOrder
    submission_id?: SortOrder
    action_name?: SortOrder
    action_label?: SortOrderInput | SortOrder
    status?: SortOrder
    log?: SortOrderInput | SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _relevance?: wp_e_submissions_actions_logOrderByRelevanceInput
  }

  export type wp_e_submissions_actions_logWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_e_submissions_actions_logWhereInput | wp_e_submissions_actions_logWhereInput[]
    OR?: wp_e_submissions_actions_logWhereInput[]
    NOT?: wp_e_submissions_actions_logWhereInput | wp_e_submissions_actions_logWhereInput[]
    submission_id?: BigIntFilter<"wp_e_submissions_actions_log"> | bigint | number
    action_name?: StringFilter<"wp_e_submissions_actions_log"> | string
    action_label?: StringNullableFilter<"wp_e_submissions_actions_log"> | string | null
    status?: StringFilter<"wp_e_submissions_actions_log"> | string
    log?: StringNullableFilter<"wp_e_submissions_actions_log"> | string | null
    created_at_gmt?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
    updated_at_gmt?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
    created_at?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
    updated_at?: DateTimeFilter<"wp_e_submissions_actions_log"> | Date | string
  }, "id">

  export type wp_e_submissions_actions_logOrderByWithAggregationInput = {
    id?: SortOrder
    submission_id?: SortOrder
    action_name?: SortOrder
    action_label?: SortOrderInput | SortOrder
    status?: SortOrder
    log?: SortOrderInput | SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: wp_e_submissions_actions_logCountOrderByAggregateInput
    _avg?: wp_e_submissions_actions_logAvgOrderByAggregateInput
    _max?: wp_e_submissions_actions_logMaxOrderByAggregateInput
    _min?: wp_e_submissions_actions_logMinOrderByAggregateInput
    _sum?: wp_e_submissions_actions_logSumOrderByAggregateInput
  }

  export type wp_e_submissions_actions_logScalarWhereWithAggregatesInput = {
    AND?: wp_e_submissions_actions_logScalarWhereWithAggregatesInput | wp_e_submissions_actions_logScalarWhereWithAggregatesInput[]
    OR?: wp_e_submissions_actions_logScalarWhereWithAggregatesInput[]
    NOT?: wp_e_submissions_actions_logScalarWhereWithAggregatesInput | wp_e_submissions_actions_logScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_e_submissions_actions_log"> | bigint | number
    submission_id?: BigIntWithAggregatesFilter<"wp_e_submissions_actions_log"> | bigint | number
    action_name?: StringWithAggregatesFilter<"wp_e_submissions_actions_log"> | string
    action_label?: StringNullableWithAggregatesFilter<"wp_e_submissions_actions_log"> | string | null
    status?: StringWithAggregatesFilter<"wp_e_submissions_actions_log"> | string
    log?: StringNullableWithAggregatesFilter<"wp_e_submissions_actions_log"> | string | null
    created_at_gmt?: DateTimeWithAggregatesFilter<"wp_e_submissions_actions_log"> | Date | string
    updated_at_gmt?: DateTimeWithAggregatesFilter<"wp_e_submissions_actions_log"> | Date | string
    created_at?: DateTimeWithAggregatesFilter<"wp_e_submissions_actions_log"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"wp_e_submissions_actions_log"> | Date | string
  }

  export type wp_e_submissions_valuesWhereInput = {
    AND?: wp_e_submissions_valuesWhereInput | wp_e_submissions_valuesWhereInput[]
    OR?: wp_e_submissions_valuesWhereInput[]
    NOT?: wp_e_submissions_valuesWhereInput | wp_e_submissions_valuesWhereInput[]
    id?: BigIntFilter<"wp_e_submissions_values"> | bigint | number
    submission_id?: BigIntFilter<"wp_e_submissions_values"> | bigint | number
    key?: StringNullableFilter<"wp_e_submissions_values"> | string | null
    value?: StringNullableFilter<"wp_e_submissions_values"> | string | null
  }

  export type wp_e_submissions_valuesOrderByWithRelationInput = {
    id?: SortOrder
    submission_id?: SortOrder
    key?: SortOrderInput | SortOrder
    value?: SortOrderInput | SortOrder
    _relevance?: wp_e_submissions_valuesOrderByRelevanceInput
  }

  export type wp_e_submissions_valuesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_e_submissions_valuesWhereInput | wp_e_submissions_valuesWhereInput[]
    OR?: wp_e_submissions_valuesWhereInput[]
    NOT?: wp_e_submissions_valuesWhereInput | wp_e_submissions_valuesWhereInput[]
    submission_id?: BigIntFilter<"wp_e_submissions_values"> | bigint | number
    key?: StringNullableFilter<"wp_e_submissions_values"> | string | null
    value?: StringNullableFilter<"wp_e_submissions_values"> | string | null
  }, "id">

  export type wp_e_submissions_valuesOrderByWithAggregationInput = {
    id?: SortOrder
    submission_id?: SortOrder
    key?: SortOrderInput | SortOrder
    value?: SortOrderInput | SortOrder
    _count?: wp_e_submissions_valuesCountOrderByAggregateInput
    _avg?: wp_e_submissions_valuesAvgOrderByAggregateInput
    _max?: wp_e_submissions_valuesMaxOrderByAggregateInput
    _min?: wp_e_submissions_valuesMinOrderByAggregateInput
    _sum?: wp_e_submissions_valuesSumOrderByAggregateInput
  }

  export type wp_e_submissions_valuesScalarWhereWithAggregatesInput = {
    AND?: wp_e_submissions_valuesScalarWhereWithAggregatesInput | wp_e_submissions_valuesScalarWhereWithAggregatesInput[]
    OR?: wp_e_submissions_valuesScalarWhereWithAggregatesInput[]
    NOT?: wp_e_submissions_valuesScalarWhereWithAggregatesInput | wp_e_submissions_valuesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_e_submissions_values"> | bigint | number
    submission_id?: BigIntWithAggregatesFilter<"wp_e_submissions_values"> | bigint | number
    key?: StringNullableWithAggregatesFilter<"wp_e_submissions_values"> | string | null
    value?: StringNullableWithAggregatesFilter<"wp_e_submissions_values"> | string | null
  }

  export type wp_jet_post_typesWhereInput = {
    AND?: wp_jet_post_typesWhereInput | wp_jet_post_typesWhereInput[]
    OR?: wp_jet_post_typesWhereInput[]
    NOT?: wp_jet_post_typesWhereInput | wp_jet_post_typesWhereInput[]
    id?: BigIntFilter<"wp_jet_post_types"> | bigint | number
    slug?: StringNullableFilter<"wp_jet_post_types"> | string | null
    status?: StringNullableFilter<"wp_jet_post_types"> | string | null
    labels?: StringNullableFilter<"wp_jet_post_types"> | string | null
    args?: StringNullableFilter<"wp_jet_post_types"> | string | null
    meta_fields?: StringNullableFilter<"wp_jet_post_types"> | string | null
  }

  export type wp_jet_post_typesOrderByWithRelationInput = {
    id?: SortOrder
    slug?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    args?: SortOrderInput | SortOrder
    meta_fields?: SortOrderInput | SortOrder
    _relevance?: wp_jet_post_typesOrderByRelevanceInput
  }

  export type wp_jet_post_typesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_jet_post_typesWhereInput | wp_jet_post_typesWhereInput[]
    OR?: wp_jet_post_typesWhereInput[]
    NOT?: wp_jet_post_typesWhereInput | wp_jet_post_typesWhereInput[]
    slug?: StringNullableFilter<"wp_jet_post_types"> | string | null
    status?: StringNullableFilter<"wp_jet_post_types"> | string | null
    labels?: StringNullableFilter<"wp_jet_post_types"> | string | null
    args?: StringNullableFilter<"wp_jet_post_types"> | string | null
    meta_fields?: StringNullableFilter<"wp_jet_post_types"> | string | null
  }, "id">

  export type wp_jet_post_typesOrderByWithAggregationInput = {
    id?: SortOrder
    slug?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    args?: SortOrderInput | SortOrder
    meta_fields?: SortOrderInput | SortOrder
    _count?: wp_jet_post_typesCountOrderByAggregateInput
    _avg?: wp_jet_post_typesAvgOrderByAggregateInput
    _max?: wp_jet_post_typesMaxOrderByAggregateInput
    _min?: wp_jet_post_typesMinOrderByAggregateInput
    _sum?: wp_jet_post_typesSumOrderByAggregateInput
  }

  export type wp_jet_post_typesScalarWhereWithAggregatesInput = {
    AND?: wp_jet_post_typesScalarWhereWithAggregatesInput | wp_jet_post_typesScalarWhereWithAggregatesInput[]
    OR?: wp_jet_post_typesScalarWhereWithAggregatesInput[]
    NOT?: wp_jet_post_typesScalarWhereWithAggregatesInput | wp_jet_post_typesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_jet_post_types"> | bigint | number
    slug?: StringNullableWithAggregatesFilter<"wp_jet_post_types"> | string | null
    status?: StringNullableWithAggregatesFilter<"wp_jet_post_types"> | string | null
    labels?: StringNullableWithAggregatesFilter<"wp_jet_post_types"> | string | null
    args?: StringNullableWithAggregatesFilter<"wp_jet_post_types"> | string | null
    meta_fields?: StringNullableWithAggregatesFilter<"wp_jet_post_types"> | string | null
  }

  export type wp_jet_smart_filters_indexerWhereInput = {
    AND?: wp_jet_smart_filters_indexerWhereInput | wp_jet_smart_filters_indexerWhereInput[]
    OR?: wp_jet_smart_filters_indexerWhereInput[]
    NOT?: wp_jet_smart_filters_indexerWhereInput | wp_jet_smart_filters_indexerWhereInput[]
    id?: IntFilter<"wp_jet_smart_filters_indexer"> | number
    type?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_id?: IntNullableFilter<"wp_jet_smart_filters_indexer"> | number | null
    item_query?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_key?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_value?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
  }

  export type wp_jet_smart_filters_indexerOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrderInput | SortOrder
    item_id?: SortOrderInput | SortOrder
    item_query?: SortOrderInput | SortOrder
    item_key?: SortOrderInput | SortOrder
    item_value?: SortOrderInput | SortOrder
    _relevance?: wp_jet_smart_filters_indexerOrderByRelevanceInput
  }

  export type wp_jet_smart_filters_indexerWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_jet_smart_filters_indexerWhereInput | wp_jet_smart_filters_indexerWhereInput[]
    OR?: wp_jet_smart_filters_indexerWhereInput[]
    NOT?: wp_jet_smart_filters_indexerWhereInput | wp_jet_smart_filters_indexerWhereInput[]
    type?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_id?: IntNullableFilter<"wp_jet_smart_filters_indexer"> | number | null
    item_query?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_key?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_value?: StringNullableFilter<"wp_jet_smart_filters_indexer"> | string | null
  }, "id">

  export type wp_jet_smart_filters_indexerOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrderInput | SortOrder
    item_id?: SortOrderInput | SortOrder
    item_query?: SortOrderInput | SortOrder
    item_key?: SortOrderInput | SortOrder
    item_value?: SortOrderInput | SortOrder
    _count?: wp_jet_smart_filters_indexerCountOrderByAggregateInput
    _avg?: wp_jet_smart_filters_indexerAvgOrderByAggregateInput
    _max?: wp_jet_smart_filters_indexerMaxOrderByAggregateInput
    _min?: wp_jet_smart_filters_indexerMinOrderByAggregateInput
    _sum?: wp_jet_smart_filters_indexerSumOrderByAggregateInput
  }

  export type wp_jet_smart_filters_indexerScalarWhereWithAggregatesInput = {
    AND?: wp_jet_smart_filters_indexerScalarWhereWithAggregatesInput | wp_jet_smart_filters_indexerScalarWhereWithAggregatesInput[]
    OR?: wp_jet_smart_filters_indexerScalarWhereWithAggregatesInput[]
    NOT?: wp_jet_smart_filters_indexerScalarWhereWithAggregatesInput | wp_jet_smart_filters_indexerScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_jet_smart_filters_indexer"> | number
    type?: StringNullableWithAggregatesFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_id?: IntNullableWithAggregatesFilter<"wp_jet_smart_filters_indexer"> | number | null
    item_query?: StringNullableWithAggregatesFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_key?: StringNullableWithAggregatesFilter<"wp_jet_smart_filters_indexer"> | string | null
    item_value?: StringNullableWithAggregatesFilter<"wp_jet_smart_filters_indexer"> | string | null
  }

  export type wp_jet_taxonomiesWhereInput = {
    AND?: wp_jet_taxonomiesWhereInput | wp_jet_taxonomiesWhereInput[]
    OR?: wp_jet_taxonomiesWhereInput[]
    NOT?: wp_jet_taxonomiesWhereInput | wp_jet_taxonomiesWhereInput[]
    id?: BigIntFilter<"wp_jet_taxonomies"> | bigint | number
    slug?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    object_type?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    status?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    labels?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    args?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    meta_fields?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
  }

  export type wp_jet_taxonomiesOrderByWithRelationInput = {
    id?: SortOrder
    slug?: SortOrderInput | SortOrder
    object_type?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    args?: SortOrderInput | SortOrder
    meta_fields?: SortOrderInput | SortOrder
    _relevance?: wp_jet_taxonomiesOrderByRelevanceInput
  }

  export type wp_jet_taxonomiesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_jet_taxonomiesWhereInput | wp_jet_taxonomiesWhereInput[]
    OR?: wp_jet_taxonomiesWhereInput[]
    NOT?: wp_jet_taxonomiesWhereInput | wp_jet_taxonomiesWhereInput[]
    slug?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    object_type?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    status?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    labels?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    args?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
    meta_fields?: StringNullableFilter<"wp_jet_taxonomies"> | string | null
  }, "id">

  export type wp_jet_taxonomiesOrderByWithAggregationInput = {
    id?: SortOrder
    slug?: SortOrderInput | SortOrder
    object_type?: SortOrderInput | SortOrder
    status?: SortOrderInput | SortOrder
    labels?: SortOrderInput | SortOrder
    args?: SortOrderInput | SortOrder
    meta_fields?: SortOrderInput | SortOrder
    _count?: wp_jet_taxonomiesCountOrderByAggregateInput
    _avg?: wp_jet_taxonomiesAvgOrderByAggregateInput
    _max?: wp_jet_taxonomiesMaxOrderByAggregateInput
    _min?: wp_jet_taxonomiesMinOrderByAggregateInput
    _sum?: wp_jet_taxonomiesSumOrderByAggregateInput
  }

  export type wp_jet_taxonomiesScalarWhereWithAggregatesInput = {
    AND?: wp_jet_taxonomiesScalarWhereWithAggregatesInput | wp_jet_taxonomiesScalarWhereWithAggregatesInput[]
    OR?: wp_jet_taxonomiesScalarWhereWithAggregatesInput[]
    NOT?: wp_jet_taxonomiesScalarWhereWithAggregatesInput | wp_jet_taxonomiesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_jet_taxonomies"> | bigint | number
    slug?: StringNullableWithAggregatesFilter<"wp_jet_taxonomies"> | string | null
    object_type?: StringNullableWithAggregatesFilter<"wp_jet_taxonomies"> | string | null
    status?: StringNullableWithAggregatesFilter<"wp_jet_taxonomies"> | string | null
    labels?: StringNullableWithAggregatesFilter<"wp_jet_taxonomies"> | string | null
    args?: StringNullableWithAggregatesFilter<"wp_jet_taxonomies"> | string | null
    meta_fields?: StringNullableWithAggregatesFilter<"wp_jet_taxonomies"> | string | null
  }

  export type wp_linksWhereInput = {
    AND?: wp_linksWhereInput | wp_linksWhereInput[]
    OR?: wp_linksWhereInput[]
    NOT?: wp_linksWhereInput | wp_linksWhereInput[]
    link_id?: BigIntFilter<"wp_links"> | bigint | number
    link_url?: StringFilter<"wp_links"> | string
    link_name?: StringFilter<"wp_links"> | string
    link_image?: StringFilter<"wp_links"> | string
    link_target?: StringFilter<"wp_links"> | string
    link_description?: StringFilter<"wp_links"> | string
    link_visible?: StringFilter<"wp_links"> | string
    link_owner?: BigIntFilter<"wp_links"> | bigint | number
    link_rating?: IntFilter<"wp_links"> | number
    link_updated?: DateTimeFilter<"wp_links"> | Date | string
    link_rel?: StringFilter<"wp_links"> | string
    link_notes?: StringFilter<"wp_links"> | string
    link_rss?: StringFilter<"wp_links"> | string
  }

  export type wp_linksOrderByWithRelationInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
    _relevance?: wp_linksOrderByRelevanceInput
  }

  export type wp_linksWhereUniqueInput = Prisma.AtLeast<{
    link_id?: bigint | number
    AND?: wp_linksWhereInput | wp_linksWhereInput[]
    OR?: wp_linksWhereInput[]
    NOT?: wp_linksWhereInput | wp_linksWhereInput[]
    link_url?: StringFilter<"wp_links"> | string
    link_name?: StringFilter<"wp_links"> | string
    link_image?: StringFilter<"wp_links"> | string
    link_target?: StringFilter<"wp_links"> | string
    link_description?: StringFilter<"wp_links"> | string
    link_visible?: StringFilter<"wp_links"> | string
    link_owner?: BigIntFilter<"wp_links"> | bigint | number
    link_rating?: IntFilter<"wp_links"> | number
    link_updated?: DateTimeFilter<"wp_links"> | Date | string
    link_rel?: StringFilter<"wp_links"> | string
    link_notes?: StringFilter<"wp_links"> | string
    link_rss?: StringFilter<"wp_links"> | string
  }, "link_id">

  export type wp_linksOrderByWithAggregationInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
    _count?: wp_linksCountOrderByAggregateInput
    _avg?: wp_linksAvgOrderByAggregateInput
    _max?: wp_linksMaxOrderByAggregateInput
    _min?: wp_linksMinOrderByAggregateInput
    _sum?: wp_linksSumOrderByAggregateInput
  }

  export type wp_linksScalarWhereWithAggregatesInput = {
    AND?: wp_linksScalarWhereWithAggregatesInput | wp_linksScalarWhereWithAggregatesInput[]
    OR?: wp_linksScalarWhereWithAggregatesInput[]
    NOT?: wp_linksScalarWhereWithAggregatesInput | wp_linksScalarWhereWithAggregatesInput[]
    link_id?: BigIntWithAggregatesFilter<"wp_links"> | bigint | number
    link_url?: StringWithAggregatesFilter<"wp_links"> | string
    link_name?: StringWithAggregatesFilter<"wp_links"> | string
    link_image?: StringWithAggregatesFilter<"wp_links"> | string
    link_target?: StringWithAggregatesFilter<"wp_links"> | string
    link_description?: StringWithAggregatesFilter<"wp_links"> | string
    link_visible?: StringWithAggregatesFilter<"wp_links"> | string
    link_owner?: BigIntWithAggregatesFilter<"wp_links"> | bigint | number
    link_rating?: IntWithAggregatesFilter<"wp_links"> | number
    link_updated?: DateTimeWithAggregatesFilter<"wp_links"> | Date | string
    link_rel?: StringWithAggregatesFilter<"wp_links"> | string
    link_notes?: StringWithAggregatesFilter<"wp_links"> | string
    link_rss?: StringWithAggregatesFilter<"wp_links"> | string
  }

  export type wp_optionsWhereInput = {
    AND?: wp_optionsWhereInput | wp_optionsWhereInput[]
    OR?: wp_optionsWhereInput[]
    NOT?: wp_optionsWhereInput | wp_optionsWhereInput[]
    option_id?: BigIntFilter<"wp_options"> | bigint | number
    option_name?: StringFilter<"wp_options"> | string
    option_value?: StringFilter<"wp_options"> | string
    autoload?: StringFilter<"wp_options"> | string
  }

  export type wp_optionsOrderByWithRelationInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
    _relevance?: wp_optionsOrderByRelevanceInput
  }

  export type wp_optionsWhereUniqueInput = Prisma.AtLeast<{
    option_id?: bigint | number
    option_name?: string
    AND?: wp_optionsWhereInput | wp_optionsWhereInput[]
    OR?: wp_optionsWhereInput[]
    NOT?: wp_optionsWhereInput | wp_optionsWhereInput[]
    option_value?: StringFilter<"wp_options"> | string
    autoload?: StringFilter<"wp_options"> | string
  }, "option_id" | "option_name">

  export type wp_optionsOrderByWithAggregationInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
    _count?: wp_optionsCountOrderByAggregateInput
    _avg?: wp_optionsAvgOrderByAggregateInput
    _max?: wp_optionsMaxOrderByAggregateInput
    _min?: wp_optionsMinOrderByAggregateInput
    _sum?: wp_optionsSumOrderByAggregateInput
  }

  export type wp_optionsScalarWhereWithAggregatesInput = {
    AND?: wp_optionsScalarWhereWithAggregatesInput | wp_optionsScalarWhereWithAggregatesInput[]
    OR?: wp_optionsScalarWhereWithAggregatesInput[]
    NOT?: wp_optionsScalarWhereWithAggregatesInput | wp_optionsScalarWhereWithAggregatesInput[]
    option_id?: BigIntWithAggregatesFilter<"wp_options"> | bigint | number
    option_name?: StringWithAggregatesFilter<"wp_options"> | string
    option_value?: StringWithAggregatesFilter<"wp_options"> | string
    autoload?: StringWithAggregatesFilter<"wp_options"> | string
  }

  export type wp_postmetaWhereInput = {
    AND?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    OR?: wp_postmetaWhereInput[]
    NOT?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    meta_id?: BigIntFilter<"wp_postmeta"> | bigint | number
    post_id?: BigIntFilter<"wp_postmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_postmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_postmeta"> | string | null
  }

  export type wp_postmetaOrderByWithRelationInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_postmetaOrderByRelevanceInput
  }

  export type wp_postmetaWhereUniqueInput = Prisma.AtLeast<{
    meta_id?: bigint | number
    AND?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    OR?: wp_postmetaWhereInput[]
    NOT?: wp_postmetaWhereInput | wp_postmetaWhereInput[]
    post_id?: BigIntFilter<"wp_postmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_postmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_postmeta"> | string | null
  }, "meta_id">

  export type wp_postmetaOrderByWithAggregationInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_postmetaCountOrderByAggregateInput
    _avg?: wp_postmetaAvgOrderByAggregateInput
    _max?: wp_postmetaMaxOrderByAggregateInput
    _min?: wp_postmetaMinOrderByAggregateInput
    _sum?: wp_postmetaSumOrderByAggregateInput
  }

  export type wp_postmetaScalarWhereWithAggregatesInput = {
    AND?: wp_postmetaScalarWhereWithAggregatesInput | wp_postmetaScalarWhereWithAggregatesInput[]
    OR?: wp_postmetaScalarWhereWithAggregatesInput[]
    NOT?: wp_postmetaScalarWhereWithAggregatesInput | wp_postmetaScalarWhereWithAggregatesInput[]
    meta_id?: BigIntWithAggregatesFilter<"wp_postmeta"> | bigint | number
    post_id?: BigIntWithAggregatesFilter<"wp_postmeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_postmeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_postmeta"> | string | null
  }

  export type wp_postsWhereInput = {
    AND?: wp_postsWhereInput | wp_postsWhereInput[]
    OR?: wp_postsWhereInput[]
    NOT?: wp_postsWhereInput | wp_postsWhereInput[]
    ID?: BigIntFilter<"wp_posts"> | bigint | number
    post_author?: BigIntFilter<"wp_posts"> | bigint | number
    post_date?: DateTimeFilter<"wp_posts"> | Date | string
    post_date_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content?: StringFilter<"wp_posts"> | string
    post_title?: StringFilter<"wp_posts"> | string
    post_excerpt?: StringFilter<"wp_posts"> | string
    post_status?: StringFilter<"wp_posts"> | string
    comment_status?: StringFilter<"wp_posts"> | string
    ping_status?: StringFilter<"wp_posts"> | string
    post_password?: StringFilter<"wp_posts"> | string
    post_name?: StringFilter<"wp_posts"> | string
    to_ping?: StringFilter<"wp_posts"> | string
    pinged?: StringFilter<"wp_posts"> | string
    post_modified?: DateTimeFilter<"wp_posts"> | Date | string
    post_modified_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content_filtered?: StringFilter<"wp_posts"> | string
    post_parent?: BigIntFilter<"wp_posts"> | bigint | number
    guid?: StringFilter<"wp_posts"> | string
    menu_order?: IntFilter<"wp_posts"> | number
    post_type?: StringFilter<"wp_posts"> | string
    post_mime_type?: StringFilter<"wp_posts"> | string
    comment_count?: BigIntFilter<"wp_posts"> | bigint | number
  }

  export type wp_postsOrderByWithRelationInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
    _relevance?: wp_postsOrderByRelevanceInput
  }

  export type wp_postsWhereUniqueInput = Prisma.AtLeast<{
    ID?: bigint | number
    AND?: wp_postsWhereInput | wp_postsWhereInput[]
    OR?: wp_postsWhereInput[]
    NOT?: wp_postsWhereInput | wp_postsWhereInput[]
    post_author?: BigIntFilter<"wp_posts"> | bigint | number
    post_date?: DateTimeFilter<"wp_posts"> | Date | string
    post_date_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content?: StringFilter<"wp_posts"> | string
    post_title?: StringFilter<"wp_posts"> | string
    post_excerpt?: StringFilter<"wp_posts"> | string
    post_status?: StringFilter<"wp_posts"> | string
    comment_status?: StringFilter<"wp_posts"> | string
    ping_status?: StringFilter<"wp_posts"> | string
    post_password?: StringFilter<"wp_posts"> | string
    post_name?: StringFilter<"wp_posts"> | string
    to_ping?: StringFilter<"wp_posts"> | string
    pinged?: StringFilter<"wp_posts"> | string
    post_modified?: DateTimeFilter<"wp_posts"> | Date | string
    post_modified_gmt?: DateTimeFilter<"wp_posts"> | Date | string
    post_content_filtered?: StringFilter<"wp_posts"> | string
    post_parent?: BigIntFilter<"wp_posts"> | bigint | number
    guid?: StringFilter<"wp_posts"> | string
    menu_order?: IntFilter<"wp_posts"> | number
    post_type?: StringFilter<"wp_posts"> | string
    post_mime_type?: StringFilter<"wp_posts"> | string
    comment_count?: BigIntFilter<"wp_posts"> | bigint | number
  }, "ID">

  export type wp_postsOrderByWithAggregationInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
    _count?: wp_postsCountOrderByAggregateInput
    _avg?: wp_postsAvgOrderByAggregateInput
    _max?: wp_postsMaxOrderByAggregateInput
    _min?: wp_postsMinOrderByAggregateInput
    _sum?: wp_postsSumOrderByAggregateInput
  }

  export type wp_postsScalarWhereWithAggregatesInput = {
    AND?: wp_postsScalarWhereWithAggregatesInput | wp_postsScalarWhereWithAggregatesInput[]
    OR?: wp_postsScalarWhereWithAggregatesInput[]
    NOT?: wp_postsScalarWhereWithAggregatesInput | wp_postsScalarWhereWithAggregatesInput[]
    ID?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
    post_author?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
    post_date?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_date_gmt?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_content?: StringWithAggregatesFilter<"wp_posts"> | string
    post_title?: StringWithAggregatesFilter<"wp_posts"> | string
    post_excerpt?: StringWithAggregatesFilter<"wp_posts"> | string
    post_status?: StringWithAggregatesFilter<"wp_posts"> | string
    comment_status?: StringWithAggregatesFilter<"wp_posts"> | string
    ping_status?: StringWithAggregatesFilter<"wp_posts"> | string
    post_password?: StringWithAggregatesFilter<"wp_posts"> | string
    post_name?: StringWithAggregatesFilter<"wp_posts"> | string
    to_ping?: StringWithAggregatesFilter<"wp_posts"> | string
    pinged?: StringWithAggregatesFilter<"wp_posts"> | string
    post_modified?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_modified_gmt?: DateTimeWithAggregatesFilter<"wp_posts"> | Date | string
    post_content_filtered?: StringWithAggregatesFilter<"wp_posts"> | string
    post_parent?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
    guid?: StringWithAggregatesFilter<"wp_posts"> | string
    menu_order?: IntWithAggregatesFilter<"wp_posts"> | number
    post_type?: StringWithAggregatesFilter<"wp_posts"> | string
    post_mime_type?: StringWithAggregatesFilter<"wp_posts"> | string
    comment_count?: BigIntWithAggregatesFilter<"wp_posts"> | bigint | number
  }

  export type wp_rank_math_internal_linksWhereInput = {
    AND?: wp_rank_math_internal_linksWhereInput | wp_rank_math_internal_linksWhereInput[]
    OR?: wp_rank_math_internal_linksWhereInput[]
    NOT?: wp_rank_math_internal_linksWhereInput | wp_rank_math_internal_linksWhereInput[]
    id?: BigIntFilter<"wp_rank_math_internal_links"> | bigint | number
    url?: StringFilter<"wp_rank_math_internal_links"> | string
    post_id?: BigIntFilter<"wp_rank_math_internal_links"> | bigint | number
    target_post_id?: BigIntFilter<"wp_rank_math_internal_links"> | bigint | number
    type?: StringFilter<"wp_rank_math_internal_links"> | string
  }

  export type wp_rank_math_internal_linksOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
    target_post_id?: SortOrder
    type?: SortOrder
    _relevance?: wp_rank_math_internal_linksOrderByRelevanceInput
  }

  export type wp_rank_math_internal_linksWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_rank_math_internal_linksWhereInput | wp_rank_math_internal_linksWhereInput[]
    OR?: wp_rank_math_internal_linksWhereInput[]
    NOT?: wp_rank_math_internal_linksWhereInput | wp_rank_math_internal_linksWhereInput[]
    url?: StringFilter<"wp_rank_math_internal_links"> | string
    post_id?: BigIntFilter<"wp_rank_math_internal_links"> | bigint | number
    target_post_id?: BigIntFilter<"wp_rank_math_internal_links"> | bigint | number
    type?: StringFilter<"wp_rank_math_internal_links"> | string
  }, "id">

  export type wp_rank_math_internal_linksOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
    target_post_id?: SortOrder
    type?: SortOrder
    _count?: wp_rank_math_internal_linksCountOrderByAggregateInput
    _avg?: wp_rank_math_internal_linksAvgOrderByAggregateInput
    _max?: wp_rank_math_internal_linksMaxOrderByAggregateInput
    _min?: wp_rank_math_internal_linksMinOrderByAggregateInput
    _sum?: wp_rank_math_internal_linksSumOrderByAggregateInput
  }

  export type wp_rank_math_internal_linksScalarWhereWithAggregatesInput = {
    AND?: wp_rank_math_internal_linksScalarWhereWithAggregatesInput | wp_rank_math_internal_linksScalarWhereWithAggregatesInput[]
    OR?: wp_rank_math_internal_linksScalarWhereWithAggregatesInput[]
    NOT?: wp_rank_math_internal_linksScalarWhereWithAggregatesInput | wp_rank_math_internal_linksScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_rank_math_internal_links"> | bigint | number
    url?: StringWithAggregatesFilter<"wp_rank_math_internal_links"> | string
    post_id?: BigIntWithAggregatesFilter<"wp_rank_math_internal_links"> | bigint | number
    target_post_id?: BigIntWithAggregatesFilter<"wp_rank_math_internal_links"> | bigint | number
    type?: StringWithAggregatesFilter<"wp_rank_math_internal_links"> | string
  }

  export type wp_rank_math_internal_metaWhereInput = {
    AND?: wp_rank_math_internal_metaWhereInput | wp_rank_math_internal_metaWhereInput[]
    OR?: wp_rank_math_internal_metaWhereInput[]
    NOT?: wp_rank_math_internal_metaWhereInput | wp_rank_math_internal_metaWhereInput[]
    object_id?: BigIntFilter<"wp_rank_math_internal_meta"> | bigint | number
    internal_link_count?: IntNullableFilter<"wp_rank_math_internal_meta"> | number | null
    external_link_count?: IntNullableFilter<"wp_rank_math_internal_meta"> | number | null
    incoming_link_count?: IntNullableFilter<"wp_rank_math_internal_meta"> | number | null
  }

  export type wp_rank_math_internal_metaOrderByWithRelationInput = {
    object_id?: SortOrder
    internal_link_count?: SortOrderInput | SortOrder
    external_link_count?: SortOrderInput | SortOrder
    incoming_link_count?: SortOrderInput | SortOrder
  }

  export type wp_rank_math_internal_metaWhereUniqueInput = Prisma.AtLeast<{
    object_id?: bigint | number
    AND?: wp_rank_math_internal_metaWhereInput | wp_rank_math_internal_metaWhereInput[]
    OR?: wp_rank_math_internal_metaWhereInput[]
    NOT?: wp_rank_math_internal_metaWhereInput | wp_rank_math_internal_metaWhereInput[]
    internal_link_count?: IntNullableFilter<"wp_rank_math_internal_meta"> | number | null
    external_link_count?: IntNullableFilter<"wp_rank_math_internal_meta"> | number | null
    incoming_link_count?: IntNullableFilter<"wp_rank_math_internal_meta"> | number | null
  }, "object_id">

  export type wp_rank_math_internal_metaOrderByWithAggregationInput = {
    object_id?: SortOrder
    internal_link_count?: SortOrderInput | SortOrder
    external_link_count?: SortOrderInput | SortOrder
    incoming_link_count?: SortOrderInput | SortOrder
    _count?: wp_rank_math_internal_metaCountOrderByAggregateInput
    _avg?: wp_rank_math_internal_metaAvgOrderByAggregateInput
    _max?: wp_rank_math_internal_metaMaxOrderByAggregateInput
    _min?: wp_rank_math_internal_metaMinOrderByAggregateInput
    _sum?: wp_rank_math_internal_metaSumOrderByAggregateInput
  }

  export type wp_rank_math_internal_metaScalarWhereWithAggregatesInput = {
    AND?: wp_rank_math_internal_metaScalarWhereWithAggregatesInput | wp_rank_math_internal_metaScalarWhereWithAggregatesInput[]
    OR?: wp_rank_math_internal_metaScalarWhereWithAggregatesInput[]
    NOT?: wp_rank_math_internal_metaScalarWhereWithAggregatesInput | wp_rank_math_internal_metaScalarWhereWithAggregatesInput[]
    object_id?: BigIntWithAggregatesFilter<"wp_rank_math_internal_meta"> | bigint | number
    internal_link_count?: IntNullableWithAggregatesFilter<"wp_rank_math_internal_meta"> | number | null
    external_link_count?: IntNullableWithAggregatesFilter<"wp_rank_math_internal_meta"> | number | null
    incoming_link_count?: IntNullableWithAggregatesFilter<"wp_rank_math_internal_meta"> | number | null
  }

  export type wp_rtl_rsm_logsWhereInput = {
    AND?: wp_rtl_rsm_logsWhereInput | wp_rtl_rsm_logsWhereInput[]
    OR?: wp_rtl_rsm_logsWhereInput[]
    NOT?: wp_rtl_rsm_logsWhereInput | wp_rtl_rsm_logsWhereInput[]
    id?: IntFilter<"wp_rtl_rsm_logs"> | number
    type?: StringFilter<"wp_rtl_rsm_logs"> | string
    section?: StringFilter<"wp_rtl_rsm_logs"> | string
    result?: StringFilter<"wp_rtl_rsm_logs"> | string
    date?: DateTimeFilter<"wp_rtl_rsm_logs"> | Date | string
  }

  export type wp_rtl_rsm_logsOrderByWithRelationInput = {
    id?: SortOrder
    type?: SortOrder
    section?: SortOrder
    result?: SortOrder
    date?: SortOrder
    _relevance?: wp_rtl_rsm_logsOrderByRelevanceInput
  }

  export type wp_rtl_rsm_logsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: wp_rtl_rsm_logsWhereInput | wp_rtl_rsm_logsWhereInput[]
    OR?: wp_rtl_rsm_logsWhereInput[]
    NOT?: wp_rtl_rsm_logsWhereInput | wp_rtl_rsm_logsWhereInput[]
    type?: StringFilter<"wp_rtl_rsm_logs"> | string
    section?: StringFilter<"wp_rtl_rsm_logs"> | string
    result?: StringFilter<"wp_rtl_rsm_logs"> | string
    date?: DateTimeFilter<"wp_rtl_rsm_logs"> | Date | string
  }, "id">

  export type wp_rtl_rsm_logsOrderByWithAggregationInput = {
    id?: SortOrder
    type?: SortOrder
    section?: SortOrder
    result?: SortOrder
    date?: SortOrder
    _count?: wp_rtl_rsm_logsCountOrderByAggregateInput
    _avg?: wp_rtl_rsm_logsAvgOrderByAggregateInput
    _max?: wp_rtl_rsm_logsMaxOrderByAggregateInput
    _min?: wp_rtl_rsm_logsMinOrderByAggregateInput
    _sum?: wp_rtl_rsm_logsSumOrderByAggregateInput
  }

  export type wp_rtl_rsm_logsScalarWhereWithAggregatesInput = {
    AND?: wp_rtl_rsm_logsScalarWhereWithAggregatesInput | wp_rtl_rsm_logsScalarWhereWithAggregatesInput[]
    OR?: wp_rtl_rsm_logsScalarWhereWithAggregatesInput[]
    NOT?: wp_rtl_rsm_logsScalarWhereWithAggregatesInput | wp_rtl_rsm_logsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"wp_rtl_rsm_logs"> | number
    type?: StringWithAggregatesFilter<"wp_rtl_rsm_logs"> | string
    section?: StringWithAggregatesFilter<"wp_rtl_rsm_logs"> | string
    result?: StringWithAggregatesFilter<"wp_rtl_rsm_logs"> | string
    date?: DateTimeWithAggregatesFilter<"wp_rtl_rsm_logs"> | Date | string
  }

  export type wp_soogname_metaWhereInput = {
    AND?: wp_soogname_metaWhereInput | wp_soogname_metaWhereInput[]
    OR?: wp_soogname_metaWhereInput[]
    NOT?: wp_soogname_metaWhereInput | wp_soogname_metaWhereInput[]
    meta_ID?: BigIntFilter<"wp_soogname_meta"> | bigint | number
    object_ID?: BigIntFilter<"wp_soogname_meta"> | bigint | number
  }

  export type wp_soogname_metaOrderByWithRelationInput = {
    meta_ID?: SortOrder
    object_ID?: SortOrder
  }

  export type wp_soogname_metaWhereUniqueInput = Prisma.AtLeast<{
    meta_ID_object_ID?: wp_soogname_metaMeta_IDObject_IDCompoundUniqueInput
    AND?: wp_soogname_metaWhereInput | wp_soogname_metaWhereInput[]
    OR?: wp_soogname_metaWhereInput[]
    NOT?: wp_soogname_metaWhereInput | wp_soogname_metaWhereInput[]
    meta_ID?: BigIntFilter<"wp_soogname_meta"> | bigint | number
    object_ID?: BigIntFilter<"wp_soogname_meta"> | bigint | number
  }, "meta_ID_object_ID">

  export type wp_soogname_metaOrderByWithAggregationInput = {
    meta_ID?: SortOrder
    object_ID?: SortOrder
    _count?: wp_soogname_metaCountOrderByAggregateInput
    _avg?: wp_soogname_metaAvgOrderByAggregateInput
    _max?: wp_soogname_metaMaxOrderByAggregateInput
    _min?: wp_soogname_metaMinOrderByAggregateInput
    _sum?: wp_soogname_metaSumOrderByAggregateInput
  }

  export type wp_soogname_metaScalarWhereWithAggregatesInput = {
    AND?: wp_soogname_metaScalarWhereWithAggregatesInput | wp_soogname_metaScalarWhereWithAggregatesInput[]
    OR?: wp_soogname_metaScalarWhereWithAggregatesInput[]
    NOT?: wp_soogname_metaScalarWhereWithAggregatesInput | wp_soogname_metaScalarWhereWithAggregatesInput[]
    meta_ID?: BigIntWithAggregatesFilter<"wp_soogname_meta"> | bigint | number
    object_ID?: BigIntWithAggregatesFilter<"wp_soogname_meta"> | bigint | number
  }

  export type wp_term_relationshipsWhereInput = {
    AND?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    OR?: wp_term_relationshipsWhereInput[]
    NOT?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    object_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_taxonomy_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_order?: IntFilter<"wp_term_relationships"> | number
  }

  export type wp_term_relationshipsOrderByWithRelationInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsWhereUniqueInput = Prisma.AtLeast<{
    object_id_term_taxonomy_id?: wp_term_relationshipsObject_idTerm_taxonomy_idCompoundUniqueInput
    AND?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    OR?: wp_term_relationshipsWhereInput[]
    NOT?: wp_term_relationshipsWhereInput | wp_term_relationshipsWhereInput[]
    object_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_taxonomy_id?: BigIntFilter<"wp_term_relationships"> | bigint | number
    term_order?: IntFilter<"wp_term_relationships"> | number
  }, "object_id_term_taxonomy_id">

  export type wp_term_relationshipsOrderByWithAggregationInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
    _count?: wp_term_relationshipsCountOrderByAggregateInput
    _avg?: wp_term_relationshipsAvgOrderByAggregateInput
    _max?: wp_term_relationshipsMaxOrderByAggregateInput
    _min?: wp_term_relationshipsMinOrderByAggregateInput
    _sum?: wp_term_relationshipsSumOrderByAggregateInput
  }

  export type wp_term_relationshipsScalarWhereWithAggregatesInput = {
    AND?: wp_term_relationshipsScalarWhereWithAggregatesInput | wp_term_relationshipsScalarWhereWithAggregatesInput[]
    OR?: wp_term_relationshipsScalarWhereWithAggregatesInput[]
    NOT?: wp_term_relationshipsScalarWhereWithAggregatesInput | wp_term_relationshipsScalarWhereWithAggregatesInput[]
    object_id?: BigIntWithAggregatesFilter<"wp_term_relationships"> | bigint | number
    term_taxonomy_id?: BigIntWithAggregatesFilter<"wp_term_relationships"> | bigint | number
    term_order?: IntWithAggregatesFilter<"wp_term_relationships"> | number
  }

  export type wp_term_taxonomyWhereInput = {
    AND?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    OR?: wp_term_taxonomyWhereInput[]
    NOT?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    term_taxonomy_id?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    term_id?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    taxonomy?: StringFilter<"wp_term_taxonomy"> | string
    description?: StringFilter<"wp_term_taxonomy"> | string
    parent?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    count?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
  }

  export type wp_term_taxonomyOrderByWithRelationInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
    _relevance?: wp_term_taxonomyOrderByRelevanceInput
  }

  export type wp_term_taxonomyWhereUniqueInput = Prisma.AtLeast<{
    term_taxonomy_id?: bigint | number
    term_id_taxonomy?: wp_term_taxonomyTerm_idTaxonomyCompoundUniqueInput
    AND?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    OR?: wp_term_taxonomyWhereInput[]
    NOT?: wp_term_taxonomyWhereInput | wp_term_taxonomyWhereInput[]
    term_id?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    taxonomy?: StringFilter<"wp_term_taxonomy"> | string
    description?: StringFilter<"wp_term_taxonomy"> | string
    parent?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
    count?: BigIntFilter<"wp_term_taxonomy"> | bigint | number
  }, "term_taxonomy_id" | "term_id_taxonomy">

  export type wp_term_taxonomyOrderByWithAggregationInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
    _count?: wp_term_taxonomyCountOrderByAggregateInput
    _avg?: wp_term_taxonomyAvgOrderByAggregateInput
    _max?: wp_term_taxonomyMaxOrderByAggregateInput
    _min?: wp_term_taxonomyMinOrderByAggregateInput
    _sum?: wp_term_taxonomySumOrderByAggregateInput
  }

  export type wp_term_taxonomyScalarWhereWithAggregatesInput = {
    AND?: wp_term_taxonomyScalarWhereWithAggregatesInput | wp_term_taxonomyScalarWhereWithAggregatesInput[]
    OR?: wp_term_taxonomyScalarWhereWithAggregatesInput[]
    NOT?: wp_term_taxonomyScalarWhereWithAggregatesInput | wp_term_taxonomyScalarWhereWithAggregatesInput[]
    term_taxonomy_id?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
    term_id?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
    taxonomy?: StringWithAggregatesFilter<"wp_term_taxonomy"> | string
    description?: StringWithAggregatesFilter<"wp_term_taxonomy"> | string
    parent?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
    count?: BigIntWithAggregatesFilter<"wp_term_taxonomy"> | bigint | number
  }

  export type wp_termmetaWhereInput = {
    AND?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    OR?: wp_termmetaWhereInput[]
    NOT?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    meta_id?: BigIntFilter<"wp_termmeta"> | bigint | number
    term_id?: BigIntFilter<"wp_termmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_termmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_termmeta"> | string | null
  }

  export type wp_termmetaOrderByWithRelationInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_termmetaOrderByRelevanceInput
  }

  export type wp_termmetaWhereUniqueInput = Prisma.AtLeast<{
    meta_id?: bigint | number
    AND?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    OR?: wp_termmetaWhereInput[]
    NOT?: wp_termmetaWhereInput | wp_termmetaWhereInput[]
    term_id?: BigIntFilter<"wp_termmeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_termmeta"> | string | null
    meta_value?: StringNullableFilter<"wp_termmeta"> | string | null
  }, "meta_id">

  export type wp_termmetaOrderByWithAggregationInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_termmetaCountOrderByAggregateInput
    _avg?: wp_termmetaAvgOrderByAggregateInput
    _max?: wp_termmetaMaxOrderByAggregateInput
    _min?: wp_termmetaMinOrderByAggregateInput
    _sum?: wp_termmetaSumOrderByAggregateInput
  }

  export type wp_termmetaScalarWhereWithAggregatesInput = {
    AND?: wp_termmetaScalarWhereWithAggregatesInput | wp_termmetaScalarWhereWithAggregatesInput[]
    OR?: wp_termmetaScalarWhereWithAggregatesInput[]
    NOT?: wp_termmetaScalarWhereWithAggregatesInput | wp_termmetaScalarWhereWithAggregatesInput[]
    meta_id?: BigIntWithAggregatesFilter<"wp_termmeta"> | bigint | number
    term_id?: BigIntWithAggregatesFilter<"wp_termmeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_termmeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_termmeta"> | string | null
  }

  export type wp_termsWhereInput = {
    AND?: wp_termsWhereInput | wp_termsWhereInput[]
    OR?: wp_termsWhereInput[]
    NOT?: wp_termsWhereInput | wp_termsWhereInput[]
    term_id?: BigIntFilter<"wp_terms"> | bigint | number
    name?: StringFilter<"wp_terms"> | string
    slug?: StringFilter<"wp_terms"> | string
    term_group?: BigIntFilter<"wp_terms"> | bigint | number
  }

  export type wp_termsOrderByWithRelationInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
    _relevance?: wp_termsOrderByRelevanceInput
  }

  export type wp_termsWhereUniqueInput = Prisma.AtLeast<{
    term_id?: bigint | number
    AND?: wp_termsWhereInput | wp_termsWhereInput[]
    OR?: wp_termsWhereInput[]
    NOT?: wp_termsWhereInput | wp_termsWhereInput[]
    name?: StringFilter<"wp_terms"> | string
    slug?: StringFilter<"wp_terms"> | string
    term_group?: BigIntFilter<"wp_terms"> | bigint | number
  }, "term_id">

  export type wp_termsOrderByWithAggregationInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
    _count?: wp_termsCountOrderByAggregateInput
    _avg?: wp_termsAvgOrderByAggregateInput
    _max?: wp_termsMaxOrderByAggregateInput
    _min?: wp_termsMinOrderByAggregateInput
    _sum?: wp_termsSumOrderByAggregateInput
  }

  export type wp_termsScalarWhereWithAggregatesInput = {
    AND?: wp_termsScalarWhereWithAggregatesInput | wp_termsScalarWhereWithAggregatesInput[]
    OR?: wp_termsScalarWhereWithAggregatesInput[]
    NOT?: wp_termsScalarWhereWithAggregatesInput | wp_termsScalarWhereWithAggregatesInput[]
    term_id?: BigIntWithAggregatesFilter<"wp_terms"> | bigint | number
    name?: StringWithAggregatesFilter<"wp_terms"> | string
    slug?: StringWithAggregatesFilter<"wp_terms"> | string
    term_group?: BigIntWithAggregatesFilter<"wp_terms"> | bigint | number
  }

  export type wp_usermetaWhereInput = {
    AND?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    OR?: wp_usermetaWhereInput[]
    NOT?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    umeta_id?: BigIntFilter<"wp_usermeta"> | bigint | number
    user_id?: BigIntFilter<"wp_usermeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_usermeta"> | string | null
    meta_value?: StringNullableFilter<"wp_usermeta"> | string | null
  }

  export type wp_usermetaOrderByWithRelationInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _relevance?: wp_usermetaOrderByRelevanceInput
  }

  export type wp_usermetaWhereUniqueInput = Prisma.AtLeast<{
    umeta_id?: bigint | number
    AND?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    OR?: wp_usermetaWhereInput[]
    NOT?: wp_usermetaWhereInput | wp_usermetaWhereInput[]
    user_id?: BigIntFilter<"wp_usermeta"> | bigint | number
    meta_key?: StringNullableFilter<"wp_usermeta"> | string | null
    meta_value?: StringNullableFilter<"wp_usermeta"> | string | null
  }, "umeta_id">

  export type wp_usermetaOrderByWithAggregationInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrderInput | SortOrder
    meta_value?: SortOrderInput | SortOrder
    _count?: wp_usermetaCountOrderByAggregateInput
    _avg?: wp_usermetaAvgOrderByAggregateInput
    _max?: wp_usermetaMaxOrderByAggregateInput
    _min?: wp_usermetaMinOrderByAggregateInput
    _sum?: wp_usermetaSumOrderByAggregateInput
  }

  export type wp_usermetaScalarWhereWithAggregatesInput = {
    AND?: wp_usermetaScalarWhereWithAggregatesInput | wp_usermetaScalarWhereWithAggregatesInput[]
    OR?: wp_usermetaScalarWhereWithAggregatesInput[]
    NOT?: wp_usermetaScalarWhereWithAggregatesInput | wp_usermetaScalarWhereWithAggregatesInput[]
    umeta_id?: BigIntWithAggregatesFilter<"wp_usermeta"> | bigint | number
    user_id?: BigIntWithAggregatesFilter<"wp_usermeta"> | bigint | number
    meta_key?: StringNullableWithAggregatesFilter<"wp_usermeta"> | string | null
    meta_value?: StringNullableWithAggregatesFilter<"wp_usermeta"> | string | null
  }

  export type wp_usersWhereInput = {
    AND?: wp_usersWhereInput | wp_usersWhereInput[]
    OR?: wp_usersWhereInput[]
    NOT?: wp_usersWhereInput | wp_usersWhereInput[]
    ID?: BigIntFilter<"wp_users"> | bigint | number
    user_login?: StringFilter<"wp_users"> | string
    user_pass?: StringFilter<"wp_users"> | string
    user_nicename?: StringFilter<"wp_users"> | string
    user_email?: StringFilter<"wp_users"> | string
    user_url?: StringFilter<"wp_users"> | string
    user_registered?: DateTimeFilter<"wp_users"> | Date | string
    user_activation_key?: StringFilter<"wp_users"> | string
    user_status?: IntFilter<"wp_users"> | number
    display_name?: StringFilter<"wp_users"> | string
  }

  export type wp_usersOrderByWithRelationInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
    _relevance?: wp_usersOrderByRelevanceInput
  }

  export type wp_usersWhereUniqueInput = Prisma.AtLeast<{
    ID?: bigint | number
    AND?: wp_usersWhereInput | wp_usersWhereInput[]
    OR?: wp_usersWhereInput[]
    NOT?: wp_usersWhereInput | wp_usersWhereInput[]
    user_login?: StringFilter<"wp_users"> | string
    user_pass?: StringFilter<"wp_users"> | string
    user_nicename?: StringFilter<"wp_users"> | string
    user_email?: StringFilter<"wp_users"> | string
    user_url?: StringFilter<"wp_users"> | string
    user_registered?: DateTimeFilter<"wp_users"> | Date | string
    user_activation_key?: StringFilter<"wp_users"> | string
    user_status?: IntFilter<"wp_users"> | number
    display_name?: StringFilter<"wp_users"> | string
  }, "ID">

  export type wp_usersOrderByWithAggregationInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
    _count?: wp_usersCountOrderByAggregateInput
    _avg?: wp_usersAvgOrderByAggregateInput
    _max?: wp_usersMaxOrderByAggregateInput
    _min?: wp_usersMinOrderByAggregateInput
    _sum?: wp_usersSumOrderByAggregateInput
  }

  export type wp_usersScalarWhereWithAggregatesInput = {
    AND?: wp_usersScalarWhereWithAggregatesInput | wp_usersScalarWhereWithAggregatesInput[]
    OR?: wp_usersScalarWhereWithAggregatesInput[]
    NOT?: wp_usersScalarWhereWithAggregatesInput | wp_usersScalarWhereWithAggregatesInput[]
    ID?: BigIntWithAggregatesFilter<"wp_users"> | bigint | number
    user_login?: StringWithAggregatesFilter<"wp_users"> | string
    user_pass?: StringWithAggregatesFilter<"wp_users"> | string
    user_nicename?: StringWithAggregatesFilter<"wp_users"> | string
    user_email?: StringWithAggregatesFilter<"wp_users"> | string
    user_url?: StringWithAggregatesFilter<"wp_users"> | string
    user_registered?: DateTimeWithAggregatesFilter<"wp_users"> | Date | string
    user_activation_key?: StringWithAggregatesFilter<"wp_users"> | string
    user_status?: IntWithAggregatesFilter<"wp_users"> | number
    display_name?: StringWithAggregatesFilter<"wp_users"> | string
  }

  export type wp_wpr_above_the_foldWhereInput = {
    AND?: wp_wpr_above_the_foldWhereInput | wp_wpr_above_the_foldWhereInput[]
    OR?: wp_wpr_above_the_foldWhereInput[]
    NOT?: wp_wpr_above_the_foldWhereInput | wp_wpr_above_the_foldWhereInput[]
    id?: BigIntFilter<"wp_wpr_above_the_fold"> | bigint | number
    url?: StringFilter<"wp_wpr_above_the_fold"> | string
    is_mobile?: BoolFilter<"wp_wpr_above_the_fold"> | boolean
    lcp?: StringNullableFilter<"wp_wpr_above_the_fold"> | string | null
    viewport?: StringNullableFilter<"wp_wpr_above_the_fold"> | string | null
    error_message?: StringNullableFilter<"wp_wpr_above_the_fold"> | string | null
    status?: StringFilter<"wp_wpr_above_the_fold"> | string
    modified?: DateTimeFilter<"wp_wpr_above_the_fold"> | Date | string
    last_accessed?: DateTimeFilter<"wp_wpr_above_the_fold"> | Date | string
  }

  export type wp_wpr_above_the_foldOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    is_mobile?: SortOrder
    lcp?: SortOrderInput | SortOrder
    viewport?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    _relevance?: wp_wpr_above_the_foldOrderByRelevanceInput
  }

  export type wp_wpr_above_the_foldWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_wpr_above_the_foldWhereInput | wp_wpr_above_the_foldWhereInput[]
    OR?: wp_wpr_above_the_foldWhereInput[]
    NOT?: wp_wpr_above_the_foldWhereInput | wp_wpr_above_the_foldWhereInput[]
    url?: StringFilter<"wp_wpr_above_the_fold"> | string
    is_mobile?: BoolFilter<"wp_wpr_above_the_fold"> | boolean
    lcp?: StringNullableFilter<"wp_wpr_above_the_fold"> | string | null
    viewport?: StringNullableFilter<"wp_wpr_above_the_fold"> | string | null
    error_message?: StringNullableFilter<"wp_wpr_above_the_fold"> | string | null
    status?: StringFilter<"wp_wpr_above_the_fold"> | string
    modified?: DateTimeFilter<"wp_wpr_above_the_fold"> | Date | string
    last_accessed?: DateTimeFilter<"wp_wpr_above_the_fold"> | Date | string
  }, "id">

  export type wp_wpr_above_the_foldOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    is_mobile?: SortOrder
    lcp?: SortOrderInput | SortOrder
    viewport?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    _count?: wp_wpr_above_the_foldCountOrderByAggregateInput
    _avg?: wp_wpr_above_the_foldAvgOrderByAggregateInput
    _max?: wp_wpr_above_the_foldMaxOrderByAggregateInput
    _min?: wp_wpr_above_the_foldMinOrderByAggregateInput
    _sum?: wp_wpr_above_the_foldSumOrderByAggregateInput
  }

  export type wp_wpr_above_the_foldScalarWhereWithAggregatesInput = {
    AND?: wp_wpr_above_the_foldScalarWhereWithAggregatesInput | wp_wpr_above_the_foldScalarWhereWithAggregatesInput[]
    OR?: wp_wpr_above_the_foldScalarWhereWithAggregatesInput[]
    NOT?: wp_wpr_above_the_foldScalarWhereWithAggregatesInput | wp_wpr_above_the_foldScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_wpr_above_the_fold"> | bigint | number
    url?: StringWithAggregatesFilter<"wp_wpr_above_the_fold"> | string
    is_mobile?: BoolWithAggregatesFilter<"wp_wpr_above_the_fold"> | boolean
    lcp?: StringNullableWithAggregatesFilter<"wp_wpr_above_the_fold"> | string | null
    viewport?: StringNullableWithAggregatesFilter<"wp_wpr_above_the_fold"> | string | null
    error_message?: StringNullableWithAggregatesFilter<"wp_wpr_above_the_fold"> | string | null
    status?: StringWithAggregatesFilter<"wp_wpr_above_the_fold"> | string
    modified?: DateTimeWithAggregatesFilter<"wp_wpr_above_the_fold"> | Date | string
    last_accessed?: DateTimeWithAggregatesFilter<"wp_wpr_above_the_fold"> | Date | string
  }

  export type wp_wpr_rocket_cacheWhereInput = {
    AND?: wp_wpr_rocket_cacheWhereInput | wp_wpr_rocket_cacheWhereInput[]
    OR?: wp_wpr_rocket_cacheWhereInput[]
    NOT?: wp_wpr_rocket_cacheWhereInput | wp_wpr_rocket_cacheWhereInput[]
    id?: BigIntFilter<"wp_wpr_rocket_cache"> | bigint | number
    url?: StringFilter<"wp_wpr_rocket_cache"> | string
    status?: StringFilter<"wp_wpr_rocket_cache"> | string
    modified?: DateTimeFilter<"wp_wpr_rocket_cache"> | Date | string
    last_accessed?: DateTimeFilter<"wp_wpr_rocket_cache"> | Date | string
    is_locked?: BoolFilter<"wp_wpr_rocket_cache"> | boolean
  }

  export type wp_wpr_rocket_cacheOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    is_locked?: SortOrder
    _relevance?: wp_wpr_rocket_cacheOrderByRelevanceInput
  }

  export type wp_wpr_rocket_cacheWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_wpr_rocket_cacheWhereInput | wp_wpr_rocket_cacheWhereInput[]
    OR?: wp_wpr_rocket_cacheWhereInput[]
    NOT?: wp_wpr_rocket_cacheWhereInput | wp_wpr_rocket_cacheWhereInput[]
    url?: StringFilter<"wp_wpr_rocket_cache"> | string
    status?: StringFilter<"wp_wpr_rocket_cache"> | string
    modified?: DateTimeFilter<"wp_wpr_rocket_cache"> | Date | string
    last_accessed?: DateTimeFilter<"wp_wpr_rocket_cache"> | Date | string
    is_locked?: BoolFilter<"wp_wpr_rocket_cache"> | boolean
  }, "id">

  export type wp_wpr_rocket_cacheOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    is_locked?: SortOrder
    _count?: wp_wpr_rocket_cacheCountOrderByAggregateInput
    _avg?: wp_wpr_rocket_cacheAvgOrderByAggregateInput
    _max?: wp_wpr_rocket_cacheMaxOrderByAggregateInput
    _min?: wp_wpr_rocket_cacheMinOrderByAggregateInput
    _sum?: wp_wpr_rocket_cacheSumOrderByAggregateInput
  }

  export type wp_wpr_rocket_cacheScalarWhereWithAggregatesInput = {
    AND?: wp_wpr_rocket_cacheScalarWhereWithAggregatesInput | wp_wpr_rocket_cacheScalarWhereWithAggregatesInput[]
    OR?: wp_wpr_rocket_cacheScalarWhereWithAggregatesInput[]
    NOT?: wp_wpr_rocket_cacheScalarWhereWithAggregatesInput | wp_wpr_rocket_cacheScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_wpr_rocket_cache"> | bigint | number
    url?: StringWithAggregatesFilter<"wp_wpr_rocket_cache"> | string
    status?: StringWithAggregatesFilter<"wp_wpr_rocket_cache"> | string
    modified?: DateTimeWithAggregatesFilter<"wp_wpr_rocket_cache"> | Date | string
    last_accessed?: DateTimeWithAggregatesFilter<"wp_wpr_rocket_cache"> | Date | string
    is_locked?: BoolWithAggregatesFilter<"wp_wpr_rocket_cache"> | boolean
  }

  export type wp_wpr_rucss_used_cssWhereInput = {
    AND?: wp_wpr_rucss_used_cssWhereInput | wp_wpr_rucss_used_cssWhereInput[]
    OR?: wp_wpr_rucss_used_cssWhereInput[]
    NOT?: wp_wpr_rucss_used_cssWhereInput | wp_wpr_rucss_used_cssWhereInput[]
    id?: BigIntFilter<"wp_wpr_rucss_used_css"> | bigint | number
    url?: StringFilter<"wp_wpr_rucss_used_css"> | string
    css?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    hash?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    error_code?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    error_message?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    unprocessedcss?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    retries?: BoolFilter<"wp_wpr_rucss_used_css"> | boolean
    is_mobile?: BoolFilter<"wp_wpr_rucss_used_css"> | boolean
    job_id?: StringFilter<"wp_wpr_rucss_used_css"> | string
    queue_name?: StringFilter<"wp_wpr_rucss_used_css"> | string
    status?: StringFilter<"wp_wpr_rucss_used_css"> | string
    modified?: DateTimeFilter<"wp_wpr_rucss_used_css"> | Date | string
    last_accessed?: DateTimeFilter<"wp_wpr_rucss_used_css"> | Date | string
    submitted_at?: DateTimeNullableFilter<"wp_wpr_rucss_used_css"> | Date | string | null
    next_retry_time?: DateTimeFilter<"wp_wpr_rucss_used_css"> | Date | string
  }

  export type wp_wpr_rucss_used_cssOrderByWithRelationInput = {
    id?: SortOrder
    url?: SortOrder
    css?: SortOrderInput | SortOrder
    hash?: SortOrderInput | SortOrder
    error_code?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    unprocessedcss?: SortOrderInput | SortOrder
    retries?: SortOrder
    is_mobile?: SortOrder
    job_id?: SortOrder
    queue_name?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    submitted_at?: SortOrderInput | SortOrder
    next_retry_time?: SortOrder
    _relevance?: wp_wpr_rucss_used_cssOrderByRelevanceInput
  }

  export type wp_wpr_rucss_used_cssWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: wp_wpr_rucss_used_cssWhereInput | wp_wpr_rucss_used_cssWhereInput[]
    OR?: wp_wpr_rucss_used_cssWhereInput[]
    NOT?: wp_wpr_rucss_used_cssWhereInput | wp_wpr_rucss_used_cssWhereInput[]
    url?: StringFilter<"wp_wpr_rucss_used_css"> | string
    css?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    hash?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    error_code?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    error_message?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    unprocessedcss?: StringNullableFilter<"wp_wpr_rucss_used_css"> | string | null
    retries?: BoolFilter<"wp_wpr_rucss_used_css"> | boolean
    is_mobile?: BoolFilter<"wp_wpr_rucss_used_css"> | boolean
    job_id?: StringFilter<"wp_wpr_rucss_used_css"> | string
    queue_name?: StringFilter<"wp_wpr_rucss_used_css"> | string
    status?: StringFilter<"wp_wpr_rucss_used_css"> | string
    modified?: DateTimeFilter<"wp_wpr_rucss_used_css"> | Date | string
    last_accessed?: DateTimeFilter<"wp_wpr_rucss_used_css"> | Date | string
    submitted_at?: DateTimeNullableFilter<"wp_wpr_rucss_used_css"> | Date | string | null
    next_retry_time?: DateTimeFilter<"wp_wpr_rucss_used_css"> | Date | string
  }, "id">

  export type wp_wpr_rucss_used_cssOrderByWithAggregationInput = {
    id?: SortOrder
    url?: SortOrder
    css?: SortOrderInput | SortOrder
    hash?: SortOrderInput | SortOrder
    error_code?: SortOrderInput | SortOrder
    error_message?: SortOrderInput | SortOrder
    unprocessedcss?: SortOrderInput | SortOrder
    retries?: SortOrder
    is_mobile?: SortOrder
    job_id?: SortOrder
    queue_name?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    submitted_at?: SortOrderInput | SortOrder
    next_retry_time?: SortOrder
    _count?: wp_wpr_rucss_used_cssCountOrderByAggregateInput
    _avg?: wp_wpr_rucss_used_cssAvgOrderByAggregateInput
    _max?: wp_wpr_rucss_used_cssMaxOrderByAggregateInput
    _min?: wp_wpr_rucss_used_cssMinOrderByAggregateInput
    _sum?: wp_wpr_rucss_used_cssSumOrderByAggregateInput
  }

  export type wp_wpr_rucss_used_cssScalarWhereWithAggregatesInput = {
    AND?: wp_wpr_rucss_used_cssScalarWhereWithAggregatesInput | wp_wpr_rucss_used_cssScalarWhereWithAggregatesInput[]
    OR?: wp_wpr_rucss_used_cssScalarWhereWithAggregatesInput[]
    NOT?: wp_wpr_rucss_used_cssScalarWhereWithAggregatesInput | wp_wpr_rucss_used_cssScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"wp_wpr_rucss_used_css"> | bigint | number
    url?: StringWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string
    css?: StringNullableWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string | null
    hash?: StringNullableWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string | null
    error_code?: StringNullableWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string | null
    error_message?: StringNullableWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string | null
    unprocessedcss?: StringNullableWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string | null
    retries?: BoolWithAggregatesFilter<"wp_wpr_rucss_used_css"> | boolean
    is_mobile?: BoolWithAggregatesFilter<"wp_wpr_rucss_used_css"> | boolean
    job_id?: StringWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string
    queue_name?: StringWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string
    status?: StringWithAggregatesFilter<"wp_wpr_rucss_used_css"> | string
    modified?: DateTimeWithAggregatesFilter<"wp_wpr_rucss_used_css"> | Date | string
    last_accessed?: DateTimeWithAggregatesFilter<"wp_wpr_rucss_used_css"> | Date | string
    submitted_at?: DateTimeNullableWithAggregatesFilter<"wp_wpr_rucss_used_css"> | Date | string | null
    next_retry_time?: DateTimeWithAggregatesFilter<"wp_wpr_rucss_used_css"> | Date | string
  }

  export type wp_actionscheduler_actionsCreateInput = {
    action_id?: bigint | number
    hook: string
    status: string
    scheduled_date_gmt?: Date | string | null
    scheduled_date_local?: Date | string | null
    priority?: number
    args?: string | null
    schedule?: string | null
    group_id?: bigint | number
    attempts?: number
    last_attempt_gmt?: Date | string | null
    last_attempt_local?: Date | string | null
    claim_id?: bigint | number
    extended_args?: string | null
  }

  export type wp_actionscheduler_actionsUncheckedCreateInput = {
    action_id?: bigint | number
    hook: string
    status: string
    scheduled_date_gmt?: Date | string | null
    scheduled_date_local?: Date | string | null
    priority?: number
    args?: string | null
    schedule?: string | null
    group_id?: bigint | number
    attempts?: number
    last_attempt_gmt?: Date | string | null
    last_attempt_local?: Date | string | null
    claim_id?: bigint | number
    extended_args?: string | null
  }

  export type wp_actionscheduler_actionsUpdateInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduled_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_attempt_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_actionsUncheckedUpdateInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduled_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_attempt_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_actionsCreateManyInput = {
    action_id?: bigint | number
    hook: string
    status: string
    scheduled_date_gmt?: Date | string | null
    scheduled_date_local?: Date | string | null
    priority?: number
    args?: string | null
    schedule?: string | null
    group_id?: bigint | number
    attempts?: number
    last_attempt_gmt?: Date | string | null
    last_attempt_local?: Date | string | null
    claim_id?: bigint | number
    extended_args?: string | null
  }

  export type wp_actionscheduler_actionsUpdateManyMutationInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduled_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_attempt_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_actionsUncheckedUpdateManyInput = {
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    hook?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    scheduled_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    scheduled_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    priority?: IntFieldUpdateOperationsInput | number
    args?: NullableStringFieldUpdateOperationsInput | string | null
    schedule?: NullableStringFieldUpdateOperationsInput | string | null
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    attempts?: IntFieldUpdateOperationsInput | number
    last_attempt_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_attempt_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    extended_args?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_actionscheduler_claimsCreateInput = {
    claim_id?: bigint | number
    date_created_gmt?: Date | string | null
  }

  export type wp_actionscheduler_claimsUncheckedCreateInput = {
    claim_id?: bigint | number
    date_created_gmt?: Date | string | null
  }

  export type wp_actionscheduler_claimsUpdateInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_actionscheduler_claimsUncheckedUpdateInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_actionscheduler_claimsCreateManyInput = {
    claim_id?: bigint | number
    date_created_gmt?: Date | string | null
  }

  export type wp_actionscheduler_claimsUpdateManyMutationInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_actionscheduler_claimsUncheckedUpdateManyInput = {
    claim_id?: BigIntFieldUpdateOperationsInput | bigint | number
    date_created_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_actionscheduler_groupsCreateInput = {
    group_id?: bigint | number
    slug: string
  }

  export type wp_actionscheduler_groupsUncheckedCreateInput = {
    group_id?: bigint | number
    slug: string
  }

  export type wp_actionscheduler_groupsUpdateInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_groupsUncheckedUpdateInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_groupsCreateManyInput = {
    group_id?: bigint | number
    slug: string
  }

  export type wp_actionscheduler_groupsUpdateManyMutationInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_groupsUncheckedUpdateManyInput = {
    group_id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: StringFieldUpdateOperationsInput | string
  }

  export type wp_actionscheduler_logsCreateInput = {
    log_id?: bigint | number
    action_id: bigint | number
    message: string
    log_date_gmt?: Date | string | null
    log_date_local?: Date | string | null
  }

  export type wp_actionscheduler_logsUncheckedCreateInput = {
    log_id?: bigint | number
    action_id: bigint | number
    message: string
    log_date_gmt?: Date | string | null
    log_date_local?: Date | string | null
  }

  export type wp_actionscheduler_logsUpdateInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_actionscheduler_logsUncheckedUpdateInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_actionscheduler_logsCreateManyInput = {
    log_id?: bigint | number
    action_id: bigint | number
    message: string
    log_date_gmt?: Date | string | null
    log_date_local?: Date | string | null
  }

  export type wp_actionscheduler_logsUpdateManyMutationInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_actionscheduler_logsUncheckedUpdateManyInput = {
    log_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_id?: BigIntFieldUpdateOperationsInput | bigint | number
    message?: StringFieldUpdateOperationsInput | string
    log_date_gmt?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    log_date_local?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type wp_addonlibrary_addonsCreateInput = {
    id?: bigint | number
    title?: string | null
    name?: string | null
    alias?: string | null
    addontype?: string | null
    description?: string | null
    ordering: number
    templates?: string | null
    config?: string | null
    catid?: number | null
    is_active?: number | null
    test_slot1?: string | null
    test_slot2?: string | null
    test_slot3?: string | null
  }

  export type wp_addonlibrary_addonsUncheckedCreateInput = {
    id?: bigint | number
    title?: string | null
    name?: string | null
    alias?: string | null
    addontype?: string | null
    description?: string | null
    ordering: number
    templates?: string | null
    config?: string | null
    catid?: number | null
    is_active?: number | null
    test_slot1?: string | null
    test_slot2?: string | null
    test_slot3?: string | null
  }

  export type wp_addonlibrary_addonsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    addontype?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    templates?: NullableStringFieldUpdateOperationsInput | string | null
    config?: NullableStringFieldUpdateOperationsInput | string | null
    catid?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableIntFieldUpdateOperationsInput | number | null
    test_slot1?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot2?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_addonlibrary_addonsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    addontype?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    templates?: NullableStringFieldUpdateOperationsInput | string | null
    config?: NullableStringFieldUpdateOperationsInput | string | null
    catid?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableIntFieldUpdateOperationsInput | number | null
    test_slot1?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot2?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_addonlibrary_addonsCreateManyInput = {
    id?: bigint | number
    title?: string | null
    name?: string | null
    alias?: string | null
    addontype?: string | null
    description?: string | null
    ordering: number
    templates?: string | null
    config?: string | null
    catid?: number | null
    is_active?: number | null
    test_slot1?: string | null
    test_slot2?: string | null
    test_slot3?: string | null
  }

  export type wp_addonlibrary_addonsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    addontype?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    templates?: NullableStringFieldUpdateOperationsInput | string | null
    config?: NullableStringFieldUpdateOperationsInput | string | null
    catid?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableIntFieldUpdateOperationsInput | number | null
    test_slot1?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot2?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_addonlibrary_addonsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    addontype?: NullableStringFieldUpdateOperationsInput | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    templates?: NullableStringFieldUpdateOperationsInput | string | null
    config?: NullableStringFieldUpdateOperationsInput | string | null
    catid?: NullableIntFieldUpdateOperationsInput | number | null
    is_active?: NullableIntFieldUpdateOperationsInput | number | null
    test_slot1?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot2?: NullableStringFieldUpdateOperationsInput | string | null
    test_slot3?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_addonlibrary_categoriesCreateInput = {
    title: string
    alias?: string | null
    ordering: number
    params: string
    type?: string | null
    parent_id?: number | null
  }

  export type wp_addonlibrary_categoriesUncheckedCreateInput = {
    id?: number
    title: string
    alias?: string | null
    ordering: number
    params: string
    type?: string | null
    parent_id?: number | null
  }

  export type wp_addonlibrary_categoriesUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    params?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_addonlibrary_categoriesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    params?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_addonlibrary_categoriesCreateManyInput = {
    id?: number
    title: string
    alias?: string | null
    ordering: number
    params: string
    type?: string | null
    parent_id?: number | null
  }

  export type wp_addonlibrary_categoriesUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    params?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_addonlibrary_categoriesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    alias?: NullableStringFieldUpdateOperationsInput | string | null
    ordering?: IntFieldUpdateOperationsInput | number
    params?: StringFieldUpdateOperationsInput | string
    type?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_ai_stats_eventsCreateInput = {
    dtime?: Date | string
    track_url: string
    track_title?: string | null
    track_artist?: string | null
    playlist_id?: number | null
    referrer_url?: string | null
    client_fingerprint?: string | null
    event_name: string
    event_data?: string | null
    is_stream?: number
    processed?: number
  }

  export type wp_ai_stats_eventsUncheckedCreateInput = {
    id?: number
    dtime?: Date | string
    track_url: string
    track_title?: string | null
    track_artist?: string | null
    playlist_id?: number | null
    referrer_url?: string | null
    client_fingerprint?: string | null
    event_name: string
    event_data?: string | null
    is_stream?: number
    processed?: number
  }

  export type wp_ai_stats_eventsUpdateInput = {
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    track_url?: StringFieldUpdateOperationsInput | string
    track_title?: NullableStringFieldUpdateOperationsInput | string | null
    track_artist?: NullableStringFieldUpdateOperationsInput | string | null
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    event_name?: StringFieldUpdateOperationsInput | string
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    is_stream?: IntFieldUpdateOperationsInput | number
    processed?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_eventsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    track_url?: StringFieldUpdateOperationsInput | string
    track_title?: NullableStringFieldUpdateOperationsInput | string | null
    track_artist?: NullableStringFieldUpdateOperationsInput | string | null
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    event_name?: StringFieldUpdateOperationsInput | string
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    is_stream?: IntFieldUpdateOperationsInput | number
    processed?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_eventsCreateManyInput = {
    id?: number
    dtime?: Date | string
    track_url: string
    track_title?: string | null
    track_artist?: string | null
    playlist_id?: number | null
    referrer_url?: string | null
    client_fingerprint?: string | null
    event_name: string
    event_data?: string | null
    is_stream?: number
    processed?: number
  }

  export type wp_ai_stats_eventsUpdateManyMutationInput = {
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    track_url?: StringFieldUpdateOperationsInput | string
    track_title?: NullableStringFieldUpdateOperationsInput | string | null
    track_artist?: NullableStringFieldUpdateOperationsInput | string | null
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    event_name?: StringFieldUpdateOperationsInput | string
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    is_stream?: IntFieldUpdateOperationsInput | number
    processed?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_eventsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    track_url?: StringFieldUpdateOperationsInput | string
    track_title?: NullableStringFieldUpdateOperationsInput | string | null
    track_artist?: NullableStringFieldUpdateOperationsInput | string | null
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    event_name?: StringFieldUpdateOperationsInput | string
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    is_stream?: IntFieldUpdateOperationsInput | number
    processed?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_playCreateInput = {
    track_id: number
    dtime?: Date | string
    playlist_id?: number | null
    referrer_url?: string | null
    client_fingerprint?: string | null
    duration?: number | null
    seeks?: number
    pauses?: number
    skipped?: number
    downloaded?: number
  }

  export type wp_ai_stats_playUncheckedCreateInput = {
    id?: number
    track_id: number
    dtime?: Date | string
    playlist_id?: number | null
    referrer_url?: string | null
    client_fingerprint?: string | null
    duration?: number | null
    seeks?: number
    pauses?: number
    skipped?: number
    downloaded?: number
  }

  export type wp_ai_stats_playUpdateInput = {
    track_id?: IntFieldUpdateOperationsInput | number
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    seeks?: IntFieldUpdateOperationsInput | number
    pauses?: IntFieldUpdateOperationsInput | number
    skipped?: IntFieldUpdateOperationsInput | number
    downloaded?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_playUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    track_id?: IntFieldUpdateOperationsInput | number
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    seeks?: IntFieldUpdateOperationsInput | number
    pauses?: IntFieldUpdateOperationsInput | number
    skipped?: IntFieldUpdateOperationsInput | number
    downloaded?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_playCreateManyInput = {
    id?: number
    track_id: number
    dtime?: Date | string
    playlist_id?: number | null
    referrer_url?: string | null
    client_fingerprint?: string | null
    duration?: number | null
    seeks?: number
    pauses?: number
    skipped?: number
    downloaded?: number
  }

  export type wp_ai_stats_playUpdateManyMutationInput = {
    track_id?: IntFieldUpdateOperationsInput | number
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    seeks?: IntFieldUpdateOperationsInput | number
    pauses?: IntFieldUpdateOperationsInput | number
    skipped?: IntFieldUpdateOperationsInput | number
    downloaded?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_playUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    track_id?: IntFieldUpdateOperationsInput | number
    dtime?: DateTimeFieldUpdateOperationsInput | Date | string
    playlist_id?: NullableIntFieldUpdateOperationsInput | number | null
    referrer_url?: NullableStringFieldUpdateOperationsInput | string | null
    client_fingerprint?: NullableStringFieldUpdateOperationsInput | string | null
    duration?: NullableIntFieldUpdateOperationsInput | number | null
    seeks?: IntFieldUpdateOperationsInput | number
    pauses?: IntFieldUpdateOperationsInput | number
    skipped?: IntFieldUpdateOperationsInput | number
    downloaded?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_trackCreateInput = {
    url: string
    url_hash: string
    title?: string | null
    artist?: string | null
    duration_mean?: number | null
    duration_count?: number | null
    is_stream?: number
  }

  export type wp_ai_stats_trackUncheckedCreateInput = {
    id?: number
    url: string
    url_hash: string
    title?: string | null
    artist?: string | null
    duration_mean?: number | null
    duration_count?: number | null
    is_stream?: number
  }

  export type wp_ai_stats_trackUpdateInput = {
    url?: StringFieldUpdateOperationsInput | string
    url_hash?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    artist?: NullableStringFieldUpdateOperationsInput | string | null
    duration_mean?: NullableFloatFieldUpdateOperationsInput | number | null
    duration_count?: NullableIntFieldUpdateOperationsInput | number | null
    is_stream?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_trackUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    url_hash?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    artist?: NullableStringFieldUpdateOperationsInput | string | null
    duration_mean?: NullableFloatFieldUpdateOperationsInput | number | null
    duration_count?: NullableIntFieldUpdateOperationsInput | number | null
    is_stream?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_trackCreateManyInput = {
    id?: number
    url: string
    url_hash: string
    title?: string | null
    artist?: string | null
    duration_mean?: number | null
    duration_count?: number | null
    is_stream?: number
  }

  export type wp_ai_stats_trackUpdateManyMutationInput = {
    url?: StringFieldUpdateOperationsInput | string
    url_hash?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    artist?: NullableStringFieldUpdateOperationsInput | string | null
    duration_mean?: NullableFloatFieldUpdateOperationsInput | number | null
    duration_count?: NullableIntFieldUpdateOperationsInput | number | null
    is_stream?: IntFieldUpdateOperationsInput | number
  }

  export type wp_ai_stats_trackUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    url?: StringFieldUpdateOperationsInput | string
    url_hash?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    artist?: NullableStringFieldUpdateOperationsInput | string | null
    duration_mean?: NullableFloatFieldUpdateOperationsInput | number | null
    duration_count?: NullableIntFieldUpdateOperationsInput | number | null
    is_stream?: IntFieldUpdateOperationsInput | number
  }

  export type wp_audier_elementor_cacheCreateInput = {
    key: string
    data: string
    updated_at: number
  }

  export type wp_audier_elementor_cacheUncheckedCreateInput = {
    id?: number
    key: string
    data: string
    updated_at: number
  }

  export type wp_audier_elementor_cacheUpdateInput = {
    key?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    updated_at?: IntFieldUpdateOperationsInput | number
  }

  export type wp_audier_elementor_cacheUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    updated_at?: IntFieldUpdateOperationsInput | number
  }

  export type wp_audier_elementor_cacheCreateManyInput = {
    id?: number
    key: string
    data: string
    updated_at: number
  }

  export type wp_audier_elementor_cacheUpdateManyMutationInput = {
    key?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    updated_at?: IntFieldUpdateOperationsInput | number
  }

  export type wp_audier_elementor_cacheUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    key?: StringFieldUpdateOperationsInput | string
    data?: StringFieldUpdateOperationsInput | string
    updated_at?: IntFieldUpdateOperationsInput | number
  }

  export type wp_commentmetaCreateInput = {
    meta_id?: bigint | number
    comment_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_commentmetaUncheckedCreateInput = {
    meta_id?: bigint | number
    comment_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_commentmetaUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentmetaUncheckedUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentmetaCreateManyInput = {
    meta_id?: bigint | number
    comment_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_commentmetaUpdateManyMutationInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentmetaUncheckedUpdateManyInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_commentsCreateInput = {
    comment_ID?: bigint | number
    comment_post_ID?: bigint | number
    comment_author: string
    comment_author_email?: string
    comment_author_url?: string
    comment_author_IP?: string
    comment_date?: Date | string
    comment_date_gmt?: Date | string
    comment_content: string
    comment_karma?: number
    comment_approved?: string
    comment_agent?: string
    comment_type?: string
    comment_parent?: bigint | number
    user_id?: bigint | number
  }

  export type wp_commentsUncheckedCreateInput = {
    comment_ID?: bigint | number
    comment_post_ID?: bigint | number
    comment_author: string
    comment_author_email?: string
    comment_author_url?: string
    comment_author_IP?: string
    comment_date?: Date | string
    comment_date_gmt?: Date | string
    comment_content: string
    comment_karma?: number
    comment_approved?: string
    comment_agent?: string
    comment_type?: string
    comment_parent?: bigint | number
    user_id?: bigint | number
  }

  export type wp_commentsUpdateInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_commentsUncheckedUpdateInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_commentsCreateManyInput = {
    comment_ID?: bigint | number
    comment_post_ID?: bigint | number
    comment_author: string
    comment_author_email?: string
    comment_author_url?: string
    comment_author_IP?: string
    comment_date?: Date | string
    comment_date_gmt?: Date | string
    comment_content: string
    comment_karma?: number
    comment_approved?: string
    comment_agent?: string
    comment_type?: string
    comment_parent?: bigint | number
    user_id?: bigint | number
  }

  export type wp_commentsUpdateManyMutationInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_commentsUncheckedUpdateManyInput = {
    comment_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_post_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    comment_author?: StringFieldUpdateOperationsInput | string
    comment_author_email?: StringFieldUpdateOperationsInput | string
    comment_author_url?: StringFieldUpdateOperationsInput | string
    comment_author_IP?: StringFieldUpdateOperationsInput | string
    comment_date?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    comment_content?: StringFieldUpdateOperationsInput | string
    comment_karma?: IntFieldUpdateOperationsInput | number
    comment_approved?: StringFieldUpdateOperationsInput | string
    comment_agent?: StringFieldUpdateOperationsInput | string
    comment_type?: StringFieldUpdateOperationsInput | string
    comment_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_cpmp_playerCreateInput = {
    id?: number
    player_name?: string
    config?: string | null
    playlist?: string | null
  }

  export type wp_cpmp_playerUncheckedCreateInput = {
    id?: number
    player_name?: string
    config?: string | null
    playlist?: string | null
  }

  export type wp_cpmp_playerUpdateInput = {
    player_name?: StringFieldUpdateOperationsInput | string
    config?: NullableStringFieldUpdateOperationsInput | string | null
    playlist?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_cpmp_playerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    player_name?: StringFieldUpdateOperationsInput | string
    config?: NullableStringFieldUpdateOperationsInput | string | null
    playlist?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_cpmp_playerCreateManyInput = {
    id?: number
    player_name?: string
    config?: string | null
    playlist?: string | null
  }

  export type wp_cpmp_playerUpdateManyMutationInput = {
    player_name?: StringFieldUpdateOperationsInput | string
    config?: NullableStringFieldUpdateOperationsInput | string | null
    playlist?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_cpmp_playerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    player_name?: StringFieldUpdateOperationsInput | string
    config?: NullableStringFieldUpdateOperationsInput | string | null
    playlist?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_e_eventsCreateInput = {
    id?: bigint | number
    event_data?: string | null
    created_at: Date | string
  }

  export type wp_e_eventsUncheckedCreateInput = {
    id?: bigint | number
    event_data?: string | null
    created_at: Date | string
  }

  export type wp_e_eventsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_eventsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_eventsCreateManyInput = {
    id?: bigint | number
    event_data?: string | null
    created_at: Date | string
  }

  export type wp_e_eventsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_eventsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    event_data?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notesCreateInput = {
    id?: bigint | number
    route_url?: string | null
    route_title?: string | null
    route_post_id?: bigint | number | null
    post_id?: bigint | number | null
    element_id?: string | null
    parent_id?: bigint | number
    author_id?: bigint | number | null
    author_display_name?: string | null
    status?: string
    position?: string | null
    content?: string | null
    is_resolved?: boolean
    is_public?: boolean
    last_activity_at?: Date | string | null
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_notesUncheckedCreateInput = {
    id?: bigint | number
    route_url?: string | null
    route_title?: string | null
    route_post_id?: bigint | number | null
    post_id?: bigint | number | null
    element_id?: string | null
    parent_id?: bigint | number
    author_id?: bigint | number | null
    author_display_name?: string | null
    status?: string
    position?: string | null
    content?: string | null
    is_resolved?: boolean
    is_public?: boolean
    last_activity_at?: Date | string | null
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_notesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    route_url?: NullableStringFieldUpdateOperationsInput | string | null
    route_title?: NullableStringFieldUpdateOperationsInput | string | null
    route_post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    element_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    author_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    author_display_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_resolved?: BoolFieldUpdateOperationsInput | boolean
    is_public?: BoolFieldUpdateOperationsInput | boolean
    last_activity_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    route_url?: NullableStringFieldUpdateOperationsInput | string | null
    route_title?: NullableStringFieldUpdateOperationsInput | string | null
    route_post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    element_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    author_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    author_display_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_resolved?: BoolFieldUpdateOperationsInput | boolean
    is_public?: BoolFieldUpdateOperationsInput | boolean
    last_activity_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notesCreateManyInput = {
    id?: bigint | number
    route_url?: string | null
    route_title?: string | null
    route_post_id?: bigint | number | null
    post_id?: bigint | number | null
    element_id?: string | null
    parent_id?: bigint | number
    author_id?: bigint | number | null
    author_display_name?: string | null
    status?: string
    position?: string | null
    content?: string | null
    is_resolved?: boolean
    is_public?: boolean
    last_activity_at?: Date | string | null
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_notesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    route_url?: NullableStringFieldUpdateOperationsInput | string | null
    route_title?: NullableStringFieldUpdateOperationsInput | string | null
    route_post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    element_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    author_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    author_display_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_resolved?: BoolFieldUpdateOperationsInput | boolean
    is_public?: BoolFieldUpdateOperationsInput | boolean
    last_activity_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    route_url?: NullableStringFieldUpdateOperationsInput | string | null
    route_title?: NullableStringFieldUpdateOperationsInput | string | null
    route_post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    post_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    element_id?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: BigIntFieldUpdateOperationsInput | bigint | number
    author_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    author_display_name?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    position?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    is_resolved?: BoolFieldUpdateOperationsInput | boolean
    is_public?: BoolFieldUpdateOperationsInput | boolean
    last_activity_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notes_users_relationsCreateInput = {
    id?: bigint | number
    type: string
    note_id: bigint | number
    user_id: bigint | number
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_notes_users_relationsUncheckedCreateInput = {
    id?: bigint | number
    type: string
    note_id: bigint | number
    user_id: bigint | number
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_notes_users_relationsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
    note_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notes_users_relationsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
    note_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notes_users_relationsCreateManyInput = {
    id?: bigint | number
    type: string
    note_id: bigint | number
    user_id: bigint | number
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_notes_users_relationsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
    note_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_notes_users_relationsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
    note_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissionsCreateInput = {
    id?: bigint | number
    type?: string | null
    hash_id: string
    main_meta_id: bigint | number
    post_id: bigint | number
    referer: string
    referer_title?: string | null
    element_id: string
    form_name: string
    campaign_id: bigint | number
    user_id?: bigint | number | null
    user_ip: string
    user_agent: string
    actions_count?: number | null
    actions_succeeded_count?: number | null
    status: string
    is_read?: boolean
    meta?: string | null
    created_at_gmt: Date | string
    updated_at_gmt: Date | string
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_submissionsUncheckedCreateInput = {
    id?: bigint | number
    type?: string | null
    hash_id: string
    main_meta_id: bigint | number
    post_id: bigint | number
    referer: string
    referer_title?: string | null
    element_id: string
    form_name: string
    campaign_id: bigint | number
    user_id?: bigint | number | null
    user_ip: string
    user_agent: string
    actions_count?: number | null
    actions_succeeded_count?: number | null
    status: string
    is_read?: boolean
    meta?: string | null
    created_at_gmt: Date | string
    updated_at_gmt: Date | string
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_submissionsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    hash_id?: StringFieldUpdateOperationsInput | string
    main_meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    referer?: StringFieldUpdateOperationsInput | string
    referer_title?: NullableStringFieldUpdateOperationsInput | string | null
    element_id?: StringFieldUpdateOperationsInput | string
    form_name?: StringFieldUpdateOperationsInput | string
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    user_ip?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    actions_count?: NullableIntFieldUpdateOperationsInput | number | null
    actions_succeeded_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    meta?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissionsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    hash_id?: StringFieldUpdateOperationsInput | string
    main_meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    referer?: StringFieldUpdateOperationsInput | string
    referer_title?: NullableStringFieldUpdateOperationsInput | string | null
    element_id?: StringFieldUpdateOperationsInput | string
    form_name?: StringFieldUpdateOperationsInput | string
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    user_ip?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    actions_count?: NullableIntFieldUpdateOperationsInput | number | null
    actions_succeeded_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    meta?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissionsCreateManyInput = {
    id?: bigint | number
    type?: string | null
    hash_id: string
    main_meta_id: bigint | number
    post_id: bigint | number
    referer: string
    referer_title?: string | null
    element_id: string
    form_name: string
    campaign_id: bigint | number
    user_id?: bigint | number | null
    user_ip: string
    user_agent: string
    actions_count?: number | null
    actions_succeeded_count?: number | null
    status: string
    is_read?: boolean
    meta?: string | null
    created_at_gmt: Date | string
    updated_at_gmt: Date | string
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_submissionsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    hash_id?: StringFieldUpdateOperationsInput | string
    main_meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    referer?: StringFieldUpdateOperationsInput | string
    referer_title?: NullableStringFieldUpdateOperationsInput | string | null
    element_id?: StringFieldUpdateOperationsInput | string
    form_name?: StringFieldUpdateOperationsInput | string
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    user_ip?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    actions_count?: NullableIntFieldUpdateOperationsInput | number | null
    actions_succeeded_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    meta?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissionsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    hash_id?: StringFieldUpdateOperationsInput | string
    main_meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    referer?: StringFieldUpdateOperationsInput | string
    referer_title?: NullableStringFieldUpdateOperationsInput | string | null
    element_id?: StringFieldUpdateOperationsInput | string
    form_name?: StringFieldUpdateOperationsInput | string
    campaign_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    user_ip?: StringFieldUpdateOperationsInput | string
    user_agent?: StringFieldUpdateOperationsInput | string
    actions_count?: NullableIntFieldUpdateOperationsInput | number | null
    actions_succeeded_count?: NullableIntFieldUpdateOperationsInput | number | null
    status?: StringFieldUpdateOperationsInput | string
    is_read?: BoolFieldUpdateOperationsInput | boolean
    meta?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissions_actions_logCreateInput = {
    id?: bigint | number
    submission_id: bigint | number
    action_name: string
    action_label?: string | null
    status: string
    log?: string | null
    created_at_gmt: Date | string
    updated_at_gmt: Date | string
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_submissions_actions_logUncheckedCreateInput = {
    id?: bigint | number
    submission_id: bigint | number
    action_name: string
    action_label?: string | null
    status: string
    log?: string | null
    created_at_gmt: Date | string
    updated_at_gmt: Date | string
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_submissions_actions_logUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_name?: StringFieldUpdateOperationsInput | string
    action_label?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    log?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissions_actions_logUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_name?: StringFieldUpdateOperationsInput | string
    action_label?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    log?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissions_actions_logCreateManyInput = {
    id?: bigint | number
    submission_id: bigint | number
    action_name: string
    action_label?: string | null
    status: string
    log?: string | null
    created_at_gmt: Date | string
    updated_at_gmt: Date | string
    created_at: Date | string
    updated_at: Date | string
  }

  export type wp_e_submissions_actions_logUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_name?: StringFieldUpdateOperationsInput | string
    action_label?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    log?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissions_actions_logUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    action_name?: StringFieldUpdateOperationsInput | string
    action_label?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    log?: NullableStringFieldUpdateOperationsInput | string | null
    created_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_e_submissions_valuesCreateInput = {
    id?: bigint | number
    submission_id?: bigint | number
    key?: string | null
    value?: string | null
  }

  export type wp_e_submissions_valuesUncheckedCreateInput = {
    id?: bigint | number
    submission_id?: bigint | number
    key?: string | null
    value?: string | null
  }

  export type wp_e_submissions_valuesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    key?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_e_submissions_valuesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    key?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_e_submissions_valuesCreateManyInput = {
    id?: bigint | number
    submission_id?: bigint | number
    key?: string | null
    value?: string | null
  }

  export type wp_e_submissions_valuesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    key?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_e_submissions_valuesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    submission_id?: BigIntFieldUpdateOperationsInput | bigint | number
    key?: NullableStringFieldUpdateOperationsInput | string | null
    value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_post_typesCreateInput = {
    id?: bigint | number
    slug?: string | null
    status?: string | null
    labels?: string | null
    args?: string | null
    meta_fields?: string | null
  }

  export type wp_jet_post_typesUncheckedCreateInput = {
    id?: bigint | number
    slug?: string | null
    status?: string | null
    labels?: string | null
    args?: string | null
    meta_fields?: string | null
  }

  export type wp_jet_post_typesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_post_typesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_post_typesCreateManyInput = {
    id?: bigint | number
    slug?: string | null
    status?: string | null
    labels?: string | null
    args?: string | null
    meta_fields?: string | null
  }

  export type wp_jet_post_typesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_post_typesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_smart_filters_indexerCreateInput = {
    type?: string | null
    item_id?: number | null
    item_query?: string | null
    item_key?: string | null
    item_value?: string | null
  }

  export type wp_jet_smart_filters_indexerUncheckedCreateInput = {
    id?: number
    type?: string | null
    item_id?: number | null
    item_query?: string | null
    item_key?: string | null
    item_value?: string | null
  }

  export type wp_jet_smart_filters_indexerUpdateInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    item_id?: NullableIntFieldUpdateOperationsInput | number | null
    item_query?: NullableStringFieldUpdateOperationsInput | string | null
    item_key?: NullableStringFieldUpdateOperationsInput | string | null
    item_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_smart_filters_indexerUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    item_id?: NullableIntFieldUpdateOperationsInput | number | null
    item_query?: NullableStringFieldUpdateOperationsInput | string | null
    item_key?: NullableStringFieldUpdateOperationsInput | string | null
    item_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_smart_filters_indexerCreateManyInput = {
    id?: number
    type?: string | null
    item_id?: number | null
    item_query?: string | null
    item_key?: string | null
    item_value?: string | null
  }

  export type wp_jet_smart_filters_indexerUpdateManyMutationInput = {
    type?: NullableStringFieldUpdateOperationsInput | string | null
    item_id?: NullableIntFieldUpdateOperationsInput | number | null
    item_query?: NullableStringFieldUpdateOperationsInput | string | null
    item_key?: NullableStringFieldUpdateOperationsInput | string | null
    item_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_smart_filters_indexerUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: NullableStringFieldUpdateOperationsInput | string | null
    item_id?: NullableIntFieldUpdateOperationsInput | number | null
    item_query?: NullableStringFieldUpdateOperationsInput | string | null
    item_key?: NullableStringFieldUpdateOperationsInput | string | null
    item_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_taxonomiesCreateInput = {
    id?: bigint | number
    slug?: string | null
    object_type?: string | null
    status?: string | null
    labels?: string | null
    args?: string | null
    meta_fields?: string | null
  }

  export type wp_jet_taxonomiesUncheckedCreateInput = {
    id?: bigint | number
    slug?: string | null
    object_type?: string | null
    status?: string | null
    labels?: string | null
    args?: string | null
    meta_fields?: string | null
  }

  export type wp_jet_taxonomiesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_taxonomiesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_taxonomiesCreateManyInput = {
    id?: bigint | number
    slug?: string | null
    object_type?: string | null
    status?: string | null
    labels?: string | null
    args?: string | null
    meta_fields?: string | null
  }

  export type wp_jet_taxonomiesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_jet_taxonomiesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    slug?: NullableStringFieldUpdateOperationsInput | string | null
    object_type?: NullableStringFieldUpdateOperationsInput | string | null
    status?: NullableStringFieldUpdateOperationsInput | string | null
    labels?: NullableStringFieldUpdateOperationsInput | string | null
    args?: NullableStringFieldUpdateOperationsInput | string | null
    meta_fields?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_linksCreateInput = {
    link_id?: bigint | number
    link_url?: string
    link_name?: string
    link_image?: string
    link_target?: string
    link_description?: string
    link_visible?: string
    link_owner?: bigint | number
    link_rating?: number
    link_updated?: Date | string
    link_rel?: string
    link_notes: string
    link_rss?: string
  }

  export type wp_linksUncheckedCreateInput = {
    link_id?: bigint | number
    link_url?: string
    link_name?: string
    link_image?: string
    link_target?: string
    link_description?: string
    link_visible?: string
    link_owner?: bigint | number
    link_rating?: number
    link_updated?: Date | string
    link_rel?: string
    link_notes: string
    link_rss?: string
  }

  export type wp_linksUpdateInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_linksUncheckedUpdateInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_linksCreateManyInput = {
    link_id?: bigint | number
    link_url?: string
    link_name?: string
    link_image?: string
    link_target?: string
    link_description?: string
    link_visible?: string
    link_owner?: bigint | number
    link_rating?: number
    link_updated?: Date | string
    link_rel?: string
    link_notes: string
    link_rss?: string
  }

  export type wp_linksUpdateManyMutationInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_linksUncheckedUpdateManyInput = {
    link_id?: BigIntFieldUpdateOperationsInput | bigint | number
    link_url?: StringFieldUpdateOperationsInput | string
    link_name?: StringFieldUpdateOperationsInput | string
    link_image?: StringFieldUpdateOperationsInput | string
    link_target?: StringFieldUpdateOperationsInput | string
    link_description?: StringFieldUpdateOperationsInput | string
    link_visible?: StringFieldUpdateOperationsInput | string
    link_owner?: BigIntFieldUpdateOperationsInput | bigint | number
    link_rating?: IntFieldUpdateOperationsInput | number
    link_updated?: DateTimeFieldUpdateOperationsInput | Date | string
    link_rel?: StringFieldUpdateOperationsInput | string
    link_notes?: StringFieldUpdateOperationsInput | string
    link_rss?: StringFieldUpdateOperationsInput | string
  }

  export type wp_optionsCreateInput = {
    option_id?: bigint | number
    option_name?: string
    option_value: string
    autoload?: string
  }

  export type wp_optionsUncheckedCreateInput = {
    option_id?: bigint | number
    option_name?: string
    option_value: string
    autoload?: string
  }

  export type wp_optionsUpdateInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_optionsUncheckedUpdateInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_optionsCreateManyInput = {
    option_id?: bigint | number
    option_name?: string
    option_value: string
    autoload?: string
  }

  export type wp_optionsUpdateManyMutationInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_optionsUncheckedUpdateManyInput = {
    option_id?: BigIntFieldUpdateOperationsInput | bigint | number
    option_name?: StringFieldUpdateOperationsInput | string
    option_value?: StringFieldUpdateOperationsInput | string
    autoload?: StringFieldUpdateOperationsInput | string
  }

  export type wp_postmetaCreateInput = {
    meta_id?: bigint | number
    post_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_postmetaUncheckedCreateInput = {
    meta_id?: bigint | number
    post_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_postmetaUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postmetaUncheckedUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postmetaCreateManyInput = {
    meta_id?: bigint | number
    post_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_postmetaUpdateManyMutationInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postmetaUncheckedUpdateManyInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_postsCreateInput = {
    ID?: bigint | number
    post_author?: bigint | number
    post_date?: Date | string
    post_date_gmt?: Date | string
    post_content: string
    post_title: string
    post_excerpt: string
    post_status?: string
    comment_status?: string
    ping_status?: string
    post_password?: string
    post_name?: string
    to_ping: string
    pinged: string
    post_modified?: Date | string
    post_modified_gmt?: Date | string
    post_content_filtered: string
    post_parent?: bigint | number
    guid?: string
    menu_order?: number
    post_type?: string
    post_mime_type?: string
    comment_count?: bigint | number
  }

  export type wp_postsUncheckedCreateInput = {
    ID?: bigint | number
    post_author?: bigint | number
    post_date?: Date | string
    post_date_gmt?: Date | string
    post_content: string
    post_title: string
    post_excerpt: string
    post_status?: string
    comment_status?: string
    ping_status?: string
    post_password?: string
    post_name?: string
    to_ping: string
    pinged: string
    post_modified?: Date | string
    post_modified_gmt?: Date | string
    post_content_filtered: string
    post_parent?: bigint | number
    guid?: string
    menu_order?: number
    post_type?: string
    post_mime_type?: string
    comment_count?: bigint | number
  }

  export type wp_postsUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_postsUncheckedUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_postsCreateManyInput = {
    ID?: bigint | number
    post_author?: bigint | number
    post_date?: Date | string
    post_date_gmt?: Date | string
    post_content: string
    post_title: string
    post_excerpt: string
    post_status?: string
    comment_status?: string
    ping_status?: string
    post_password?: string
    post_name?: string
    to_ping: string
    pinged: string
    post_modified?: Date | string
    post_modified_gmt?: Date | string
    post_content_filtered: string
    post_parent?: bigint | number
    guid?: string
    menu_order?: number
    post_type?: string
    post_mime_type?: string
    comment_count?: bigint | number
  }

  export type wp_postsUpdateManyMutationInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_postsUncheckedUpdateManyInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    post_author?: BigIntFieldUpdateOperationsInput | bigint | number
    post_date?: DateTimeFieldUpdateOperationsInput | Date | string
    post_date_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content?: StringFieldUpdateOperationsInput | string
    post_title?: StringFieldUpdateOperationsInput | string
    post_excerpt?: StringFieldUpdateOperationsInput | string
    post_status?: StringFieldUpdateOperationsInput | string
    comment_status?: StringFieldUpdateOperationsInput | string
    ping_status?: StringFieldUpdateOperationsInput | string
    post_password?: StringFieldUpdateOperationsInput | string
    post_name?: StringFieldUpdateOperationsInput | string
    to_ping?: StringFieldUpdateOperationsInput | string
    pinged?: StringFieldUpdateOperationsInput | string
    post_modified?: DateTimeFieldUpdateOperationsInput | Date | string
    post_modified_gmt?: DateTimeFieldUpdateOperationsInput | Date | string
    post_content_filtered?: StringFieldUpdateOperationsInput | string
    post_parent?: BigIntFieldUpdateOperationsInput | bigint | number
    guid?: StringFieldUpdateOperationsInput | string
    menu_order?: IntFieldUpdateOperationsInput | number
    post_type?: StringFieldUpdateOperationsInput | string
    post_mime_type?: StringFieldUpdateOperationsInput | string
    comment_count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_rank_math_internal_linksCreateInput = {
    id?: bigint | number
    url: string
    post_id: bigint | number
    target_post_id: bigint | number
    type: string
  }

  export type wp_rank_math_internal_linksUncheckedCreateInput = {
    id?: bigint | number
    url: string
    post_id: bigint | number
    target_post_id: bigint | number
    type: string
  }

  export type wp_rank_math_internal_linksUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    target_post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type wp_rank_math_internal_linksUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    target_post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type wp_rank_math_internal_linksCreateManyInput = {
    id?: bigint | number
    url: string
    post_id: bigint | number
    target_post_id: bigint | number
    type: string
  }

  export type wp_rank_math_internal_linksUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    target_post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type wp_rank_math_internal_linksUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    target_post_id?: BigIntFieldUpdateOperationsInput | bigint | number
    type?: StringFieldUpdateOperationsInput | string
  }

  export type wp_rank_math_internal_metaCreateInput = {
    object_id: bigint | number
    internal_link_count?: number | null
    external_link_count?: number | null
    incoming_link_count?: number | null
  }

  export type wp_rank_math_internal_metaUncheckedCreateInput = {
    object_id: bigint | number
    internal_link_count?: number | null
    external_link_count?: number | null
    incoming_link_count?: number | null
  }

  export type wp_rank_math_internal_metaUpdateInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    internal_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    external_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    incoming_link_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_rank_math_internal_metaUncheckedUpdateInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    internal_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    external_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    incoming_link_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_rank_math_internal_metaCreateManyInput = {
    object_id: bigint | number
    internal_link_count?: number | null
    external_link_count?: number | null
    incoming_link_count?: number | null
  }

  export type wp_rank_math_internal_metaUpdateManyMutationInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    internal_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    external_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    incoming_link_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_rank_math_internal_metaUncheckedUpdateManyInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    internal_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    external_link_count?: NullableIntFieldUpdateOperationsInput | number | null
    incoming_link_count?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type wp_rtl_rsm_logsCreateInput = {
    type: string
    section: string
    result: string
    date?: Date | string
  }

  export type wp_rtl_rsm_logsUncheckedCreateInput = {
    id?: number
    type: string
    section: string
    result: string
    date?: Date | string
  }

  export type wp_rtl_rsm_logsUpdateInput = {
    type?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    result?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_rtl_rsm_logsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    result?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_rtl_rsm_logsCreateManyInput = {
    id?: number
    type: string
    section: string
    result: string
    date?: Date | string
  }

  export type wp_rtl_rsm_logsUpdateManyMutationInput = {
    type?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    result?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_rtl_rsm_logsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    type?: StringFieldUpdateOperationsInput | string
    section?: StringFieldUpdateOperationsInput | string
    result?: StringFieldUpdateOperationsInput | string
    date?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_soogname_metaCreateInput = {
    meta_ID?: bigint | number
    object_ID: bigint | number
  }

  export type wp_soogname_metaUncheckedCreateInput = {
    meta_ID?: bigint | number
    object_ID: bigint | number
  }

  export type wp_soogname_metaUpdateInput = {
    meta_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    object_ID?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_soogname_metaUncheckedUpdateInput = {
    meta_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    object_ID?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_soogname_metaCreateManyInput = {
    meta_ID?: bigint | number
    object_ID: bigint | number
  }

  export type wp_soogname_metaUpdateManyMutationInput = {
    meta_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    object_ID?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_soogname_metaUncheckedUpdateManyInput = {
    meta_ID?: BigIntFieldUpdateOperationsInput | bigint | number
    object_ID?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_relationshipsCreateInput = {
    object_id?: bigint | number
    term_taxonomy_id?: bigint | number
    term_order?: number
  }

  export type wp_term_relationshipsUncheckedCreateInput = {
    object_id?: bigint | number
    term_taxonomy_id?: bigint | number
    term_order?: number
  }

  export type wp_term_relationshipsUpdateInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_relationshipsUncheckedUpdateInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_relationshipsCreateManyInput = {
    object_id?: bigint | number
    term_taxonomy_id?: bigint | number
    term_order?: number
  }

  export type wp_term_relationshipsUpdateManyMutationInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_relationshipsUncheckedUpdateManyInput = {
    object_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_order?: IntFieldUpdateOperationsInput | number
  }

  export type wp_term_taxonomyCreateInput = {
    term_taxonomy_id?: bigint | number
    term_id?: bigint | number
    taxonomy?: string
    description: string
    parent?: bigint | number
    count?: bigint | number
  }

  export type wp_term_taxonomyUncheckedCreateInput = {
    term_taxonomy_id?: bigint | number
    term_id?: bigint | number
    taxonomy?: string
    description: string
    parent?: bigint | number
    count?: bigint | number
  }

  export type wp_term_taxonomyUpdateInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_taxonomyUncheckedUpdateInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_taxonomyCreateManyInput = {
    term_taxonomy_id?: bigint | number
    term_id?: bigint | number
    taxonomy?: string
    description: string
    parent?: bigint | number
    count?: bigint | number
  }

  export type wp_term_taxonomyUpdateManyMutationInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_term_taxonomyUncheckedUpdateManyInput = {
    term_taxonomy_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    taxonomy?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    parent?: BigIntFieldUpdateOperationsInput | bigint | number
    count?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termmetaCreateInput = {
    meta_id?: bigint | number
    term_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_termmetaUncheckedCreateInput = {
    meta_id?: bigint | number
    term_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_termmetaUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termmetaUncheckedUpdateInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termmetaCreateManyInput = {
    meta_id?: bigint | number
    term_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_termmetaUpdateManyMutationInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termmetaUncheckedUpdateManyInput = {
    meta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_termsCreateInput = {
    term_id?: bigint | number
    name?: string
    slug?: string
    term_group?: bigint | number
  }

  export type wp_termsUncheckedCreateInput = {
    term_id?: bigint | number
    name?: string
    slug?: string
    term_group?: bigint | number
  }

  export type wp_termsUpdateInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termsUncheckedUpdateInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termsCreateManyInput = {
    term_id?: bigint | number
    name?: string
    slug?: string
    term_group?: bigint | number
  }

  export type wp_termsUpdateManyMutationInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_termsUncheckedUpdateManyInput = {
    term_id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    term_group?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type wp_usermetaCreateInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_usermetaUncheckedCreateInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_usermetaUpdateInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usermetaUncheckedUpdateInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usermetaCreateManyInput = {
    umeta_id?: bigint | number
    user_id?: bigint | number
    meta_key?: string | null
    meta_value?: string | null
  }

  export type wp_usermetaUpdateManyMutationInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usermetaUncheckedUpdateManyInput = {
    umeta_id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: BigIntFieldUpdateOperationsInput | bigint | number
    meta_key?: NullableStringFieldUpdateOperationsInput | string | null
    meta_value?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type wp_usersCreateInput = {
    ID?: bigint | number
    user_login?: string
    user_pass?: string
    user_nicename?: string
    user_email?: string
    user_url?: string
    user_registered?: Date | string
    user_activation_key?: string
    user_status?: number
    display_name?: string
  }

  export type wp_usersUncheckedCreateInput = {
    ID?: bigint | number
    user_login?: string
    user_pass?: string
    user_nicename?: string
    user_email?: string
    user_url?: string
    user_registered?: Date | string
    user_activation_key?: string
    user_status?: number
    display_name?: string
  }

  export type wp_usersUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_usersUncheckedUpdateInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_usersCreateManyInput = {
    ID?: bigint | number
    user_login?: string
    user_pass?: string
    user_nicename?: string
    user_email?: string
    user_url?: string
    user_registered?: Date | string
    user_activation_key?: string
    user_status?: number
    display_name?: string
  }

  export type wp_usersUpdateManyMutationInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_usersUncheckedUpdateManyInput = {
    ID?: BigIntFieldUpdateOperationsInput | bigint | number
    user_login?: StringFieldUpdateOperationsInput | string
    user_pass?: StringFieldUpdateOperationsInput | string
    user_nicename?: StringFieldUpdateOperationsInput | string
    user_email?: StringFieldUpdateOperationsInput | string
    user_url?: StringFieldUpdateOperationsInput | string
    user_registered?: DateTimeFieldUpdateOperationsInput | Date | string
    user_activation_key?: StringFieldUpdateOperationsInput | string
    user_status?: IntFieldUpdateOperationsInput | number
    display_name?: StringFieldUpdateOperationsInput | string
  }

  export type wp_wpr_above_the_foldCreateInput = {
    id?: bigint | number
    url?: string
    is_mobile?: boolean
    lcp?: string | null
    viewport?: string | null
    error_message?: string | null
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
  }

  export type wp_wpr_above_the_foldUncheckedCreateInput = {
    id?: bigint | number
    url?: string
    is_mobile?: boolean
    lcp?: string | null
    viewport?: string | null
    error_message?: string | null
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
  }

  export type wp_wpr_above_the_foldUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    lcp?: NullableStringFieldUpdateOperationsInput | string | null
    viewport?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpr_above_the_foldUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    lcp?: NullableStringFieldUpdateOperationsInput | string | null
    viewport?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpr_above_the_foldCreateManyInput = {
    id?: bigint | number
    url?: string
    is_mobile?: boolean
    lcp?: string | null
    viewport?: string | null
    error_message?: string | null
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
  }

  export type wp_wpr_above_the_foldUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    lcp?: NullableStringFieldUpdateOperationsInput | string | null
    viewport?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpr_above_the_foldUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    lcp?: NullableStringFieldUpdateOperationsInput | string | null
    viewport?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpr_rocket_cacheCreateInput = {
    id?: bigint | number
    url?: string
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
    is_locked?: boolean
  }

  export type wp_wpr_rocket_cacheUncheckedCreateInput = {
    id?: bigint | number
    url?: string
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
    is_locked?: boolean
  }

  export type wp_wpr_rocket_cacheUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    is_locked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type wp_wpr_rocket_cacheUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    is_locked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type wp_wpr_rocket_cacheCreateManyInput = {
    id?: bigint | number
    url?: string
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
    is_locked?: boolean
  }

  export type wp_wpr_rocket_cacheUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    is_locked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type wp_wpr_rocket_cacheUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    is_locked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type wp_wpr_rucss_used_cssCreateInput = {
    id?: bigint | number
    url?: string
    css?: string | null
    hash?: string | null
    error_code?: string | null
    error_message?: string | null
    unprocessedcss?: string | null
    retries?: boolean
    is_mobile?: boolean
    job_id?: string
    queue_name?: string
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
    submitted_at?: Date | string | null
    next_retry_time?: Date | string
  }

  export type wp_wpr_rucss_used_cssUncheckedCreateInput = {
    id?: bigint | number
    url?: string
    css?: string | null
    hash?: string | null
    error_code?: string | null
    error_message?: string | null
    unprocessedcss?: string | null
    retries?: boolean
    is_mobile?: boolean
    job_id?: string
    queue_name?: string
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
    submitted_at?: Date | string | null
    next_retry_time?: Date | string
  }

  export type wp_wpr_rucss_used_cssUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    css?: NullableStringFieldUpdateOperationsInput | string | null
    hash?: NullableStringFieldUpdateOperationsInput | string | null
    error_code?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    unprocessedcss?: NullableStringFieldUpdateOperationsInput | string | null
    retries?: BoolFieldUpdateOperationsInput | boolean
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    job_id?: StringFieldUpdateOperationsInput | string
    queue_name?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_retry_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpr_rucss_used_cssUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    css?: NullableStringFieldUpdateOperationsInput | string | null
    hash?: NullableStringFieldUpdateOperationsInput | string | null
    error_code?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    unprocessedcss?: NullableStringFieldUpdateOperationsInput | string | null
    retries?: BoolFieldUpdateOperationsInput | boolean
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    job_id?: StringFieldUpdateOperationsInput | string
    queue_name?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_retry_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpr_rucss_used_cssCreateManyInput = {
    id?: bigint | number
    url?: string
    css?: string | null
    hash?: string | null
    error_code?: string | null
    error_message?: string | null
    unprocessedcss?: string | null
    retries?: boolean
    is_mobile?: boolean
    job_id?: string
    queue_name?: string
    status?: string
    modified?: Date | string
    last_accessed?: Date | string
    submitted_at?: Date | string | null
    next_retry_time?: Date | string
  }

  export type wp_wpr_rucss_used_cssUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    css?: NullableStringFieldUpdateOperationsInput | string | null
    hash?: NullableStringFieldUpdateOperationsInput | string | null
    error_code?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    unprocessedcss?: NullableStringFieldUpdateOperationsInput | string | null
    retries?: BoolFieldUpdateOperationsInput | boolean
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    job_id?: StringFieldUpdateOperationsInput | string
    queue_name?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_retry_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type wp_wpr_rucss_used_cssUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    url?: StringFieldUpdateOperationsInput | string
    css?: NullableStringFieldUpdateOperationsInput | string | null
    hash?: NullableStringFieldUpdateOperationsInput | string | null
    error_code?: NullableStringFieldUpdateOperationsInput | string | null
    error_message?: NullableStringFieldUpdateOperationsInput | string | null
    unprocessedcss?: NullableStringFieldUpdateOperationsInput | string | null
    retries?: BoolFieldUpdateOperationsInput | boolean
    is_mobile?: BoolFieldUpdateOperationsInput | boolean
    job_id?: StringFieldUpdateOperationsInput | string
    queue_name?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    modified?: DateTimeFieldUpdateOperationsInput | Date | string
    last_accessed?: DateTimeFieldUpdateOperationsInput | Date | string
    submitted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    next_retry_time?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type wp_actionscheduler_actionsOrderByRelevanceInput = {
    fields: wp_actionscheduler_actionsOrderByRelevanceFieldEnum | wp_actionscheduler_actionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_actionscheduler_actionsCountOrderByAggregateInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    priority?: SortOrder
    args?: SortOrder
    schedule?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrder
  }

  export type wp_actionscheduler_actionsAvgOrderByAggregateInput = {
    action_id?: SortOrder
    priority?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    claim_id?: SortOrder
  }

  export type wp_actionscheduler_actionsMaxOrderByAggregateInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    priority?: SortOrder
    args?: SortOrder
    schedule?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrder
  }

  export type wp_actionscheduler_actionsMinOrderByAggregateInput = {
    action_id?: SortOrder
    hook?: SortOrder
    status?: SortOrder
    scheduled_date_gmt?: SortOrder
    scheduled_date_local?: SortOrder
    priority?: SortOrder
    args?: SortOrder
    schedule?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    last_attempt_gmt?: SortOrder
    last_attempt_local?: SortOrder
    claim_id?: SortOrder
    extended_args?: SortOrder
  }

  export type wp_actionscheduler_actionsSumOrderByAggregateInput = {
    action_id?: SortOrder
    priority?: SortOrder
    group_id?: SortOrder
    attempts?: SortOrder
    claim_id?: SortOrder
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type wp_actionscheduler_claimsCountOrderByAggregateInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
  }

  export type wp_actionscheduler_claimsAvgOrderByAggregateInput = {
    claim_id?: SortOrder
  }

  export type wp_actionscheduler_claimsMaxOrderByAggregateInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
  }

  export type wp_actionscheduler_claimsMinOrderByAggregateInput = {
    claim_id?: SortOrder
    date_created_gmt?: SortOrder
  }

  export type wp_actionscheduler_claimsSumOrderByAggregateInput = {
    claim_id?: SortOrder
  }

  export type wp_actionscheduler_groupsOrderByRelevanceInput = {
    fields: wp_actionscheduler_groupsOrderByRelevanceFieldEnum | wp_actionscheduler_groupsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_actionscheduler_groupsCountOrderByAggregateInput = {
    group_id?: SortOrder
    slug?: SortOrder
  }

  export type wp_actionscheduler_groupsAvgOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type wp_actionscheduler_groupsMaxOrderByAggregateInput = {
    group_id?: SortOrder
    slug?: SortOrder
  }

  export type wp_actionscheduler_groupsMinOrderByAggregateInput = {
    group_id?: SortOrder
    slug?: SortOrder
  }

  export type wp_actionscheduler_groupsSumOrderByAggregateInput = {
    group_id?: SortOrder
  }

  export type wp_actionscheduler_logsOrderByRelevanceInput = {
    fields: wp_actionscheduler_logsOrderByRelevanceFieldEnum | wp_actionscheduler_logsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_actionscheduler_logsCountOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
  }

  export type wp_actionscheduler_logsAvgOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
  }

  export type wp_actionscheduler_logsMaxOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
  }

  export type wp_actionscheduler_logsMinOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
    message?: SortOrder
    log_date_gmt?: SortOrder
    log_date_local?: SortOrder
  }

  export type wp_actionscheduler_logsSumOrderByAggregateInput = {
    log_id?: SortOrder
    action_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type wp_addonlibrary_addonsOrderByRelevanceInput = {
    fields: wp_addonlibrary_addonsOrderByRelevanceFieldEnum | wp_addonlibrary_addonsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_addonlibrary_addonsCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    name?: SortOrder
    alias?: SortOrder
    addontype?: SortOrder
    description?: SortOrder
    ordering?: SortOrder
    templates?: SortOrder
    config?: SortOrder
    catid?: SortOrder
    is_active?: SortOrder
    test_slot1?: SortOrder
    test_slot2?: SortOrder
    test_slot3?: SortOrder
  }

  export type wp_addonlibrary_addonsAvgOrderByAggregateInput = {
    id?: SortOrder
    ordering?: SortOrder
    catid?: SortOrder
    is_active?: SortOrder
  }

  export type wp_addonlibrary_addonsMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    name?: SortOrder
    alias?: SortOrder
    addontype?: SortOrder
    description?: SortOrder
    ordering?: SortOrder
    templates?: SortOrder
    config?: SortOrder
    catid?: SortOrder
    is_active?: SortOrder
    test_slot1?: SortOrder
    test_slot2?: SortOrder
    test_slot3?: SortOrder
  }

  export type wp_addonlibrary_addonsMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    name?: SortOrder
    alias?: SortOrder
    addontype?: SortOrder
    description?: SortOrder
    ordering?: SortOrder
    templates?: SortOrder
    config?: SortOrder
    catid?: SortOrder
    is_active?: SortOrder
    test_slot1?: SortOrder
    test_slot2?: SortOrder
    test_slot3?: SortOrder
  }

  export type wp_addonlibrary_addonsSumOrderByAggregateInput = {
    id?: SortOrder
    ordering?: SortOrder
    catid?: SortOrder
    is_active?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type wp_addonlibrary_categoriesOrderByRelevanceInput = {
    fields: wp_addonlibrary_categoriesOrderByRelevanceFieldEnum | wp_addonlibrary_categoriesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_addonlibrary_categoriesCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    alias?: SortOrder
    ordering?: SortOrder
    params?: SortOrder
    type?: SortOrder
    parent_id?: SortOrder
  }

  export type wp_addonlibrary_categoriesAvgOrderByAggregateInput = {
    id?: SortOrder
    ordering?: SortOrder
    parent_id?: SortOrder
  }

  export type wp_addonlibrary_categoriesMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    alias?: SortOrder
    ordering?: SortOrder
    params?: SortOrder
    type?: SortOrder
    parent_id?: SortOrder
  }

  export type wp_addonlibrary_categoriesMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    alias?: SortOrder
    ordering?: SortOrder
    params?: SortOrder
    type?: SortOrder
    parent_id?: SortOrder
  }

  export type wp_addonlibrary_categoriesSumOrderByAggregateInput = {
    id?: SortOrder
    ordering?: SortOrder
    parent_id?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type wp_ai_stats_eventsOrderByRelevanceInput = {
    fields: wp_ai_stats_eventsOrderByRelevanceFieldEnum | wp_ai_stats_eventsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_ai_stats_eventsCountOrderByAggregateInput = {
    id?: SortOrder
    dtime?: SortOrder
    track_url?: SortOrder
    track_title?: SortOrder
    track_artist?: SortOrder
    playlist_id?: SortOrder
    referrer_url?: SortOrder
    client_fingerprint?: SortOrder
    event_name?: SortOrder
    event_data?: SortOrder
    is_stream?: SortOrder
    processed?: SortOrder
  }

  export type wp_ai_stats_eventsAvgOrderByAggregateInput = {
    id?: SortOrder
    playlist_id?: SortOrder
    is_stream?: SortOrder
    processed?: SortOrder
  }

  export type wp_ai_stats_eventsMaxOrderByAggregateInput = {
    id?: SortOrder
    dtime?: SortOrder
    track_url?: SortOrder
    track_title?: SortOrder
    track_artist?: SortOrder
    playlist_id?: SortOrder
    referrer_url?: SortOrder
    client_fingerprint?: SortOrder
    event_name?: SortOrder
    event_data?: SortOrder
    is_stream?: SortOrder
    processed?: SortOrder
  }

  export type wp_ai_stats_eventsMinOrderByAggregateInput = {
    id?: SortOrder
    dtime?: SortOrder
    track_url?: SortOrder
    track_title?: SortOrder
    track_artist?: SortOrder
    playlist_id?: SortOrder
    referrer_url?: SortOrder
    client_fingerprint?: SortOrder
    event_name?: SortOrder
    event_data?: SortOrder
    is_stream?: SortOrder
    processed?: SortOrder
  }

  export type wp_ai_stats_eventsSumOrderByAggregateInput = {
    id?: SortOrder
    playlist_id?: SortOrder
    is_stream?: SortOrder
    processed?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type wp_ai_stats_playOrderByRelevanceInput = {
    fields: wp_ai_stats_playOrderByRelevanceFieldEnum | wp_ai_stats_playOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_ai_stats_playCountOrderByAggregateInput = {
    id?: SortOrder
    track_id?: SortOrder
    dtime?: SortOrder
    playlist_id?: SortOrder
    referrer_url?: SortOrder
    client_fingerprint?: SortOrder
    duration?: SortOrder
    seeks?: SortOrder
    pauses?: SortOrder
    skipped?: SortOrder
    downloaded?: SortOrder
  }

  export type wp_ai_stats_playAvgOrderByAggregateInput = {
    id?: SortOrder
    track_id?: SortOrder
    playlist_id?: SortOrder
    duration?: SortOrder
    seeks?: SortOrder
    pauses?: SortOrder
    skipped?: SortOrder
    downloaded?: SortOrder
  }

  export type wp_ai_stats_playMaxOrderByAggregateInput = {
    id?: SortOrder
    track_id?: SortOrder
    dtime?: SortOrder
    playlist_id?: SortOrder
    referrer_url?: SortOrder
    client_fingerprint?: SortOrder
    duration?: SortOrder
    seeks?: SortOrder
    pauses?: SortOrder
    skipped?: SortOrder
    downloaded?: SortOrder
  }

  export type wp_ai_stats_playMinOrderByAggregateInput = {
    id?: SortOrder
    track_id?: SortOrder
    dtime?: SortOrder
    playlist_id?: SortOrder
    referrer_url?: SortOrder
    client_fingerprint?: SortOrder
    duration?: SortOrder
    seeks?: SortOrder
    pauses?: SortOrder
    skipped?: SortOrder
    downloaded?: SortOrder
  }

  export type wp_ai_stats_playSumOrderByAggregateInput = {
    id?: SortOrder
    track_id?: SortOrder
    playlist_id?: SortOrder
    duration?: SortOrder
    seeks?: SortOrder
    pauses?: SortOrder
    skipped?: SortOrder
    downloaded?: SortOrder
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type wp_ai_stats_trackOrderByRelevanceInput = {
    fields: wp_ai_stats_trackOrderByRelevanceFieldEnum | wp_ai_stats_trackOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_ai_stats_trackCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    url_hash?: SortOrder
    title?: SortOrder
    artist?: SortOrder
    duration_mean?: SortOrder
    duration_count?: SortOrder
    is_stream?: SortOrder
  }

  export type wp_ai_stats_trackAvgOrderByAggregateInput = {
    id?: SortOrder
    duration_mean?: SortOrder
    duration_count?: SortOrder
    is_stream?: SortOrder
  }

  export type wp_ai_stats_trackMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    url_hash?: SortOrder
    title?: SortOrder
    artist?: SortOrder
    duration_mean?: SortOrder
    duration_count?: SortOrder
    is_stream?: SortOrder
  }

  export type wp_ai_stats_trackMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    url_hash?: SortOrder
    title?: SortOrder
    artist?: SortOrder
    duration_mean?: SortOrder
    duration_count?: SortOrder
    is_stream?: SortOrder
  }

  export type wp_ai_stats_trackSumOrderByAggregateInput = {
    id?: SortOrder
    duration_mean?: SortOrder
    duration_count?: SortOrder
    is_stream?: SortOrder
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type wp_audier_elementor_cacheOrderByRelevanceInput = {
    fields: wp_audier_elementor_cacheOrderByRelevanceFieldEnum | wp_audier_elementor_cacheOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_audier_elementor_cacheCountOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    data?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_audier_elementor_cacheAvgOrderByAggregateInput = {
    id?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_audier_elementor_cacheMaxOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    data?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_audier_elementor_cacheMinOrderByAggregateInput = {
    id?: SortOrder
    key?: SortOrder
    data?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_audier_elementor_cacheSumOrderByAggregateInput = {
    id?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_commentmetaOrderByRelevanceInput = {
    fields: wp_commentmetaOrderByRelevanceFieldEnum | wp_commentmetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_commentmetaCountOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_commentmetaAvgOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
  }

  export type wp_commentmetaMaxOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_commentmetaMinOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_commentmetaSumOrderByAggregateInput = {
    meta_id?: SortOrder
    comment_id?: SortOrder
  }

  export type wp_commentsOrderByRelevanceInput = {
    fields: wp_commentsOrderByRelevanceFieldEnum | wp_commentsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_commentsCountOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsAvgOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_karma?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsMaxOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsMinOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_author?: SortOrder
    comment_author_email?: SortOrder
    comment_author_url?: SortOrder
    comment_author_IP?: SortOrder
    comment_date?: SortOrder
    comment_date_gmt?: SortOrder
    comment_content?: SortOrder
    comment_karma?: SortOrder
    comment_approved?: SortOrder
    comment_agent?: SortOrder
    comment_type?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_commentsSumOrderByAggregateInput = {
    comment_ID?: SortOrder
    comment_post_ID?: SortOrder
    comment_karma?: SortOrder
    comment_parent?: SortOrder
    user_id?: SortOrder
  }

  export type wp_cpmp_playerOrderByRelevanceInput = {
    fields: wp_cpmp_playerOrderByRelevanceFieldEnum | wp_cpmp_playerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_cpmp_playerCountOrderByAggregateInput = {
    id?: SortOrder
    player_name?: SortOrder
    config?: SortOrder
    playlist?: SortOrder
  }

  export type wp_cpmp_playerAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_cpmp_playerMaxOrderByAggregateInput = {
    id?: SortOrder
    player_name?: SortOrder
    config?: SortOrder
    playlist?: SortOrder
  }

  export type wp_cpmp_playerMinOrderByAggregateInput = {
    id?: SortOrder
    player_name?: SortOrder
    config?: SortOrder
    playlist?: SortOrder
  }

  export type wp_cpmp_playerSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_e_eventsOrderByRelevanceInput = {
    fields: wp_e_eventsOrderByRelevanceFieldEnum | wp_e_eventsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_e_eventsCountOrderByAggregateInput = {
    id?: SortOrder
    event_data?: SortOrder
    created_at?: SortOrder
  }

  export type wp_e_eventsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_e_eventsMaxOrderByAggregateInput = {
    id?: SortOrder
    event_data?: SortOrder
    created_at?: SortOrder
  }

  export type wp_e_eventsMinOrderByAggregateInput = {
    id?: SortOrder
    event_data?: SortOrder
    created_at?: SortOrder
  }

  export type wp_e_eventsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type wp_e_notesOrderByRelevanceInput = {
    fields: wp_e_notesOrderByRelevanceFieldEnum | wp_e_notesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_e_notesCountOrderByAggregateInput = {
    id?: SortOrder
    route_url?: SortOrder
    route_title?: SortOrder
    route_post_id?: SortOrder
    post_id?: SortOrder
    element_id?: SortOrder
    parent_id?: SortOrder
    author_id?: SortOrder
    author_display_name?: SortOrder
    status?: SortOrder
    position?: SortOrder
    content?: SortOrder
    is_resolved?: SortOrder
    is_public?: SortOrder
    last_activity_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_notesAvgOrderByAggregateInput = {
    id?: SortOrder
    route_post_id?: SortOrder
    post_id?: SortOrder
    parent_id?: SortOrder
    author_id?: SortOrder
  }

  export type wp_e_notesMaxOrderByAggregateInput = {
    id?: SortOrder
    route_url?: SortOrder
    route_title?: SortOrder
    route_post_id?: SortOrder
    post_id?: SortOrder
    element_id?: SortOrder
    parent_id?: SortOrder
    author_id?: SortOrder
    author_display_name?: SortOrder
    status?: SortOrder
    position?: SortOrder
    content?: SortOrder
    is_resolved?: SortOrder
    is_public?: SortOrder
    last_activity_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_notesMinOrderByAggregateInput = {
    id?: SortOrder
    route_url?: SortOrder
    route_title?: SortOrder
    route_post_id?: SortOrder
    post_id?: SortOrder
    element_id?: SortOrder
    parent_id?: SortOrder
    author_id?: SortOrder
    author_display_name?: SortOrder
    status?: SortOrder
    position?: SortOrder
    content?: SortOrder
    is_resolved?: SortOrder
    is_public?: SortOrder
    last_activity_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_notesSumOrderByAggregateInput = {
    id?: SortOrder
    route_post_id?: SortOrder
    post_id?: SortOrder
    parent_id?: SortOrder
    author_id?: SortOrder
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type wp_e_notes_users_relationsOrderByRelevanceInput = {
    fields: wp_e_notes_users_relationsOrderByRelevanceFieldEnum | wp_e_notes_users_relationsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_e_notes_users_relationsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    note_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_notes_users_relationsAvgOrderByAggregateInput = {
    id?: SortOrder
    note_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_e_notes_users_relationsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    note_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_notes_users_relationsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    note_id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_notes_users_relationsSumOrderByAggregateInput = {
    id?: SortOrder
    note_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_e_submissionsOrderByRelevanceInput = {
    fields: wp_e_submissionsOrderByRelevanceFieldEnum | wp_e_submissionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_e_submissionsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    hash_id?: SortOrder
    main_meta_id?: SortOrder
    post_id?: SortOrder
    referer?: SortOrder
    referer_title?: SortOrder
    element_id?: SortOrder
    form_name?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    user_ip?: SortOrder
    user_agent?: SortOrder
    actions_count?: SortOrder
    actions_succeeded_count?: SortOrder
    status?: SortOrder
    is_read?: SortOrder
    meta?: SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_submissionsAvgOrderByAggregateInput = {
    id?: SortOrder
    main_meta_id?: SortOrder
    post_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    actions_count?: SortOrder
    actions_succeeded_count?: SortOrder
  }

  export type wp_e_submissionsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    hash_id?: SortOrder
    main_meta_id?: SortOrder
    post_id?: SortOrder
    referer?: SortOrder
    referer_title?: SortOrder
    element_id?: SortOrder
    form_name?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    user_ip?: SortOrder
    user_agent?: SortOrder
    actions_count?: SortOrder
    actions_succeeded_count?: SortOrder
    status?: SortOrder
    is_read?: SortOrder
    meta?: SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_submissionsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    hash_id?: SortOrder
    main_meta_id?: SortOrder
    post_id?: SortOrder
    referer?: SortOrder
    referer_title?: SortOrder
    element_id?: SortOrder
    form_name?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    user_ip?: SortOrder
    user_agent?: SortOrder
    actions_count?: SortOrder
    actions_succeeded_count?: SortOrder
    status?: SortOrder
    is_read?: SortOrder
    meta?: SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_submissionsSumOrderByAggregateInput = {
    id?: SortOrder
    main_meta_id?: SortOrder
    post_id?: SortOrder
    campaign_id?: SortOrder
    user_id?: SortOrder
    actions_count?: SortOrder
    actions_succeeded_count?: SortOrder
  }

  export type wp_e_submissions_actions_logOrderByRelevanceInput = {
    fields: wp_e_submissions_actions_logOrderByRelevanceFieldEnum | wp_e_submissions_actions_logOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_e_submissions_actions_logCountOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
    action_name?: SortOrder
    action_label?: SortOrder
    status?: SortOrder
    log?: SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_submissions_actions_logAvgOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
  }

  export type wp_e_submissions_actions_logMaxOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
    action_name?: SortOrder
    action_label?: SortOrder
    status?: SortOrder
    log?: SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_submissions_actions_logMinOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
    action_name?: SortOrder
    action_label?: SortOrder
    status?: SortOrder
    log?: SortOrder
    created_at_gmt?: SortOrder
    updated_at_gmt?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type wp_e_submissions_actions_logSumOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
  }

  export type wp_e_submissions_valuesOrderByRelevanceInput = {
    fields: wp_e_submissions_valuesOrderByRelevanceFieldEnum | wp_e_submissions_valuesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_e_submissions_valuesCountOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
  }

  export type wp_e_submissions_valuesAvgOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
  }

  export type wp_e_submissions_valuesMaxOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
  }

  export type wp_e_submissions_valuesMinOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
    key?: SortOrder
    value?: SortOrder
  }

  export type wp_e_submissions_valuesSumOrderByAggregateInput = {
    id?: SortOrder
    submission_id?: SortOrder
  }

  export type wp_jet_post_typesOrderByRelevanceInput = {
    fields: wp_jet_post_typesOrderByRelevanceFieldEnum | wp_jet_post_typesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_jet_post_typesCountOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    status?: SortOrder
    labels?: SortOrder
    args?: SortOrder
    meta_fields?: SortOrder
  }

  export type wp_jet_post_typesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_jet_post_typesMaxOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    status?: SortOrder
    labels?: SortOrder
    args?: SortOrder
    meta_fields?: SortOrder
  }

  export type wp_jet_post_typesMinOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    status?: SortOrder
    labels?: SortOrder
    args?: SortOrder
    meta_fields?: SortOrder
  }

  export type wp_jet_post_typesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_jet_smart_filters_indexerOrderByRelevanceInput = {
    fields: wp_jet_smart_filters_indexerOrderByRelevanceFieldEnum | wp_jet_smart_filters_indexerOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_jet_smart_filters_indexerCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    item_id?: SortOrder
    item_query?: SortOrder
    item_key?: SortOrder
    item_value?: SortOrder
  }

  export type wp_jet_smart_filters_indexerAvgOrderByAggregateInput = {
    id?: SortOrder
    item_id?: SortOrder
  }

  export type wp_jet_smart_filters_indexerMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    item_id?: SortOrder
    item_query?: SortOrder
    item_key?: SortOrder
    item_value?: SortOrder
  }

  export type wp_jet_smart_filters_indexerMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    item_id?: SortOrder
    item_query?: SortOrder
    item_key?: SortOrder
    item_value?: SortOrder
  }

  export type wp_jet_smart_filters_indexerSumOrderByAggregateInput = {
    id?: SortOrder
    item_id?: SortOrder
  }

  export type wp_jet_taxonomiesOrderByRelevanceInput = {
    fields: wp_jet_taxonomiesOrderByRelevanceFieldEnum | wp_jet_taxonomiesOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_jet_taxonomiesCountOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    object_type?: SortOrder
    status?: SortOrder
    labels?: SortOrder
    args?: SortOrder
    meta_fields?: SortOrder
  }

  export type wp_jet_taxonomiesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_jet_taxonomiesMaxOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    object_type?: SortOrder
    status?: SortOrder
    labels?: SortOrder
    args?: SortOrder
    meta_fields?: SortOrder
  }

  export type wp_jet_taxonomiesMinOrderByAggregateInput = {
    id?: SortOrder
    slug?: SortOrder
    object_type?: SortOrder
    status?: SortOrder
    labels?: SortOrder
    args?: SortOrder
    meta_fields?: SortOrder
  }

  export type wp_jet_taxonomiesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_linksOrderByRelevanceInput = {
    fields: wp_linksOrderByRelevanceFieldEnum | wp_linksOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_linksCountOrderByAggregateInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
  }

  export type wp_linksAvgOrderByAggregateInput = {
    link_id?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
  }

  export type wp_linksMaxOrderByAggregateInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
  }

  export type wp_linksMinOrderByAggregateInput = {
    link_id?: SortOrder
    link_url?: SortOrder
    link_name?: SortOrder
    link_image?: SortOrder
    link_target?: SortOrder
    link_description?: SortOrder
    link_visible?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
    link_updated?: SortOrder
    link_rel?: SortOrder
    link_notes?: SortOrder
    link_rss?: SortOrder
  }

  export type wp_linksSumOrderByAggregateInput = {
    link_id?: SortOrder
    link_owner?: SortOrder
    link_rating?: SortOrder
  }

  export type wp_optionsOrderByRelevanceInput = {
    fields: wp_optionsOrderByRelevanceFieldEnum | wp_optionsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_optionsCountOrderByAggregateInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
  }

  export type wp_optionsAvgOrderByAggregateInput = {
    option_id?: SortOrder
  }

  export type wp_optionsMaxOrderByAggregateInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
  }

  export type wp_optionsMinOrderByAggregateInput = {
    option_id?: SortOrder
    option_name?: SortOrder
    option_value?: SortOrder
    autoload?: SortOrder
  }

  export type wp_optionsSumOrderByAggregateInput = {
    option_id?: SortOrder
  }

  export type wp_postmetaOrderByRelevanceInput = {
    fields: wp_postmetaOrderByRelevanceFieldEnum | wp_postmetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_postmetaCountOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_postmetaAvgOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
  }

  export type wp_postmetaMaxOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_postmetaMinOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_postmetaSumOrderByAggregateInput = {
    meta_id?: SortOrder
    post_id?: SortOrder
  }

  export type wp_postsOrderByRelevanceInput = {
    fields: wp_postsOrderByRelevanceFieldEnum | wp_postsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_postsCountOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsAvgOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_parent?: SortOrder
    menu_order?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsMaxOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsMinOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_date?: SortOrder
    post_date_gmt?: SortOrder
    post_content?: SortOrder
    post_title?: SortOrder
    post_excerpt?: SortOrder
    post_status?: SortOrder
    comment_status?: SortOrder
    ping_status?: SortOrder
    post_password?: SortOrder
    post_name?: SortOrder
    to_ping?: SortOrder
    pinged?: SortOrder
    post_modified?: SortOrder
    post_modified_gmt?: SortOrder
    post_content_filtered?: SortOrder
    post_parent?: SortOrder
    guid?: SortOrder
    menu_order?: SortOrder
    post_type?: SortOrder
    post_mime_type?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_postsSumOrderByAggregateInput = {
    ID?: SortOrder
    post_author?: SortOrder
    post_parent?: SortOrder
    menu_order?: SortOrder
    comment_count?: SortOrder
  }

  export type wp_rank_math_internal_linksOrderByRelevanceInput = {
    fields: wp_rank_math_internal_linksOrderByRelevanceFieldEnum | wp_rank_math_internal_linksOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_rank_math_internal_linksCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
    target_post_id?: SortOrder
    type?: SortOrder
  }

  export type wp_rank_math_internal_linksAvgOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    target_post_id?: SortOrder
  }

  export type wp_rank_math_internal_linksMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
    target_post_id?: SortOrder
    type?: SortOrder
  }

  export type wp_rank_math_internal_linksMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    post_id?: SortOrder
    target_post_id?: SortOrder
    type?: SortOrder
  }

  export type wp_rank_math_internal_linksSumOrderByAggregateInput = {
    id?: SortOrder
    post_id?: SortOrder
    target_post_id?: SortOrder
  }

  export type wp_rank_math_internal_metaCountOrderByAggregateInput = {
    object_id?: SortOrder
    internal_link_count?: SortOrder
    external_link_count?: SortOrder
    incoming_link_count?: SortOrder
  }

  export type wp_rank_math_internal_metaAvgOrderByAggregateInput = {
    object_id?: SortOrder
    internal_link_count?: SortOrder
    external_link_count?: SortOrder
    incoming_link_count?: SortOrder
  }

  export type wp_rank_math_internal_metaMaxOrderByAggregateInput = {
    object_id?: SortOrder
    internal_link_count?: SortOrder
    external_link_count?: SortOrder
    incoming_link_count?: SortOrder
  }

  export type wp_rank_math_internal_metaMinOrderByAggregateInput = {
    object_id?: SortOrder
    internal_link_count?: SortOrder
    external_link_count?: SortOrder
    incoming_link_count?: SortOrder
  }

  export type wp_rank_math_internal_metaSumOrderByAggregateInput = {
    object_id?: SortOrder
    internal_link_count?: SortOrder
    external_link_count?: SortOrder
    incoming_link_count?: SortOrder
  }

  export type wp_rtl_rsm_logsOrderByRelevanceInput = {
    fields: wp_rtl_rsm_logsOrderByRelevanceFieldEnum | wp_rtl_rsm_logsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_rtl_rsm_logsCountOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    section?: SortOrder
    result?: SortOrder
    date?: SortOrder
  }

  export type wp_rtl_rsm_logsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_rtl_rsm_logsMaxOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    section?: SortOrder
    result?: SortOrder
    date?: SortOrder
  }

  export type wp_rtl_rsm_logsMinOrderByAggregateInput = {
    id?: SortOrder
    type?: SortOrder
    section?: SortOrder
    result?: SortOrder
    date?: SortOrder
  }

  export type wp_rtl_rsm_logsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_soogname_metaMeta_IDObject_IDCompoundUniqueInput = {
    meta_ID: bigint | number
    object_ID: bigint | number
  }

  export type wp_soogname_metaCountOrderByAggregateInput = {
    meta_ID?: SortOrder
    object_ID?: SortOrder
  }

  export type wp_soogname_metaAvgOrderByAggregateInput = {
    meta_ID?: SortOrder
    object_ID?: SortOrder
  }

  export type wp_soogname_metaMaxOrderByAggregateInput = {
    meta_ID?: SortOrder
    object_ID?: SortOrder
  }

  export type wp_soogname_metaMinOrderByAggregateInput = {
    meta_ID?: SortOrder
    object_ID?: SortOrder
  }

  export type wp_soogname_metaSumOrderByAggregateInput = {
    meta_ID?: SortOrder
    object_ID?: SortOrder
  }

  export type wp_term_relationshipsObject_idTerm_taxonomy_idCompoundUniqueInput = {
    object_id: bigint | number
    term_taxonomy_id: bigint | number
  }

  export type wp_term_relationshipsCountOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsAvgOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsMaxOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsMinOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_relationshipsSumOrderByAggregateInput = {
    object_id?: SortOrder
    term_taxonomy_id?: SortOrder
    term_order?: SortOrder
  }

  export type wp_term_taxonomyOrderByRelevanceInput = {
    fields: wp_term_taxonomyOrderByRelevanceFieldEnum | wp_term_taxonomyOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_term_taxonomyTerm_idTaxonomyCompoundUniqueInput = {
    term_id: bigint | number
    taxonomy: string
  }

  export type wp_term_taxonomyCountOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomyAvgOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomyMaxOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomyMinOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    taxonomy?: SortOrder
    description?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_term_taxonomySumOrderByAggregateInput = {
    term_taxonomy_id?: SortOrder
    term_id?: SortOrder
    parent?: SortOrder
    count?: SortOrder
  }

  export type wp_termmetaOrderByRelevanceInput = {
    fields: wp_termmetaOrderByRelevanceFieldEnum | wp_termmetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_termmetaCountOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_termmetaAvgOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
  }

  export type wp_termmetaMaxOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_termmetaMinOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_termmetaSumOrderByAggregateInput = {
    meta_id?: SortOrder
    term_id?: SortOrder
  }

  export type wp_termsOrderByRelevanceInput = {
    fields: wp_termsOrderByRelevanceFieldEnum | wp_termsOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_termsCountOrderByAggregateInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsAvgOrderByAggregateInput = {
    term_id?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsMaxOrderByAggregateInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsMinOrderByAggregateInput = {
    term_id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    term_group?: SortOrder
  }

  export type wp_termsSumOrderByAggregateInput = {
    term_id?: SortOrder
    term_group?: SortOrder
  }

  export type wp_usermetaOrderByRelevanceInput = {
    fields: wp_usermetaOrderByRelevanceFieldEnum | wp_usermetaOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_usermetaCountOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_usermetaAvgOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_usermetaMaxOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_usermetaMinOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
    meta_key?: SortOrder
    meta_value?: SortOrder
  }

  export type wp_usermetaSumOrderByAggregateInput = {
    umeta_id?: SortOrder
    user_id?: SortOrder
  }

  export type wp_usersOrderByRelevanceInput = {
    fields: wp_usersOrderByRelevanceFieldEnum | wp_usersOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_usersCountOrderByAggregateInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
  }

  export type wp_usersAvgOrderByAggregateInput = {
    ID?: SortOrder
    user_status?: SortOrder
  }

  export type wp_usersMaxOrderByAggregateInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
  }

  export type wp_usersMinOrderByAggregateInput = {
    ID?: SortOrder
    user_login?: SortOrder
    user_pass?: SortOrder
    user_nicename?: SortOrder
    user_email?: SortOrder
    user_url?: SortOrder
    user_registered?: SortOrder
    user_activation_key?: SortOrder
    user_status?: SortOrder
    display_name?: SortOrder
  }

  export type wp_usersSumOrderByAggregateInput = {
    ID?: SortOrder
    user_status?: SortOrder
  }

  export type wp_wpr_above_the_foldOrderByRelevanceInput = {
    fields: wp_wpr_above_the_foldOrderByRelevanceFieldEnum | wp_wpr_above_the_foldOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpr_above_the_foldCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    is_mobile?: SortOrder
    lcp?: SortOrder
    viewport?: SortOrder
    error_message?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
  }

  export type wp_wpr_above_the_foldAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_wpr_above_the_foldMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    is_mobile?: SortOrder
    lcp?: SortOrder
    viewport?: SortOrder
    error_message?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
  }

  export type wp_wpr_above_the_foldMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    is_mobile?: SortOrder
    lcp?: SortOrder
    viewport?: SortOrder
    error_message?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
  }

  export type wp_wpr_above_the_foldSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_wpr_rocket_cacheOrderByRelevanceInput = {
    fields: wp_wpr_rocket_cacheOrderByRelevanceFieldEnum | wp_wpr_rocket_cacheOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpr_rocket_cacheCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    is_locked?: SortOrder
  }

  export type wp_wpr_rocket_cacheAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_wpr_rocket_cacheMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    is_locked?: SortOrder
  }

  export type wp_wpr_rocket_cacheMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    is_locked?: SortOrder
  }

  export type wp_wpr_rocket_cacheSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_wpr_rucss_used_cssOrderByRelevanceInput = {
    fields: wp_wpr_rucss_used_cssOrderByRelevanceFieldEnum | wp_wpr_rucss_used_cssOrderByRelevanceFieldEnum[]
    sort: SortOrder
    search: string
  }

  export type wp_wpr_rucss_used_cssCountOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    css?: SortOrder
    hash?: SortOrder
    error_code?: SortOrder
    error_message?: SortOrder
    unprocessedcss?: SortOrder
    retries?: SortOrder
    is_mobile?: SortOrder
    job_id?: SortOrder
    queue_name?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    submitted_at?: SortOrder
    next_retry_time?: SortOrder
  }

  export type wp_wpr_rucss_used_cssAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type wp_wpr_rucss_used_cssMaxOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    css?: SortOrder
    hash?: SortOrder
    error_code?: SortOrder
    error_message?: SortOrder
    unprocessedcss?: SortOrder
    retries?: SortOrder
    is_mobile?: SortOrder
    job_id?: SortOrder
    queue_name?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    submitted_at?: SortOrder
    next_retry_time?: SortOrder
  }

  export type wp_wpr_rucss_used_cssMinOrderByAggregateInput = {
    id?: SortOrder
    url?: SortOrder
    css?: SortOrder
    hash?: SortOrder
    error_code?: SortOrder
    error_message?: SortOrder
    unprocessedcss?: SortOrder
    retries?: SortOrder
    is_mobile?: SortOrder
    job_id?: SortOrder
    queue_name?: SortOrder
    status?: SortOrder
    modified?: SortOrder
    last_accessed?: SortOrder
    submitted_at?: SortOrder
    next_retry_time?: SortOrder
  }

  export type wp_wpr_rucss_used_cssSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[]
    notIn?: bigint[] | number[]
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    search?: string
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | null
    notIn?: bigint[] | number[] | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}